Index: SYEI_stamping_press_system/FRAME_part_TYPE_change_2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import win32com.client as win32\r\nimport main_program as mprog\r\nimport excel_parameter_change as epc\r\ndef FRAME_change_parameter2(name, i):\r\n    if name == 'FRAME3':\r\n        excel = epc.ExcelOp('FRAME3')\r\n        try:\r\n            excel.part_parameter('FRAME3', i)\r\n            print('FRAME3 Parameter change success')\r\n        except:\r\n            print('FRAME3 Parameter change error')\r\n        try:\r\n            if i== 0:\r\n                mprog.activatefeature('SN1_25250_Body', 2)\r\n                mprog.activatefeature('Hole_1', 1)\r\n                mprog.activatefeature('Hole_2', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_25250_PQ')\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_2560_S')\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_2560_U')\r\n            elif i== 1:\r\n                mprog.activatefeature('SN1_25250_Body', 2)\r\n                mprog.activatefeature('Hole_1', 1)\r\n                mprog.activatefeature('Hole_2', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_25250_PQ')\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_2560_S')\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_2560_U')\r\n\r\n            elif i== 2:\r\n                mprog.activatefeature('SN1_25250_Body', 2)\r\n                mprog.activatefeature('Hole_1', 1)\r\n                mprog.activatefeature('Hole_2', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_25250_PQ')\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_2560_S')\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_2560_U')\r\n            elif i == 3:\r\n                mprog.activatefeature('SN1_25250_Body', 2)\r\n                mprog.activatefeature('Hole_1', 1)\r\n                mprog.activatefeature('Hole_2', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_25250_PQ')\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_2560_S')\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_2560_U')\r\n            elif i == 4:\r\n                mprog.activatefeature('SN1_25250_Body', 2)\r\n                mprog.activatefeature('Hole_1', 1)\r\n                mprog.activatefeature('Hole_2', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_25250_PQ')\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_80250_R')\r\n            elif i== 5:\r\n                mprog.activatefeature('SN1_25250_Body', 2)\r\n                mprog.activatefeature('Hole_1', 1)\r\n                mprog.activatefeature('Hole_2', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_25250_PQ')\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_80250_R')\r\n            elif i == 6:\r\n                mprog.activatefeature('SN1_25250_Body', 2)\r\n                mprog.activatefeature('Hole_1', 1)\r\n                mprog.activatefeature('Hole_2', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_25250_PQ')\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_80250_R')\r\n            elif i == 7:\r\n                mprog.activatefeature('SN1_25250_Body', 2)\r\n                mprog.activatefeature('Hole_1', 1)\r\n                mprog.activatefeature('Hole_2', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_25250_PQ')\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_80250_R')\r\n            elif i == 8:\r\n                mprog.activatefeature('SN1_25250_Body', 2)\r\n                mprog.activatefeature('Hole_1', 1)\r\n                mprog.activatefeature('Hole_2', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_25250_PQ')\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_80250_R')\r\n        except:\r\n            print('FRAME3 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME3 Update success')\r\n            except:\r\n                print('FRAME3 Update error')\r\n    elif name == 'FRAME4':#已更改\r\n        excel = epc.ExcelOp('FRAME4')\r\n        try:\r\n            excel.part_parameter('FRAME4', i)\r\n            print('FRAME4 Parameter change success')\r\n        except:\r\n            print('FRAME4 Parameter change error')\r\n        try:\r\n            if i== 0:\r\n                mprog.activatefeature('SN1_25250_Body', 1)\r\n                mprog.activatefeature('Hole_1', 1)\r\n                mprog.activatefeature('CLUCTH_AIR_HOLE', 0)\r\n            elif i== 1:\r\n                mprog.activatefeature('SN1_25250_Body', 1)\r\n                mprog.activatefeature('Hole_1', 1)\r\n                mprog.activatefeature('CLUCTH_AIR_HOLE', 0)\r\n            elif i== 2:\r\n                mprog.activatefeature('SN1_25250_Body', 1)\r\n                mprog.activatefeature('Hole_1', 1)\r\n                mprog.activatefeature('CLUCTH_AIR_HOLE', 0)\r\n            elif i== 3:\r\n                mprog.activatefeature('SN1_25250_Body', 1)\r\n                mprog.activatefeature('Hole_1', 1)\r\n                mprog.activatefeature('CLUCTH_AIR_HOLE', 0)\r\n                mprog.activatefeature('Hole_3', 2)\r\n            elif i== 4:\r\n                mprog.activatefeature('SN1_25250_Body', 1)\r\n                mprog.activatefeature('Hole_1', 1)\r\n                mprog.activatefeature('CLUCTH_AIR_HOLE', 0)\r\n                mprog.activatefeature('Hole_3', 2)\r\n                mprog.activatefeature('Hole_4', 0)\r\n            elif i== 5:\r\n                mprog.activatefeature('SN1_25250_Body', 1)\r\n                mprog.activatefeature('Hole_1', 1)\r\n                mprog.activatefeature('CLUCTH_AIR_HOLE', 0)\r\n                mprog.activatefeature('Hole_3', 2)\r\n                mprog.activatefeature('Hole_4', 0)\r\n            elif i== 6:\r\n                mprog.activatefeature('SN1_25250_Body', 1)\r\n                mprog.activatefeature('Hole_1', 1)\r\n                mprog.activatefeature('CLUCTH_AIR_HOLE', 0)\r\n                mprog.activatefeature('Hole_3', 2)\r\n                mprog.activatefeature('Hole_4', 0)\r\n            elif i== 7:\r\n                mprog.activatefeature('SN1_25250_Body', 1)\r\n                mprog.activatefeature('Hole_1', 1)\r\n                mprog.activatefeature('CLUCTH_AIR_HOLE', 0)\r\n                mprog.activatefeature('Hole_3', 2)\r\n                mprog.activatefeature('Hole_4', 0)\r\n            elif i== 8:\r\n                mprog.activatefeature('SN1_25250_Body', 1)\r\n                mprog.activatefeature('Hole_1', 1)\r\n                mprog.activatefeature('CLUCTH_AIR_HOLE', 0)\r\n                mprog.activatefeature('Hole_3', 4)\r\n                mprog.activatefeature('Hole_4', 0)\r\n        except:\r\n            print('FRAME4 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME4 Update success')\r\n            except:\r\n                print('FRAME4 Update error')\r\n    elif name == 'FRAME6':\r\n        excel = epc.ExcelOp('FRAME6')\r\n        try:\r\n            excel.part_parameter('FRAME6', i)\r\n            print('FRAME6 Parameter change success')\r\n        except:\r\n            print('FRAME6 Parameter change error')\r\n        try:\r\n            if i==0:\r\n                mprog.activatefeature('FRAME_SN1_2545_Body', 0)\r\n                mprog.activatefeature('M16_i', 0)\r\n            elif i== 1:\r\n                mprog.activatefeature('FRAME_SN1_2545_Body', 0)\r\n                mprog.activatefeature('M16_i', 0)\r\n            elif i== 2:\r\n                mprog.activatefeature('FRAME_SN1_2545_Body', 0)\r\n                mprog.activatefeature('M16_i', 0)\r\n            elif i == 3:\r\n                mprog.activatefeature('FRAME_SN1_60_Body', 0)\r\n                mprog.activatefeature('M16_h FRAME9_L', 0)\r\n            elif i == 4:\r\n                mprog.activatefeature('FRAME_SN1_80110_Body', 0)\r\n                mprog.activatefeature('M16_h FRAME9_L', 0)\r\n            elif i == 5:\r\n                mprog.activatefeature('FRAME_SN1_80110_Body', 0)\r\n                mprog.activatefeature('M16_h FRAME9_L', 0)\r\n            elif i == 7:\r\n                mprog.activatefeature('FRAME_SN1_200_Body', 0)\r\n                mprog.activatefeature('M16_h FRAME9_L', 0)\r\n        except:\r\n            print('FRAME6 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME6 Update success')\r\n            except:\r\n                print('FRAME6 Update error')\r\n    elif name == 'FRAME7':#已更改\r\n        excel = epc.ExcelOp('FRAME7')\r\n        try:\r\n            excel.part_parameter('FRAME7', i)\r\n            print('FRAME7 Parameter change success')\r\n        except:\r\n            print('FRAME7 Parameter change error')\r\n        try:\r\n            if i== 0:\r\n                mprog.activatefeature('SN1_2560_Body', 1)\r\n                mprog.partbodyfeatureactivate('SN1_25_VWX')\r\n            elif i== 1:\r\n                mprog.activatefeature('SN1_2560_Body', 1)\r\n            elif i== 2:\r\n                mprog.activatefeature('SN1_2560_Body', 1)\r\n            elif i== 3:\r\n                mprog.activatefeature('SN1_2560_Body', 1)\r\n            elif i== 4:\r\n                mprog.activatefeature('FRAME_SN1_80250_Body', 4)\r\n                mprog.activatefeature('Hole_1', 0)\r\n            elif i== 5:\r\n                mprog.activatefeature('FRAME_SN1_80250_Body', 4)\r\n                mprog.activatefeature('Hole_1', 0)\r\n            elif i== 6:\r\n                mprog.activatefeature('FRAME_SN1_80250_Body', 4)\r\n                mprog.activatefeature('Hole_1', 0)\r\n            elif i== 7:\r\n                mprog.activatefeature('FRAME_SN1_80250_Body', 4)\r\n                mprog.activatefeature('Hole_1', 0)\r\n            elif i== 8:\r\n                mprog.activatefeature('FRAME_SN1_80250_Body', 4)\r\n                mprog.activatefeature('Hole_1', 0)\r\n        except:\r\n            print('FRAME7 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME7 Update success')\r\n            except:\r\n                print('FRAME7 Update error')\r\n    elif name == 'FRAME9':\r\n        excel = epc.ExcelOp('FRAME9')\r\n        try:\r\n            excel.part_parameter('FRAME9', i)\r\n            print('FRAME9 Parameter change success')\r\n        except:\r\n            print('FRAME9 Parameter change error')\r\n        try:\r\n            if i== 0:\r\n                mprog.activatefeature('SN1_2580_Body', 1)\r\n            elif i== 1:\r\n                mprog.activatefeature('SN1_2580_Body', 1)\r\n            elif i== 2:\r\n                mprog.activatefeature('SN1_2580_Body', 1)\r\n            elif i== 3:\r\n                mprog.activatefeature('SN1_2580_Body', 1)\r\n            elif i== 4:\r\n                mprog.activatefeature('channel steel', 0)\r\n            elif i== 5:\r\n                mprog.activatefeature('channel steel', 0)\r\n            elif i== 6:\r\n                mprog.activatefeature('channel steel', 0)\r\n            elif i== 7:\r\n                mprog.activatefeature('channel steel', 0)\r\n            elif i== 8:\r\n                mprog.activatefeature('channel steel', 0)\r\n        except:\r\n            print('FRAME9 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME9 Update success')\r\n            except:\r\n                print('FRAME9 Update error')\r\n    elif name == 'FRAME10':#已更改\r\n        excel = epc.ExcelOp('FRAME10')\r\n        try:\r\n            excel.part_parameter('FRAME10', i)\r\n            print('FRAME10 Parameter change success')\r\n        except:\r\n            print('FRAME10 Parameter change error')\r\n        try:\r\n            if i== 0:\r\n                mprog.activatefeature('SN1_2545_Body', 0)\r\n                mprog.activatefeature('Hole_1', 0)\r\n                mprog.partbodyfeatureactivate('SN1_25250_K')\r\n            elif i== 1:\r\n                mprog.activatefeature('SN1_2545_Body', 0)\r\n                mprog.activatefeature('Hole_1', 0)\r\n                mprog.partbodyfeatureactivate('SN1_25250_K')\r\n            elif i== 2:\r\n                mprog.activatefeature('SN1_2545_Body', 0)\r\n                mprog.activatefeature('Hole_1', 0)\r\n                mprog.partbodyfeatureactivate('SN1_25250_K')\r\n            elif i== 3:\r\n                mprog.activatefeature('SN1_60_Body', 0)\r\n                mprog.activatefeature('Hole_1', 0)\r\n                mprog.activatefeature('Hole_2', 0)\r\n                mprog.partbodyfeatureactivate('SN1_25250_K')\r\n            elif i== 4:\r\n                mprog.activatefeature('SN1_80110_Body', 0)\r\n                mprog.activatefeature('Hole_1', 0)\r\n                mprog.activatefeature('Hole_2', 0)\r\n                mprog.partbodyfeatureactivate('SN1_25250_K')\r\n            elif i== 5:\r\n                mprog.activatefeature('SN1_80110_Body', 0)\r\n                mprog.activatefeature('Hole_1', 0)\r\n                mprog.activatefeature('Hole_2', 0)\r\n                mprog.partbodyfeatureactivate('SN1_25250_K')\r\n            elif i== 6:\r\n                mprog.activatefeature('SN1_160250_Body', 0)\r\n                mprog.activatefeature('Hole_1', 0)\r\n                mprog.activatefeature('Hole_2', 0)\r\n                mprog.partbodyfeatureactivate('SN1_25250_K')\r\n            elif i== 7:\r\n                mprog.activatefeature('SN1_160250_Body', 0)\r\n                mprog.activatefeature('Hole_1', 0)\r\n                mprog.activatefeature('Hole_2', 0)\r\n                mprog.partbodyfeatureactivate('SN1_25250_K')\r\n            elif i== 8:\r\n                mprog.activatefeature('SN1_160250_Body', 0)\r\n                mprog.activatefeature('Hole_1', 0)\r\n                mprog.activatefeature('Hole_2', 0)\r\n                mprog.partbodyfeatureactivate('SN1_25250_K')\r\n        except:\r\n            print('FRAME10 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME10 Update success')\r\n            except:\r\n                print('FRAME10 Update error')\r\n    elif name == 'FRAME13':\r\n        excel = epc.ExcelOp('FRAME13')\r\n        try:\r\n            excel.part_parameter('FRAME13', i)\r\n            print('FRAME13 Parameter change success')\r\n        except:\r\n            print('FRAME13 Parameter change error')\r\n        try:\r\n            if i== 0:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.partbodyfeatureactivate('SN1_25_45_CD')\r\n                mprog.partbodyfeatureactivate('SN1_25_45_G')\r\n                mprog.activatefeature('GIB_OIL_HOLE', 1)\r\n                mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                mprog.activatefeature('Hole_4', 0)\r\n            elif i== 1:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.activatefeature('GIB_OIL_HOLE', 1)\r\n                mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                mprog.activatefeature('Hole_4', 0)\r\n            elif i== 2:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.partbodyfeatureactivate('SN1_25_45_CD')\r\n                mprog.partbodyfeatureactivate('SN1_25_45_G')\r\n                mprog.activatefeature('GIB_OIL_HOLE', 1)\r\n                mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                mprog.activatefeature('Hole_4', 0)\r\n            elif i == 3:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.activatefeature('GIB_OIL_HOLE', 1)\r\n                mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                mprog.activatefeature('Hole_4', 0)\r\n            elif i == 4:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                mprog.activatefeature('Hole_4', 0)\r\n            elif i== 5:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                mprog.activatefeature('Hole_4', 0)\r\n            elif i== 6:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                mprog.activatefeature('Hole_4', 0)\r\n            elif i== 7:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                mprog.activatefeature('Hole_4', 0)\r\n            elif i== 8:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                mprog.activatefeature('Hole_4', 0)\r\n        except:\r\n            print('FRAME13 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME13 Update success')\r\n            except:\r\n                print('FRAME13 Update error')\r\n    elif name == 'FRAME19':#已更改\r\n        excel = epc.ExcelOp('FRAME19')\r\n        try:\r\n            excel.part_parameter('FRAME19', i)\r\n            print('FRAME19 Parameter change success')\r\n        except:\r\n            print('FRAME19 Parameter change error')\r\n        try:\r\n            if i== 0:\r\n                mprog.activatefeature('SN1_2545_Body', 6)\r\n                mprog.partbodyfeatureactivate('SN1_25_X')\r\n                mprog.partbodyfeatureactivate('SN1_2535_Y')\r\n            elif i == 1:\r\n                mprog.activatefeature('SN1_2545_Body', 6)\r\n                mprog.partbodyfeatureactivate('SN1_2535_Y')\r\n                mprog.partbodyfeatureactivate(\"SN1_3545_AD\")\r\n            elif i== 2:\r\n                mprog.activatefeature('SN1_2545_Body', 6)\r\n                mprog.partbodyfeatureactivate('SN1_45_Y')\r\n                mprog.partbodyfeatureactivate('SN1_45_X')\r\n                mprog.partbodyfeatureactivate(\"SN1_3545_AD\")\r\n            elif i== 3:\r\n                mprog.activatefeature('SN1_60_Body', 8)\r\n            elif i== 4:\r\n                mprog.activatefeature('SN1_80110_Body', 5)\r\n            elif i== 5:\r\n                mprog.activatefeature('SN1_80110_Body', 5)\r\n            elif i== 6:\r\n                mprog.activatefeature('FRMAE_SN1_160_Body', 0)\r\n                mprog.activatefeature('FRAME_34_Hole_1', 0)\r\n            elif i== 7:\r\n                mprog.activatefeature('SN1_200_Body', 4)\r\n            elif i== 8:\r\n                mprog.activatefeature('SN1_250_Body', 0)\r\n        except:\r\n            print('FRAME19 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME19 Update success')\r\n            except:\r\n                print('FRAME19 Update error')\r\n    elif name == 'FRAME20':\r\n        excel = epc.ExcelOp('FRAME20')\r\n        try:\r\n            excel.part_parameter('FRAME20', i)\r\n            print('FRAME20 Parameter change success')\r\n        except:\r\n            print('FRAME20 Parameter change error')\r\n        try:\r\n            if i== 0:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.activatefeature('MOTOR_FIX_ADJUSTMENT_HOLE', 0)\r\n            elif i== 1:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.activatefeature('MOTOR_FIX_ADJUSTMENT_HOLE', 0)\r\n            elif i== 2:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.activatefeature('MOTOR_FIX_ADJUSTMENT_HOLE', 0)\r\n            elif i== 3:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.partbodyfeatureactivate('SN1_60250_C')\r\n                mprog.activatefeature('MOTOR_FIX_ADJUSTMENT_HOLE', 0)\r\n            elif i== 4:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.partbodyfeatureactivate('SN1_60250_C')\r\n                mprog.partbodyfeatureactivate('SN1_80250_DEF')\r\n                mprog.partbodyfeatureactivate('SN1_80250_G')\r\n                mprog.activatefeature('MOTOR_FIX_ADJUSTMENT_HOLE', 0)\r\n            elif i== 5:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.partbodyfeatureactivate('SN1_60250_C')\r\n                mprog.partbodyfeatureactivate('SN1_80250_DEF')\r\n                mprog.partbodyfeatureactivate('SN1_80250_G')\r\n                mprog.partbodyfeatureactivate('SN1_110160_ijk')\r\n                mprog.activatefeature('Hole_2', 0)\r\n            elif i== 6:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.partbodyfeatureactivate('SN1_60250_C')\r\n                mprog.partbodyfeatureactivate('SN1_80250_DEF')\r\n                mprog.partbodyfeatureactivate('SN1_80250_G')\r\n                mprog.partbodyfeatureactivate('SN1_110160_ijk')\r\n                mprog.activatefeature('Hole_2', 0)\r\n            elif i== 7:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.partbodyfeatureactivate('SN1_60250_C')\r\n                mprog.partbodyfeatureactivate('SN1_80250_DEF')\r\n                mprog.partbodyfeatureactivate('SN1_80250_G')\r\n                mprog.partbodyfeatureactivate('SN1_200250_hij')\r\n                mprog.activatefeature('Hole_2', 1)\r\n            elif i== 8:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.partbodyfeatureactivate('SN1_60250_C')\r\n                mprog.partbodyfeatureactivate('SN1_80250_DEF')\r\n                mprog.partbodyfeatureactivate('SN1_80250_G')\r\n                mprog.partbodyfeatureactivate('SN1_200250_hij')\r\n                mprog.activatefeature('Hole_2', 1)\r\n        except:\r\n            print('FRAME20 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME20 Update success')\r\n            except:\r\n                print('FRAME20 Update error')\r\n    elif name == 'FRAME22':#已更改\r\n        excel = epc.ExcelOp('FRAME22')\r\n        try:\r\n            excel.part_parameter('FRAME22', i)\r\n            print('FRAME22 Parameter change success')\r\n        except:\r\n            print('FRAME22 Parameter change error')\r\n        try:\r\n            if i== 0:\r\n                mprog.partbodyfeatureactivate('A(1)D')\r\n                mprog.partbodyfeatureactivate('SN1-2560_BE')\r\n                mprog.partbodyfeatureactivate('SN1_2545_I')\r\n                mprog.activatefeature('OPERATION_BOX_FIX_HOLE', 0)\r\n                mprog.activatefeature('SN1_2560_6_M8X16L_底孔27L', 0)\r\n            elif i== 1:\r\n                mprog.partbodyfeatureactivate('A(1)D')\r\n                mprog.partbodyfeatureactivate('SN1-2560_BE')\r\n                mprog.partbodyfeatureactivate('SN1_2545_I')\r\n                mprog.activatefeature('OPERATION_BOX_FIX_HOLE', 0)\r\n                mprog.activatefeature('SN1_2560_6_M8X16L_底孔27L', 0)\r\n            elif i== 2:\r\n                mprog.partbodyfeatureactivate('A(1)D')\r\n                mprog.partbodyfeatureactivate('SN1-2560_BE')\r\n                mprog.partbodyfeatureactivate('SN1_2545_I')\r\n                mprog.activatefeature('OPERATION_BOX_FIX_HOLE', 0)\r\n                mprog.activatefeature('SN1_2560_6_M8X16L_底孔27L', 0)\r\n            elif i== 3:\r\n                mprog.activatefeature('FRAME_SN1_60_Body', 0)\r\n                mprog.activatefeature('OPERATION_BOX_FIX_HOLE', 0)\r\n                mprog.activatefeature('Hole_3', 0)\r\n                mprog.activatefeature('SN1_2560_6_M8X16L_底孔27L', 0)\r\n            elif i== 4:\r\n                mprog.activatefeature('FRAME_SN1_80250_Body', 0)\r\n                mprog.activatefeature('OPERATION_BOX_FIX_HOLE', 0)\r\n                mprog.activatefeature('SN1_80250_6_M8X16L_底孔27L', 0)\r\n                mprog.activatefeature('Hole_3', 0)\r\n            elif i== 5:\r\n                mprog.activatefeature('FRAME_SN1_80250_Body', 0)\r\n                mprog.activatefeature('OPERATION_BOX_FIX_HOLE', 0)\r\n                mprog.activatefeature('SN1_80250_6_M8X16L_底孔27L', 0)\r\n                mprog.activatefeature('Hole_3', 0)\r\n            elif i== 6:\r\n                mprog.activatefeature('FRAME_SN1_80250_Body', 0)\r\n                mprog.activatefeature('OPERATION_BOX_FIX_HOLE', 0)\r\n                mprog.activatefeature('SN1_80250_6_M8X16L_底孔27L', 0)\r\n                mprog.activatefeature('Hole_3', 0)\r\n            elif i== 7:\r\n                mprog.activatefeature('FRAME_SN1_80250_Body', 0)\r\n                mprog.activatefeature('OPERATION_BOX_FIX_HOLE', 0)\r\n                mprog.activatefeature('SN1_80250_6_M8X16L_底孔27L', 0)\r\n                mprog.activatefeature('Hole_3', 0)\r\n            elif i== 8:\r\n                mprog.activatefeature('FRAME_SN1_80250_Body', 0)\r\n                mprog.activatefeature('OPERATION_BOX_FIX_HOLE', 0)\r\n                mprog.activatefeature('SN1_80250_6_M8X16L_底孔27L', 0)\r\n                mprog.activatefeature('Hole_3', 0)\r\n        except:\r\n            print('FRAME22 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME22 Update success')\r\n            except:\r\n                print('FRAME22 Update error')\r\n    elif name == 'FRAME25':\r\n        excel = epc.ExcelOp('FRAME25')\r\n        try:\r\n            excel.part_parameter('FRAME25', i)\r\n            print('FRAME25 Parameter change success')\r\n        except:\r\n            print('FRAME25 Parameter change error')\r\n        try:\r\n            if i==0:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.activatefeature('Hole_1', 0)\r\n                mprog.activatefeature('3_M8通', 0)\r\n            elif i==1:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.activatefeature('Hole_1', 0)\r\n                mprog.activatefeature('3_M8通', 0)\r\n            elif i==2:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.activatefeature('Hole_1', 0)\r\n                mprog.activatefeature('3_M8通', 0)\r\n            elif i==3:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.activatefeature('Hole_1', 0)\r\n                mprog.activatefeature('3_M8通', 0)\r\n        except:\r\n            print('FRAME25 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME25 Update success')\r\n            except:\r\n                print('FRAME25 Update error')\r\n    elif name == 'FRAME28':\r\n        excel = epc.ExcelOp('FRAME28')\r\n        try:\r\n            excel.part_parameter('FRAME28', i)\r\n            print('FRAME28 Parameter change success')\r\n        except:\r\n            print('FRAME28 Parameter change error')\r\n        try:\r\n            if i==0:\r\n                mprog.partbodyfeatureactivate('SN1_25250_ABD')\r\n                mprog.partbodyfeatureactivate('SN1_25250_E')\r\n                mprog.partbodyfeatureactivate('SN1_25250_F')\r\n            elif i==1:\r\n                mprog.partbodyfeatureactivate('SN1_25250_ABD')\r\n                mprog.partbodyfeatureactivate('SN1_25250_E')\r\n                mprog.partbodyfeatureactivate('SN1_25250_F')\r\n            elif i==2:\r\n                mprog.partbodyfeatureactivate('SN1_25250_ABD')\r\n                mprog.partbodyfeatureactivate('SN1_25250_E')\r\n                mprog.partbodyfeatureactivate('SN1_25250_F')\r\n            elif i==3:\r\n                mprog.partbodyfeatureactivate('SN1_25250_ABD')\r\n                mprog.partbodyfeatureactivate('SN1_25250_E')\r\n                mprog.partbodyfeatureactivate('SN1_25250_F')\r\n            elif i==4:\r\n                mprog.partbodyfeatureactivate('SN1_25250_ABD')\r\n                mprog.partbodyfeatureactivate('SN1_25250_E')\r\n                mprog.partbodyfeatureactivate('SN1_25250_F')\r\n            elif i==5:\r\n                mprog.partbodyfeatureactivate('SN1_25250_ABD')\r\n                mprog.partbodyfeatureactivate('SN1_25250_E')\r\n                mprog.partbodyfeatureactivate('SN1_25250_F')\r\n            elif i==6:\r\n                mprog.partbodyfeatureactivate('SN1_25250_ABD')\r\n                mprog.partbodyfeatureactivate('SN1_25250_E')\r\n                mprog.partbodyfeatureactivate('SN1_25250_F')\r\n            elif i==7:\r\n                mprog.partbodyfeatureactivate('SN1_25250_ABD')\r\n                mprog.partbodyfeatureactivate('SN1_25250_E')\r\n                mprog.partbodyfeatureactivate('SN1_25250_F')\r\n            elif i==8:\r\n                mprog.partbodyfeatureactivate('SN1_25250_ABD')\r\n                mprog.partbodyfeatureactivate('SN1_25250_E')\r\n                mprog.partbodyfeatureactivate('SN1_25250_F')\r\n        except:\r\n            print('FRAME28 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME28 Update success')\r\n            except:\r\n                print('FRAME28 Update error')\r\n    elif name == 'FRAME30':#已更改\r\n        excel = epc.ExcelOp('FRAME30')\r\n        try:\r\n            excel.part_parameter('FRAME30', i)\r\n            print('FRAME30 Parameter change success')\r\n        except:\r\n            print('FRAME30 Parameter change error')\r\n        try:\r\n            if i== 0:\r\n                mprog.partbodyfeatureactivate('SN1_25250_AE')\r\n                mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                mprog.partbodyfeatureactivate('SN1_25250_HIJ')\r\n                mprog.activatefeature('FRAME_CRANK_SHAFT', 0)\r\n                mprog.activatefeature('Second_degree_drop_wire_threading_hole', 0)\r\n                mprog.activatefeature('4_M14通', 0)\r\n            elif i== 1:\r\n                mprog.partbodyfeatureactivate('SN1_25250_AE')\r\n                mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                mprog.partbodyfeatureactivate('SN1_25250_HIJ')\r\n                mprog.activatefeature('FRAME_CRANK_SHAFT', 0)\r\n                mprog.activatefeature('Second_degree_drop_wire_threading_hole', 0)\r\n                mprog.activatefeature('4_M14通', 0)\r\n            elif i== 2:\r\n                mprog.partbodyfeatureactivate('SN1_25250_AE')\r\n                mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                mprog.partbodyfeatureactivate('SN1_25250_HIJ')\r\n                mprog.activatefeature('FRAME_CRANK_SHAFT', 0)\r\n                mprog.activatefeature('Second_degree_drop_wire_threading_hole', 0)\r\n                mprog.activatefeature('4_M14通', 0)\r\n            elif i== 3:\r\n                mprog.partbodyfeatureactivate('SN1_25250_AE')\r\n                mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                mprog.partbodyfeatureactivate('SN1_25250_HIJ')\r\n                mprog.activatefeature('FRAME_CRANK_SHAFT', 0)\r\n                mprog.activatefeature('Second_degree_drop_wire_threading_hole', 0)\r\n                mprog.activatefeature('4_M14通', 0)\r\n            elif i== 4:\r\n                mprog.partbodyfeatureactivate('SN1_25250_AE')\r\n                mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                mprog.partbodyfeatureactivate('SN1_25250_HIJ')\r\n                mprog.activatefeature('FRAME_CRANK_SHAFT', 0)\r\n                mprog.activatefeature('Second_degree_drop_wire_threading_hole', 0)\r\n                mprog.activatefeature('4_M14通', 0)\r\n            elif i== 5:\r\n                mprog.partbodyfeatureactivate('SN1_25250_AE')\r\n                mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                mprog.partbodyfeatureactivate('SN1_25250_HIJ')\r\n                mprog.activatefeature('FRAME_CRANK_SHAFT', 0)\r\n                mprog.activatefeature('Second_degree_drop_wire_threading_hole', 0)\r\n                mprog.activatefeature('4_M14通', 0)\r\n            elif i== 6:\r\n                mprog.partbodyfeatureactivate('SN1_25250_AE')\r\n                mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                mprog.partbodyfeatureactivate('SN1_25250_HIJ')\r\n                mprog.activatefeature('FRAME_CRANK_SHAFT', 0)\r\n                mprog.activatefeature('Second_degree_drop_wire_threading_hole', 0)\r\n                mprog.activatefeature('4_M14通', 0)\r\n            elif i== 7:\r\n                mprog.partbodyfeatureactivate('SN1_25250_AE')\r\n                mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                mprog.partbodyfeatureactivate('SN1_25250_HIJ')\r\n                mprog.activatefeature('FRAME_CRANK_SHAFT', 0)\r\n                mprog.activatefeature('Second_degree_drop_wire_threading_hole', 0)\r\n                mprog.activatefeature('4_M14通', 0)\r\n            elif i== 8:\r\n                mprog.partbodyfeatureactivate('SN1_25250_AE')\r\n                mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                mprog.partbodyfeatureactivate('SN1_25250_HIJ')\r\n                mprog.activatefeature('FRAME_CRANK_SHAFT', 0)\r\n                mprog.activatefeature('Second_degree_drop_wire_threading_hole', 0)\r\n                mprog.activatefeature('4_M14通', 0)\r\n\r\n\r\n        except:\r\n            print('FRAME30 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME30 Update success')\r\n            except:\r\n                print('FRAME30 Update error')\r\n    elif name == 'FRAME31':\r\n        excel = epc.ExcelOp('FRAME31')\r\n        try:\r\n            excel.part_parameter('FRAME31', i)\r\n            print('FRAME31 Parameter change success')\r\n        except:\r\n            print('FRAME31 Parameter change error')\r\n        try:\r\n            if i== 0:\r\n                mprog.partbodyfeatureactivate('Body')\r\n                mprog.activatefeature('FRAME_Body', 2)\r\n            elif i== 1:\r\n                mprog.partbodyfeatureactivate('Body')\r\n                mprog.activatefeature('FRAME_Body', 0)\r\n            elif i== 2:\r\n                mprog.partbodyfeatureactivate('Body')\r\n                mprog.activatefeature('FRAME_Body', 0)\r\n        except:\r\n            print('FRAME31 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME31 Update success')\r\n            except:\r\n                print('FRAME31 Update error')\r\n    elif name == 'FRAME32':\r\n        excel = epc.ExcelOp('FRAME32')\r\n        try:\r\n            excel.part_parameter('FRAME32', i)\r\n            print('FRAME32 Parameter change success')\r\n        except:\r\n            print('FRAME32 Parameter change error')\r\n        try:\r\n            if i== 0:\r\n                mprog.partbodyfeatureactivate('Body')\r\n            elif i== 1:\r\n                mprog.partbodyfeatureactivate('Body')\r\n            elif i== 2:\r\n                mprog.partbodyfeatureactivate('Body')\r\n            elif i== 3:\r\n                mprog.partbodyfeatureactivate('Body')\r\n            elif i== 4:\r\n                mprog.partbodyfeatureactivate('Body')\r\n            elif i== 5:\r\n                mprog.partbodyfeatureactivate('Body')\r\n            elif i== 6:\r\n                mprog.partbodyfeatureactivate('Body')\r\n            elif i== 7:\r\n                mprog.partbodyfeatureactivate('Body')\r\n            elif i== 8:\r\n                mprog.partbodyfeatureactivate('Body')\r\n        except:\r\n            print('FRAME32 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME32 Update success')\r\n            except:\r\n                print('FRAME32 Update error')\r\n    elif name == \"FRAME33\":\r\n        excel = epc.ExcelOp('FRAME33')\r\n        try:\r\n            excel.part_parameter('FRAME33', i)\r\n            print('FRAME33 Parameter change success')\r\n        except:\r\n            print('FRAME33 Parameter change error')\r\n        try:\r\n            if i== 0:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.partbodyfeatureactivate('SN1_2545_CEF')\r\n                mprog.activatefeature('Hole_1', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_2545_LMN')\r\n            elif i== 1:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.partbodyfeatureactivate('SN1_2545_CEF')\r\n                mprog.activatefeature('Hole_1', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_2545_LMN')\r\n            elif i== 2:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.partbodyfeatureactivate('SN1_2545_CEF')\r\n                mprog.activatefeature('Hole_1', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_2545_LMN')\r\n            elif i== 3:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.activatefeature('Hole_1', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_60_LMN')\r\n        except:\r\n            print('FRAME33 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME33 Update success')\r\n            except:\r\n                print('FRAME33 Update error')\r\n    elif name == 'FRAME34':\r\n        excel = epc.ExcelOp('FRAME34')\r\n        try:\r\n            excel.part_parameter('FRAME34', i)\r\n            print('FRAME34 Parameter change success')\r\n        except:\r\n            print('FRAME34 Parameter change error')\r\n        try:\r\n            if i== 0:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.partbodyfeatureactivate('SN1_2545_CD')\r\n                mprog.partbodyfeatureactivate('SN1_2535_J')\r\n                mprog.activatefeature('Air_pipe_wire_threading_hole', 0)\r\n                mprog.activatefeature('Hole_2', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_1_2545_PQR')\r\n            elif i== 1:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.partbodyfeatureactivate('SN1_2545_CD')\r\n                mprog.partbodyfeatureactivate('SN1_2535_J')\r\n                mprog.activatefeature('Air_pipe_wire_threading_hole', 0)\r\n                mprog.activatefeature('Hole_2', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_1_2545_PQR')\r\n            elif i== 2:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.partbodyfeatureactivate('SN1_2545_CD')\r\n                mprog.activatefeature('Air_pipe_wire_threading_hole', 0)\r\n                mprog.activatefeature('Hole_2', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_1_2545_PQR')\r\n            elif i== 3:\r\n                mprog.partbodyfeatureactivate('AB')\r\n                mprog.partbodyfeatureactivate('SN1_60_NM')\r\n                mprog.activatefeature('Air_pipe_wire_threading_hole', 0)\r\n                mprog.activatefeature('Hole_2', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_1_60_PQR')\r\n        except:\r\n            print('FRAME34 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME34 Update success')\r\n            except:\r\n                print('FRAME34 Update error')\r\n    elif name == 'FRAME35':#已更改\r\n        excel = epc.ExcelOp('FRAME35')\r\n        try:\r\n            excel.part_parameter('FRAME35', i)\r\n            print('FRAME35 Parameter change success')\r\n        except:\r\n            print('FRAME35 Parameter change error')\r\n        try:\r\n            if i== 0:\r\n                mprog.activatefeature('SN1_2545_Body', 0)\r\n                mprog.activatefeature('Hole', 2)\r\n                mprog.partbodyfeatureactivate('SN1_25250_L')\r\n            elif i== 1:\r\n                mprog.activatefeature('SN1_2545_Body', 0)\r\n                mprog.activatefeature('Hole', 2)\r\n                mprog.partbodyfeatureactivate('SN1_25250_L')\r\n            elif i== 2:\r\n                mprog.activatefeature('SN1_2545_Body', 0)\r\n                mprog.activatefeature('Hole', 2)\r\n                mprog.partbodyfeatureactivate('SN1_25250_L')\r\n            elif i== 3:\r\n                mprog.activatefeature('SN1_60_Body', 0)\r\n                mprog.activatefeature('Hole', 2)\r\n                mprog.partbodyfeatureactivate('SN1_25250_L')\r\n            elif i== 4:\r\n                mprog.activatefeature('SN1_80200_Body', 0)\r\n                mprog.activatefeature('Hole', 2)\r\n                mprog.partbodyfeatureactivate('SN1_25250_L')\r\n            elif i== 5:\r\n                mprog.activatefeature('SN1_80200_Body', 0)\r\n                mprog.activatefeature('Hole', 2)\r\n                mprog.partbodyfeatureactivate('SN1_25250_L')\r\n            elif i== 6:\r\n                mprog.activatefeature('SN1_80200_Body', 0)\r\n                mprog.activatefeature('Hole', 2)\r\n                mprog.partbodyfeatureactivate('SN1_25250_L')\r\n            elif i== 7:\r\n                mprog.activatefeature('SN1_80200_Body', 6)\r\n                mprog.activatefeature('Hole', 2)\r\n                mprog.partbodyfeatureactivate('SN1_25250_L')\r\n            elif i== 8:\r\n                mprog.activatefeature('SN1_250_Body', 0)\r\n                mprog.activatefeature('Hole', 3)\r\n\r\n\r\n        except:\r\n            print('FRAME35 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME35 Update success')\r\n            except:\r\n                print('FRAME35 Update error')\r\n    elif name == 'FRAME36':#已更改\r\n        excel = epc.ExcelOp('FRAME36')\r\n        try:\r\n            excel.part_parameter('FRAME36', i)\r\n            print('FRAME36 Parameter change success')\r\n        except:\r\n            print('FRAME36 Parameter change error')\r\n        try:\r\n            if i== 0:\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_25_Body')\r\n            elif i== 1:\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_3560_Body')\r\n            elif i== 2:\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_3560_Body')\r\n            elif i== 3:\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_3560_Body')\r\n        except:\r\n            print('FRAME36 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME36 Update success')\r\n            except:\r\n                print('FRAME36 Update error')\r\n    elif name == 'FRAME37':#已更改\r\n        excel = epc.ExcelOp('FRAME37')\r\n        try:\r\n            excel.part_parameter('FRAME37', i)\r\n            print('FRAME37 Parameter change success')\r\n        except:\r\n            print('FRAME37 Parameter change error')\r\n        try:\r\n            if i== 0:\r\n                mprog.partbodyfeatureactivate('Body')\r\n                mprog.partbodyfeatureactivate('FRAME_Body')\r\n            elif i== 1:\r\n                mprog.partbodyfeatureactivate('Body')\r\n                mprog.partbodyfeatureactivate('FRAME_Body')\r\n            elif i== 2:\r\n                mprog.partbodyfeatureactivate('Body')\r\n                mprog.partbodyfeatureactivate('FRAME_Body')\r\n            elif i== 3:\r\n                mprog.partbodyfeatureactivate('Body')\r\n                mprog.partbodyfeatureactivate('FRAME_Body')\r\n        except:\r\n            print('FRAME37 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME37 Update success')\r\n            except:\r\n                print('FRAME37 Update error')\r\n    elif name == 'FRAME38':\r\n        excel = epc.ExcelOp('FRAME38')\r\n        try:\r\n            excel.part_parameter('FRAME38', i)\r\n            print('FRAME38 Parameter change success')\r\n        except:\r\n            print('FRAME38 Parameter change error')\r\n        try:\r\n            if i==0:\r\n                mprog.partbodyfeatureactivate('ABD')\r\n                mprog.activatefeature('AIR_TANK_FIX_HOLE', 0)\r\n            elif i== 1:\r\n                mprog.partbodyfeatureactivate('ABD')\r\n                mprog.activatefeature('AIR_TANK_FIX_HOLE', 0)\r\n            elif i== 2:\r\n                mprog.partbodyfeatureactivate('ABD')\r\n                mprog.activatefeature('AIR_TANK_FIX_HOLE', 0)\r\n            elif i== 3:\r\n                mprog.partbodyfeatureactivate('ABD')\r\n                mprog.activatefeature('AIR_TANK_FIX_HOLE', 0)\r\n            elif i== 4:\r\n                mprog.partbodyfeatureactivate('ABD')\r\n                mprog.activatefeature('AIR_TANK_FIX_HOLE', 0)\r\n            elif i== 5:\r\n                mprog.partbodyfeatureactivate('ABD')\r\n                mprog.activatefeature('AIR_TANK_FIX_HOLE', 0)\r\n            elif i== 6:\r\n                mprog.partbodyfeatureactivate('ABD')\r\n                mprog.activatefeature('AIR_TANK_FIX_HOLE', 0)\r\n            elif i== 7:\r\n                mprog.partbodyfeatureactivate('ABD')\r\n                mprog.activatefeature('AIR_TANK_FIX_HOLE', 0)\r\n            elif i== 8:\r\n                mprog.partbodyfeatureactivate('ABD')\r\n                mprog.activatefeature('AIR_TANK_FIX_HOLE', 0)\r\n        except:\r\n            print('FRAME38 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME38 Update success')\r\n            except:\r\n                print('FRAME38 Update error')\r\n    elif name == 'FRAME49':#已更改\r\n        excel = epc.ExcelOp('FRAME49')\r\n        try:\r\n            excel.part_parameter('FRAME49', i)\r\n            print('FRAME49 Parameter change success')\r\n        except:\r\n            print('FRAME49 Parameter change error')\r\n        try:\r\n            if i== 4:\r\n                mprog.activatefeature('body', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_80250_c')\r\n                mprog.activatefeature('M12通', 0)\r\n            elif i== 5:\r\n                mprog.activatefeature('body', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_80250_c')\r\n                mprog.activatefeature('M12通', 0)\r\n            elif i== 6:\r\n                mprog.activatefeature('body', 0)\r\n                mprog.activatefeature('M12通', 0)\r\n            elif i== 7:\r\n                mprog.activatefeature('body', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_80250_c')\r\n                mprog.activatefeature('M12通', 0)\r\n            elif i== 8:\r\n                mprog.activatefeature('body', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_80250_c')\r\n                mprog.activatefeature('M12通', 0)\r\n        except:\r\n            print('FRAME49 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME49 Update success')\r\n            except:\r\n                print('FRAME49 Update error')\r\n    elif name == 'FRAME50':#已更改\r\n        excel = epc.ExcelOp('FRAME50')\r\n        try:\r\n            excel.part_parameter('FRAME50', i)\r\n            print('FRAME50 Parameter change success')\r\n        except:\r\n            print('FRAME50 Parameter change error')\r\n        try:\r\n            if i == 4:\r\n                mprog.activatefeature('Body', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_c')\r\n                mprog.activatefeature('Hole_1', 0)\r\n            elif i == 5:\r\n                mprog.activatefeature('Body', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_c')\r\n                mprog.activatefeature('Hole_1', 0)\r\n            elif i== 6:\r\n                mprog.activatefeature('Body', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_c')\r\n                mprog.activatefeature('Hole_1', 0)\r\n            elif i== 7:\r\n                mprog.activatefeature('Body', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_c')\r\n                mprog.activatefeature('Hole_1', 0)\r\n            elif i == 8:\r\n                mprog.activatefeature('Body', 0)\r\n                mprog.partbodyfeatureactivate('FRAME_SN1_c')\r\n                mprog.activatefeature('Hole_1', 0)\r\n        except:\r\n            print('FRAME50 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME50 Update success')\r\n            except:\r\n                print('FRAME50 Update error')\r\n    elif name == 'FRAME54':#已更改\r\n        excel = epc.ExcelOp('FRAME54')\r\n        try:\r\n            excel.part_parameter('FRAME54', i)\r\n            print('FRAME54 Parameter change success')\r\n        except:\r\n            print('FRAME54 Parameter change error')\r\n        try:\r\n            if i== 6:\r\n                mprog.partbodyfeatureactivate('Body')\r\n            elif i== 7:\r\n                mprog.partbodyfeatureactivate('Body')\r\n            elif i == 8:\r\n                mprog.partbodyfeatureactivate('Body')\r\n        except:\r\n            print('FRAME54 Parameter activate error')\r\n        finally:\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME54 Update success')\r\n            except:\r\n                print('FRAME54 Update error')\r\ndef BALL_SCREW_change(BALL_SCREW_name):\r\n    excel = epc.ExcelOp('尺寸整理表', 'BALL_SCREW')\r\n    if BALL_SCREW_name == '302B07S02':\r\n        BALL_SCREW_number = 0\r\n    elif BALL_SCREW_name == '302B07S03':\r\n        BALL_SCREW_number = 1\r\n    elif BALL_SCREW_name == '322B07S02':\r\n        BALL_SCREW_number = 2\r\n    elif BALL_SCREW_name == '322B07S03':\r\n        BALL_SCREW_number = 3\r\n    elif BALL_SCREW_name == '342B07S01':\r\n        BALL_SCREW_number = 4\r\n    elif BALL_SCREW_name == '342B07':\r\n        BALL_SCREW_number = 5\r\n    elif BALL_SCREW_name == '372B07S02':\r\n        BALL_SCREW_number = 6\r\n    elif BALL_SCREW_name == '372B07S04':\r\n        BALL_SCREW_number = 7\r\n    elif BALL_SCREW_name == '372B07':\r\n        BALL_SCREW_number = 8\r\n    elif BALL_SCREW_name == '392B07S06':\r\n        BALL_SCREW_number = 9\r\n    elif BALL_SCREW_name == '392B07S07':\r\n        BALL_SCREW_number = 10\r\n    elif BALL_SCREW_name == '392B07S08':\r\n        BALL_SCREW_number = 11\r\n    elif BALL_SCREW_name == '412B07S01':\r\n        BALL_SCREW_number = 12\r\n    elif BALL_SCREW_name == '412B07S02':\r\n        BALL_SCREW_number = 13\r\n    elif BALL_SCREW_name == '412B07':\r\n        BALL_SCREW_number = 14\r\n    elif BALL_SCREW_name == '432B07S01':\r\n        BALL_SCREW_number = 15\r\n    elif BALL_SCREW_name == '432B07S02':\r\n        BALL_SCREW_number = 16\r\n    elif BALL_SCREW_name == '432B07':\r\n        BALL_SCREW_number = 17\r\n    elif BALL_SCREW_name == '452B07S03':\r\n        BALL_SCREW_number = 18\r\n    elif BALL_SCREW_name == '452B07S04':\r\n        BALL_SCREW_number = 19\r\n    elif BALL_SCREW_name == '452B07S05':\r\n        BALL_SCREW_number = 20\r\n    elif BALL_SCREW_name == '472B07S03':\r\n        BALL_SCREW_number = 21\r\n    elif BALL_SCREW_name == '472B07S04':\r\n        BALL_SCREW_number = 22\r\n    elif BALL_SCREW_name == '472B07S05':\r\n        BALL_SCREW_number = 23\r\n    try:\r\n        excel.get_sheet_par('BALL_SCREW', BALL_SCREW_number)\r\n        print('BALL_SCREW Parameter change success')\r\n    except:\r\n        print('BALL_SCREW Parameter change error')\r\n    try:\r\n        if BALL_SCREW_name == \"302B07S02\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_T')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"302B07S03\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_T')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"322B07S02\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_T')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"322B07S03\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_T')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"342B07S01\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_T')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"342B07\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_T')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"372B07S02\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('Chamfer_AUAV')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AW')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AX')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"372B07S04\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('Chamfer_AUAV')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AW')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AX')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"372B07\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('Chamfer_AUAV')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AW')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AX')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"392B07S06\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('Chamfer_AUAV')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AW')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AX')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"392B07S07\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('Chamfer_AUAV')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AW')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AX')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"392B07S08\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('Chamfer_AUAV')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AW')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AX')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"412B07S01\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('Chamfer_AUAV')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AW')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AX')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"412B07S02\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('Chamfer_AUAV')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AW')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AX')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"412B07\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('Chamfer_AUAV')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AW')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AX')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"432B07S01\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('Chamfer_AUAV')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AW')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AX')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"432B07S02\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('Chamfer_AUAV')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AW')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AX')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"432B07\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('Chamfer_AUAV')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AW')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AX')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"452B07S03\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('Chamfer_AUAV')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AW')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AX')\r\n            mprog.partbodyfeatureactivate('Groove_AY')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"452B07S04\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('Chamfer_AUAV')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AW')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AX')\r\n            mprog.partbodyfeatureactivate('Groove_AY')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"452B07S05\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('Groove_AD')\r\n            mprog.partbodyfeatureactivate('Chamfer_AUAV')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AW')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AX')\r\n            mprog.partbodyfeatureactivate('Groove_AY')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"472B07S03\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AD')\r\n            mprog.partbodyfeatureactivate('Chamfer_AUAV')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AW')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AX')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AZ')\r\n        elif BALL_SCREW_name == \"472B07S04\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AD')\r\n            mprog.partbodyfeatureactivate('Chamfer_AUAV')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AW')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AX')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n        elif BALL_SCREW_name == \"472B07S05\":\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Body')\r\n            mprog.partbodyfeatureactivate('BALL_SCREW_Thread')\r\n            mprog.partbodyfeatureactivate('AE')\r\n            mprog.partbodyfeatureactivate('AB')\r\n            mprog.partbodyfeatureactivate('Hole_AAAC')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_O')\r\n            mprog.partbodyfeatureactivate('Chamfer_P')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_V')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_X')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_Y')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AD')\r\n            mprog.partbodyfeatureactivate('Chamfer_AUAV')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AW')\r\n            mprog.partbodyfeatureactivate('EdgeFillet_AX')\r\n            mprog.partbodyfeatureactivate('AFAH')\r\n            mprog.partbodyfeatureactivate('Hole_AJ')\r\n    except:\r\n        print('BALL_SCREW Parameter activate error')\r\n    finally:\r\n        try:\r\n            mprog.Update()\r\n            print('BALL_SCREW Update success')\r\n        except:\r\n            print('BALL_SCREW Update error')\r\n\r\n\r\n\r\nBALL_SCREW_change('472B07S05')
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SYEI_stamping_press_system/FRAME_part_TYPE_change_2.py b/SYEI_stamping_press_system/FRAME_part_TYPE_change_2.py
--- a/SYEI_stamping_press_system/FRAME_part_TYPE_change_2.py	
+++ b/SYEI_stamping_press_system/FRAME_part_TYPE_change_2.py	
@@ -1560,5 +1560,5 @@
             print('BALL_SCREW Update error')
 
 
-
-BALL_SCREW_change('472B07S05')
\ No newline at end of file
+#
+# BALL_SCREW_change('472B07S05')
\ No newline at end of file
Index: SYEI_stamping_press_system/machining_part_TYPE_change.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import main_program as mprog\r\nimport excel_parameter_change as epc\r\nimport sys\r\n\r\n\r\ndef modify_list_elements(enter_text, input_list):\r\n    modified_list = [f'{item}%s' % (enter_text) for item in input_list]\r\n    return modified_list\r\n\r\n\r\n# 母檔變數變換\r\ndef change_machining_parameter(name, stamping_press_type, machiningdiepad, travel_type):\r\n    all_part_list = epc.ExcelOp('尺寸整理表', '沖床機架零件清單').get_col_cell(1)\r\n    try:\r\n        if name == 'FRAME1':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME1')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME1', stamping_press_type)\r\n                print('FRAME1 Parameter change success')\r\n            except BaseException:\r\n                print('FRAME1 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('before250_喉口')\r\n                    mprog.partbodyfeatureactivate('Z1')\r\n                    mprog.partbodyfeatureactivate('machining_DD')\r\n                    mprog.partbodyfeatureactivate('machining_E上方研磨')\r\n                    mprog.activatefeature('110通孔', 0)\r\n                    mprog.activatefeature('油面劑用', 0)\r\n                    mprog.activatefeature('60通孔', 0)\r\n                    mprog.activatefeature('電動黃油泵用', 0)\r\n                    mprog.activatefeature('吊孔', 0)\r\n                    mprog.activatefeature('光電裝置電線固定孔', 5)\r\n                    mprog.activatefeature('配管用(電動黃油泵→潤滑分配塊用)', 2)\r\n                    mprog.activatefeature('兩點組合', 0)\r\n                    mprog.activatefeature('machining_2x8_12通孔', 0)\r\n                    mprog.activatefeature('machining_aaaaa2', 0)\r\n                    mprog.activatefeature('machining_aaaaa4', 0)\r\n                    mprog.activatefeature('6_M10X12L', 0)\r\n                    mprog.partbodyfeatureactivate('JJ')\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('before250_喉口')\r\n                    mprog.partbodyfeatureactivate('Z1')\r\n                    mprog.partbodyfeatureactivate('machining_DD')\r\n                    mprog.partbodyfeatureactivate('machining_E上方研磨')\r\n                    mprog.activatefeature('110通孔', 0)\r\n                    mprog.activatefeature('油面劑用', 0)\r\n                    mprog.activatefeature('60通孔', 0)\r\n                    mprog.activatefeature('電動黃油泵用', 0)\r\n                    mprog.activatefeature('吊孔', 0)\r\n                    mprog.activatefeature('光電裝置電線固定孔', 5)\r\n                    mprog.activatefeature('配管用(電動黃油泵→潤滑分配塊用)', 3)\r\n                    mprog.activatefeature('兩點組合', 0)\r\n                    mprog.activatefeature('machining_2x8_12通孔', 0)\r\n                    mprog.activatefeature('machining_aaaaa2', 0)\r\n                    mprog.activatefeature('machining_aaaaa4', 0)\r\n                    mprog.activatefeature('6_M10X12L', 0)\r\n                    mprog.partbodyfeatureactivate('JJ')\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('before250_喉口')\r\n                    mprog.partbodyfeatureactivate('Z1')\r\n                    mprog.partbodyfeatureactivate('machining_DD')\r\n                    mprog.partbodyfeatureactivate('machining_E上方研磨')\r\n                    mprog.activatefeature('machining_2x8_12通孔', 0)\r\n                    mprog.activatefeature('machining_aaaaa2', 0)\r\n                    mprog.activatefeature('machining_aaaaa4', 0)\r\n                    mprog.activatefeature('110通孔', 0)\r\n                    mprog.activatefeature('油面劑用', 0)\r\n                    mprog.activatefeature('60通孔', 0)\r\n                    mprog.activatefeature('電動黃油泵用', 0)\r\n                    mprog.activatefeature('吊孔', 0)\r\n                    mprog.activatefeature('光電裝置電線固定孔', 5)\r\n                    mprog.activatefeature('配管用(電動黃油泵→潤滑分配塊用)', 2)\r\n                    mprog.activatefeature('兩點組合', 0)\r\n                    mprog.activatefeature('6_M10X12L', 0)\r\n                    mprog.partbodyfeatureactivate('JJ')\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('before250_喉口')\r\n                    mprog.partbodyfeatureactivate('Z1')\r\n                    mprog.partbodyfeatureactivate('machining_DD')\r\n                    mprog.partbodyfeatureactivate('machining_E上方研磨')\r\n                    mprog.activatefeature('machining_2x8_12通孔', 0)\r\n                    mprog.activatefeature('machining_aaaaa2', 0)\r\n                    mprog.activatefeature('machining_aaaaa4', 0)\r\n                    mprog.activatefeature('110通孔', 0)\r\n                    mprog.activatefeature('油面劑用', 0)\r\n                    mprog.activatefeature('60通孔', 0)\r\n                    mprog.activatefeature('電動黃油泵用', 0)\r\n                    mprog.activatefeature('吊孔', 0)\r\n                    mprog.activatefeature('光電裝置電線固定孔', 5)\r\n                    mprog.activatefeature('配管用(電動黃油泵→潤滑分配塊用)', 2)\r\n                    mprog.activatefeature('兩點組合', 0)\r\n                    mprog.activatefeature('6_M10X12L', 0)\r\n                    mprog.partbodyfeatureactivate('JJ')\r\n                elif stamping_press_type == 4:\r\n                    mprog.partbodyfeatureactivate('before250_喉口')\r\n                    mprog.partbodyfeatureactivate('Z1')\r\n                    mprog.partbodyfeatureactivate('machining_DD')\r\n                    mprog.partbodyfeatureactivate('machining_E上方研磨')\r\n                    mprog.activatefeature('machining_2x8_12通孔', 0)\r\n                    mprog.activatefeature('machining_aaaaa2', 0)\r\n                    mprog.activatefeature('machining_aaaaa4', 0)\r\n                    mprog.activatefeature('1-M5X10L(配管用)', 0)\r\n                    mprog.activatefeature('油面劑用', 0)\r\n                    mprog.activatefeature('60通孔', 0)\r\n                    mprog.activatefeature('電動黃油泵用', 0)\r\n                    mprog.activatefeature('吊孔', 0)\r\n                    mprog.activatefeature('光電裝置電線固定孔', 5)\r\n                    mprog.activatefeature('配管用(電動黃油泵→潤滑分配塊用)', 3)\r\n                    mprog.activatefeature('兩點組合', 0)\r\n                    mprog.activatefeature('3-M5X10L(配管用)(r1)', 1)\r\n                elif stamping_press_type == 5:\r\n                    mprog.partbodyfeatureactivate('before250_喉口')\r\n                    mprog.partbodyfeatureactivate('Z1')\r\n                    mprog.partbodyfeatureactivate('machining_DD')\r\n                    mprog.partbodyfeatureactivate('machining_E上方研磨')\r\n                    mprog.activatefeature('machining_2x8_12通孔', 0)\r\n                    mprog.activatefeature('machining_aaaaa2', 0)\r\n                    mprog.activatefeature('machining_aaaaa4', 0)\r\n                    mprog.activatefeature('1-M5X10L(配管用)', 0)\r\n                    mprog.activatefeature('油面劑用', 0)\r\n                    mprog.activatefeature('60通孔', 0)\r\n                    mprog.activatefeature('電動黃油泵用', 0)\r\n                    mprog.activatefeature('吊孔', 0)\r\n                    mprog.activatefeature('光電裝置電線固定孔', 0)\r\n                    mprog.activatefeature('配管用(電動黃油泵→潤滑分配塊用)', 3)\r\n                    mprog.activatefeature('兩點組合', 0)\r\n                    mprog.activatefeature('3-M5X10L(配管用)(r1)', 2)\r\n                elif stamping_press_type == 6:\r\n                    mprog.partbodyfeatureactivate('before250_喉口')\r\n                    mprog.partbodyfeatureactivate('Z1')\r\n                    mprog.partbodyfeatureactivate('machining_DD')\r\n                    mprog.partbodyfeatureactivate('machining_E上方研磨')\r\n                    mprog.activatefeature('machining_2x8_12通孔', 0)\r\n                    mprog.activatefeature('machining_aaaaa2', 0)\r\n                    mprog.activatefeature('machining_aaaaa4', 0)\r\n                    mprog.activatefeature('1-M5X10L(配管用)', 0)\r\n                    mprog.activatefeature('3-M5X10L(配管用)(r1)', 0)\r\n                    mprog.activatefeature('油面劑用', 0)\r\n                    mprog.activatefeature('60通孔', 0)\r\n                    mprog.activatefeature('電動黃油泵用', 0)\r\n                    mprog.activatefeature('吊孔', 0)\r\n                    mprog.activatefeature('光電裝置電線固定孔', 0)\r\n                    mprog.activatefeature('配管用(電動黃油泵→潤滑分配塊用)', 5)\r\n                    mprog.activatefeature('兩點組合', 0)\r\n                elif stamping_press_type == 7:\r\n                    mprog.partbodyfeatureactivate('before250_喉口')\r\n                    mprog.partbodyfeatureactivate('Z1')\r\n                    mprog.partbodyfeatureactivate('machining_DD')\r\n                    mprog.partbodyfeatureactivate('machining_E上方研磨')\r\n                    mprog.activatefeature('machining_2x8_12通孔', 0)\r\n                    mprog.activatefeature('machining_aaaaa2', 0)\r\n                    mprog.activatefeature('machining_aaaaa4', 0)\r\n                    mprog.activatefeature('1-M5X10L(配管用)', 0)\r\n                    mprog.activatefeature('3-M5X10L(配管用)(r1)', 2)\r\n                    mprog.activatefeature('油面劑用', 0)\r\n                    mprog.activatefeature('60通孔', 0)\r\n                    mprog.activatefeature('電動黃油泵用', 0)\r\n                    mprog.activatefeature('吊孔', 0)\r\n                    mprog.activatefeature('光電裝置電線固定孔', 0)\r\n                    mprog.activatefeature('配管用(電動黃油泵→潤滑分配塊用)', 5)\r\n                    mprog.activatefeature('兩點組合', 0)\r\n                elif stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('T250')\r\n                    mprog.partbodyfeatureactivate('Z1')\r\n                    mprog.partbodyfeatureactivate('machining_DD_250')\r\n                    mprog.partbodyfeatureactivate('machining_E上方研磨')\r\n                    mprog.activatefeature('machining_2x8_12通孔', 0)\r\n                    mprog.activatefeature('machining_aaaaa2', 0)\r\n                    mprog.activatefeature('machining_aaaaa4', 0)\r\n                    mprog.activatefeature('1-M5X10L(配管用)', 0)\r\n                    mprog.activatefeature('3-M5X10L(配管用)(r1)', 0)\r\n                    mprog.activatefeature('油面劑用', 0)\r\n                    mprog.activatefeature('60通孔', 0)\r\n                    mprog.activatefeature('電動黃油泵用', 0)\r\n                    mprog.activatefeature('吊孔', 0)\r\n                    mprog.activatefeature('光電裝置電線固定孔', 0)\r\n                    mprog.activatefeature('配管用(電動黃油泵→潤滑分配塊用)', 0)\r\n                    mprog.activatefeature('兩點組合', 0)\r\n                print('FRAME1 machining success')\r\n            except BaseException:\r\n                print('FRAME1 machining error')\r\n            try:\r\n                mprog.update()\r\n                print('FRAME1 update success')\r\n            except BaseException:\r\n                print('FRAME1 update error')\r\n        elif name == 'FRAME2':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME2')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par(\r\n                    'FRAME2', stamping_press_type)\r\n                print('FRAME2 Parameter change success')\r\n            except BaseException:\r\n                print('FRAME2 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('before250_喉口')\r\n                    mprog.partbodyfeatureactivate('Z1')\r\n                    mprog.partbodyfeatureactivate('machining_DD')\r\n                    mprog.partbodyfeatureactivate('machining_E上方研磨')\r\n                    mprog.activatefeature('machining_2x8_12通孔', 0)\r\n                    mprog.activatefeature('machining_aaaaa2', 0)\r\n                    mprog.activatefeature('machining_aaaaa4', 0)\r\n                    mprog.partbodyfeatureactivate('Z1')\r\n                    mprog.activatefeature('電線穿線孔', 0)\r\n                    mprog.activatefeature('電線護罩(長型)', 4)\r\n                    mprog.activatefeature('馬達電線固定孔', 0)\r\n                    mprog.activatefeature('吊孔', 0)\r\n                    mprog.activatefeature('風管、電線固定孔(吹氣吹料用)', 1)\r\n                    mprog.activatefeature('風管、電線穿線孔(吹氣吹料用)', 0)\r\n                    mprog.activatefeature('光電裝置電線固定孔', 0)\r\n                    mprog.activatefeature('氣壓錶箱用', 0)\r\n                    mprog.activatefeature('吹氣吹料(標配)', 0)\r\n                    mprog.activatefeature('電氣箱用', 0)\r\n                    mprog.activatefeature('安全開關', 0)\r\n                    mprog.activatefeature('安全桿', 0)\r\n                    mprog.activatefeature('解角器裝置線用', 0)\r\n                    mprog.activatefeature('解角器用', 0)\r\n                    mprog.activatefeature('變頻器用', 0)\r\n                    mprog.activatefeature('解角器護蓋用', 0)\r\n                    mprog.activatefeature('解碼器電線(蛇管)固定孔', 0)\r\n                    mprog.partbodyfeatureactivate('part_S')\r\n                    mprog.partbodyfeatureactivate('MM')\r\n                    mprog.activatefeature('解角器固定架用', 0)\r\n                    mprog.activatefeature('解角器固定架用_2', 0)\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('before250_喉口')\r\n                    mprog.partbodyfeatureactivate('Z1')\r\n                    mprog.partbodyfeatureactivate('machining_DD')\r\n                    mprog.partbodyfeatureactivate('machining_E上方研磨')\r\n                    mprog.activatefeature('machining_2x8_12通孔', 0)\r\n                    mprog.activatefeature('machining_aaaaa2', 0)\r\n                    mprog.activatefeature('machining_aaaaa4', 0)\r\n                    mprog.activatefeature('電線穿線孔', 0)\r\n                    mprog.activatefeature('電線護罩(長型)', 4)\r\n                    mprog.activatefeature('馬達電線固定孔', 0)\r\n                    mprog.activatefeature('吊孔', 0)\r\n                    mprog.activatefeature('風管、電線固定孔(吹氣吹料用)', 1)\r\n                    mprog.activatefeature('風管、電線穿線孔(吹氣吹料用)', 0)\r\n                    mprog.activatefeature('光電裝置電線固定孔', 0)\r\n                    mprog.activatefeature('氣壓錶箱用', 0)\r\n                    mprog.activatefeature('吹氣吹料(標配)', 0)\r\n                    mprog.activatefeature('電氣箱用', 0)\r\n                    mprog.activatefeature('安全開關', 0)\r\n                    mprog.activatefeature('安全桿', 0)\r\n                    mprog.activatefeature('解角器裝置線用', 0)\r\n                    mprog.activatefeature('解角器用', 0)\r\n                    mprog.activatefeature('變頻器用', 0)\r\n                    mprog.activatefeature('解角器護蓋用', 0)\r\n                    mprog.activatefeature('解碼器電線(蛇管)固定孔', 0)\r\n                    mprog.activatefeature('1-M5X10L(配管用)', 0)\r\n                    mprog.activatefeature('1-M5X10L底孔20L配管用', 0)\r\n                    mprog.partbodyfeatureactivate('part_S')\r\n                    mprog.partbodyfeatureactivate('MM')\r\n                    mprog.activatefeature('解角器固定架用', 0)\r\n                    mprog.activatefeature('解角器固定架用_2', 0)\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('before250_喉口')\r\n                    mprog.partbodyfeatureactivate('Z1')\r\n                    mprog.partbodyfeatureactivate('machining_DD')\r\n                    mprog.partbodyfeatureactivate('machining_E上方研磨')\r\n                    mprog.activatefeature('machining_2x8_12通孔', 0)\r\n                    mprog.activatefeature('machining_aaaaa2', 0)\r\n                    mprog.activatefeature('machining_aaaaa4', 0)\r\n                    mprog.activatefeature('電線穿線孔', 0)\r\n                    mprog.activatefeature('電線護罩(長型)', 4)\r\n                    mprog.activatefeature('馬達電線固定孔', 0)\r\n                    mprog.activatefeature('吊孔', 0)\r\n                    mprog.activatefeature('風管、電線固定孔(吹氣吹料用)', 2)\r\n                    mprog.activatefeature('風管、電線穿線孔(吹氣吹料用)', 0)\r\n                    mprog.activatefeature('光電裝置電線固定孔', 0)\r\n                    mprog.activatefeature('氣壓錶箱用', 0)\r\n                    mprog.activatefeature('吹氣吹料(標配)', 0)\r\n                    mprog.activatefeature('電氣箱用', 0)\r\n                    mprog.activatefeature('安全開關', 0)\r\n                    mprog.activatefeature('安全桿', 0)\r\n                    mprog.activatefeature('解角器裝置線用', 0)\r\n                    mprog.activatefeature('解角器用', 0)\r\n                    mprog.activatefeature('變頻器用', 0)\r\n                    mprog.activatefeature('解角器護蓋用', 0)\r\n                    mprog.activatefeature('解碼器電線(蛇管)固定孔', 0)\r\n                    mprog.activatefeature('1-M5X10L底孔20L配管用', 0)\r\n                    mprog.partbodyfeatureactivate('part_S')\r\n                    mprog.partbodyfeatureactivate('MM')\r\n                    mprog.activatefeature('解角器固定架用', 0)\r\n                    mprog.activatefeature('解角器固定架用_2', 0)\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('before250_喉口')\r\n                    mprog.partbodyfeatureactivate('Z1')\r\n                    mprog.partbodyfeatureactivate('machining_DD')\r\n                    mprog.partbodyfeatureactivate('machining_E上方研磨')\r\n                    mprog.activatefeature('machining_2x8_12通孔', 0)\r\n                    mprog.activatefeature('machining_aaaaa2', 0)\r\n                    mprog.activatefeature('machining_aaaaa4', 0)\r\n                    mprog.activatefeature('電線穿線孔', 0)\r\n                    mprog.activatefeature('電線護罩(長型)', 4)\r\n                    mprog.activatefeature('馬達電線固定孔', 0)\r\n                    mprog.activatefeature('吊孔', 0)\r\n                    mprog.activatefeature('風管、電線固定孔(吹氣吹料用)', 2)\r\n                    mprog.activatefeature('風管、電線穿線孔(吹氣吹料用)', 0)\r\n                    mprog.activatefeature('光電裝置電線固定孔', 0)\r\n                    mprog.activatefeature('氣壓錶箱用', 0)\r\n                    mprog.activatefeature('吹氣吹料(標配)', 0)\r\n                    mprog.activatefeature('電氣箱用', 0)\r\n                    mprog.activatefeature('安全開關', 0)\r\n                    mprog.activatefeature('安全桿', 0)\r\n                    mprog.activatefeature('解角器裝置線用', 0)\r\n                    mprog.activatefeature('解角器用', 0)\r\n                    mprog.activatefeature('變頻器用', 0)\r\n                    mprog.activatefeature('解角器護蓋用', 0)\r\n                    mprog.activatefeature('解碼器電線(蛇管)固定孔', 0)\r\n                    mprog.activatefeature('1-M5X10L(配管用)', 0)\r\n                    mprog.partbodyfeatureactivate('part_S')\r\n                    mprog.partbodyfeatureactivate('MM')\r\n                    mprog.activatefeature('解角器固定架用', 0)\r\n                    mprog.activatefeature('解角器固定架用_2', 0)\r\n                elif stamping_press_type == 4:\r\n                    mprog.partbodyfeatureactivate('before250_喉口')\r\n                    mprog.partbodyfeatureactivate('Z1')\r\n                    mprog.partbodyfeatureactivate('machining_DD')\r\n                    mprog.partbodyfeatureactivate('machining_E上方研磨')\r\n                    mprog.partbodyfeatureactivate('jjj4')\r\n                    mprog.partbodyfeatureactivate('mmm4')\r\n                    mprog.activatefeature('machining_2x8_12通孔', 0)\r\n                    mprog.activatefeature('machining_aaaaa2', 0)\r\n                    mprog.activatefeature('machining_aaaaa4', 0)\r\n                    mprog.activatefeature('電線穿線孔', 0)\r\n                    mprog.activatefeature('電線護罩(長型)', 4)\r\n                    mprog.activatefeature('馬達電線固定孔', 0)\r\n                    mprog.activatefeature('吊孔', 0)\r\n                    mprog.activatefeature('風管、電線固定孔(吹氣吹料用)', 2)\r\n                    mprog.activatefeature('風管、電線穿線孔(吹氣吹料用)', 0)\r\n                    mprog.activatefeature('光電裝置電線固定孔', 5)\r\n                    mprog.activatefeature('氣壓錶箱用', 0)\r\n                    mprog.activatefeature('吹氣吹料(標配)', 0)\r\n                    mprog.activatefeature('電氣箱用', 0)\r\n                    mprog.activatefeature('安全開關', 0)\r\n                    mprog.activatefeature('安全桿', 0)\r\n                    mprog.activatefeature('解角器裝置線用', 0)\r\n                    mprog.activatefeature('1-M5X10L(配管用)', 0)\r\n                    mprog.activatefeature('4-M8X16L', 0)\r\n                    mprog.activatefeature('2-M5(配管用)', 0)\r\n                    mprog.activatefeature('台達變頻器用10HP', 0)\r\n                    mprog.activatefeature('東元變頻器用10HP', 0)\r\n                    mprog.activatefeature('電氣箱連桿', 2)\r\n                elif stamping_press_type == 5:\r\n                    mprog.partbodyfeatureactivate('before250_喉口')\r\n                    mprog.partbodyfeatureactivate('Z1')\r\n                    mprog.partbodyfeatureactivate('machining_DD')\r\n                    mprog.partbodyfeatureactivate('machining_E上方研磨')\r\n                    mprog.partbodyfeatureactivate('dd4')\r\n                    mprog.partbodyfeatureactivate('x4')\r\n                    mprog.activatefeature('machining_2x8_12通孔', 0)\r\n                    mprog.activatefeature('machining_aaaaa2', 0)\r\n                    mprog.activatefeature('machining_aaaaa4', 0)\r\n                    mprog.activatefeature('電線穿線孔', 0)\r\n                    mprog.activatefeature('電線護罩(長型)', 5)\r\n                    mprog.activatefeature('馬達電線固定孔', 0)\r\n                    mprog.activatefeature('吊孔', 0)\r\n                    mprog.activatefeature('風管、電線固定孔(吹氣吹料用)', 0)\r\n                    mprog.activatefeature('風管、電線穿線孔(吹氣吹料用)', 0)\r\n                    mprog.activatefeature('光電裝置電線固定孔', 0)\r\n                    mprog.activatefeature('氣壓錶箱用', 0)\r\n                    mprog.activatefeature('吹氣吹料(標配)', 0)\r\n                    mprog.activatefeature('電氣箱用', 0)\r\n                    mprog.activatefeature('安全開關', 0)\r\n                    mprog.activatefeature('安全桿', 0)\r\n                    mprog.activatefeature('1-M5X10L(配管用)', 0)\r\n                    mprog.activatefeature('4-M8X16L', 0)\r\n                    mprog.activatefeature('2-M5(配管用)', 0)\r\n                    mprog.activatefeature('電氣箱連桿', 0)\r\n                    mprog.activatefeature('東元變頻器10,15HP440V用', 0)\r\n                    mprog.activatefeature('台達變頻器10,15HP', 0)\r\n                    mprog.activatefeature('東元變頻器,15HP220V', 0)\r\n                elif stamping_press_type == 6:\r\n                    mprog.partbodyfeatureactivate('before250_喉口')\r\n                    mprog.partbodyfeatureactivate('Z1')\r\n                    mprog.partbodyfeatureactivate('machining_DD')\r\n                    mprog.partbodyfeatureactivate('machining_E上方研磨')\r\n                    mprog.partbodyfeatureactivate('ggg4')\r\n                    mprog.partbodyfeatureactivate('xx3')\r\n                    mprog.partbodyfeatureactivate('iii4')\r\n                    mprog.partbodyfeatureactivate('fff4')\r\n                    mprog.activatefeature('machining_2x8_12通孔', 0)\r\n                    mprog.activatefeature('machining_aaaaa2', 0)\r\n                    mprog.activatefeature('machining_aaaaa4', 0)\r\n                    mprog.activatefeature('電線穿線孔', 0)\r\n                    mprog.activatefeature('電線護罩(長型)', 5)\r\n                    mprog.activatefeature('馬達電線固定孔', 0)\r\n                    mprog.activatefeature('吊孔', 0)\r\n                    mprog.activatefeature('風管、電線固定孔(吹氣吹料用)', 2)\r\n                    mprog.activatefeature('風管、電線穿線孔(吹氣吹料用)', 0)\r\n                    mprog.activatefeature('光電裝置電線固定孔', 0)\r\n                    mprog.activatefeature('氣壓錶箱用', 0)\r\n                    mprog.activatefeature('吹氣吹料(標配)', 0)\r\n                    mprog.activatefeature('電氣箱用', 0)\r\n                    mprog.activatefeature('安全開關', 0)\r\n                    mprog.activatefeature('安全桿', 0)\r\n                    mprog.activatefeature('4-M8X16L', 0)\r\n                    mprog.activatefeature('2-M5(配管用)', 0)\r\n                    mprog.activatefeature('電氣箱連桿', 0)\r\n                    mprog.activatefeature('東元變頻器440V,15,20HP', 0)\r\n                    mprog.activatefeature('台達變頻器440V,15,20HP；220V15HP', 0)\r\n                    mprog.activatefeature('台達變頻器220V,20HP', 0)\r\n                    mprog.activatefeature('東元變頻器220V,15,20HP', 0)\r\n                elif stamping_press_type == 7:\r\n                    mprog.partbodyfeatureactivate('before250_喉口')\r\n                    mprog.partbodyfeatureactivate('Z1')\r\n                    mprog.partbodyfeatureactivate('machining_DD')\r\n                    mprog.partbodyfeatureactivate('machining_E上方研磨')\r\n                    mprog.partbodyfeatureactivate('iii4')\r\n                    mprog.partbodyfeatureactivate('ssss4')\r\n                    mprog.partbodyfeatureactivate('sss4')\r\n                    mprog.activatefeature('machining_2x8_12通孔', 0)\r\n                    mprog.activatefeature('machining_aaaaa2', 0)\r\n                    mprog.activatefeature('machining_aaaaa4', 0)\r\n                    mprog.activatefeature('電線穿線孔', 0)\r\n                    mprog.activatefeature('電線護罩(長型)', 5)\r\n                    mprog.activatefeature('馬達電線固定孔', 0)\r\n                    mprog.activatefeature('吊孔', 0)\r\n                    mprog.activatefeature('風管、電線固定孔(吹氣吹料用)', 0)\r\n                    mprog.activatefeature('風管、電線穿線孔(吹氣吹料用)', 0)\r\n                    mprog.activatefeature('光電裝置電線固定孔', 0)\r\n                    mprog.activatefeature('氣壓錶箱用', 0)\r\n                    mprog.activatefeature('吹氣吹料(標配)', 0)\r\n                    mprog.activatefeature('電氣箱用', 0)\r\n                    mprog.activatefeature('安全開關', 0)\r\n                    mprog.activatefeature('安全桿', 0)\r\n                    mprog.activatefeature('1-M5X10L(配管用)', 0)\r\n                    mprog.activatefeature('4-M8X16L', 0)\r\n                    mprog.activatefeature('2-M5(配管用)', 0)\r\n                    mprog.activatefeature('電氣箱連桿', 0)\r\n                    mprog.activatefeature('台達變頻器220V,20HP', 0)\r\n                    mprog.activatefeature('東元變頻器220V/440V,20HP', 0)\r\n                    mprog.activatefeature('台達變頻器440V,20HP', 0)\r\n                elif stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('T250')\r\n                    mprog.partbodyfeatureactivate('Z1')\r\n                    mprog.partbodyfeatureactivate('machining_DD_250')\r\n                    mprog.partbodyfeatureactivate('machining_E上方研磨')\r\n                    mprog.activatefeature('machining_2x8_12通孔', 0)\r\n                    mprog.activatefeature('machining_aaaaa2', 0)\r\n                    mprog.activatefeature('machining_aaaaa4', 0)\r\n                    mprog.activatefeature('電線穿線孔', 0)\r\n                    mprog.activatefeature('電線護罩(長型)', 5)\r\n                    mprog.activatefeature('馬達電線固定孔', 0)\r\n                    mprog.activatefeature('吊孔', 0)\r\n                    mprog.activatefeature('風管、電線固定孔(吹氣吹料用)', 2)\r\n                    mprog.activatefeature('風管、電線穿線孔(吹氣吹料用)', 0)\r\n                    mprog.activatefeature('光電裝置電線固定孔', 0)\r\n                    mprog.activatefeature('氣壓錶箱用', 0)\r\n                    mprog.activatefeature('吹氣吹料(標配)', 0)\r\n                    mprog.activatefeature('電氣箱用', 0)\r\n                    mprog.activatefeature('安全開關', 0)\r\n                    mprog.activatefeature('安全桿', 0)\r\n                    mprog.activatefeature('1-M5X10L(配管用)', 0)\r\n                    mprog.activatefeature('4-M8X16L', 0)\r\n                    mprog.activatefeature('2-M5(配管用)', 0)\r\n                    mprog.activatefeature('電氣箱連桿', 0)\r\n                    mprog.activatefeature('東元變頻器25HP', 0)\r\n                    mprog.activatefeature('台達變頻器25HP', 0)\r\n                print('FRAME2 machining success')\r\n            except BaseException:\r\n                print('FRAME2 Part activate error')\r\n            finally:\r\n                mprog.update()\r\n                print('FRAME2 update success')\r\n        elif name == 'FRAME3':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME3')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME3', stamping_press_type)\r\n                print('FRAME3 Parameter change success')\r\n            except:\r\n                print('FRAME3 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.activatefeature('SN1_25250_Body', 1)\r\n                    mprog.activatefeature('Hole_1', 1)\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_25250_PQ')\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_2560_S')\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_2560_U')\r\n                    mprog.partbodyfeatureactivate('machining_AA')\r\n                    mprog.partbodyfeatureactivate('machining_L')\r\n                    mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                    mprog.activatefeature('M10X20L(不可貫穿)', 0)\r\n                elif stamping_press_type == 1:\r\n                    mprog.activatefeature('SN1_25250_Body', 1)\r\n                    mprog.activatefeature('Hole_1', 1)\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_25250_PQ')\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_2560_S')\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_2560_U')\r\n                    mprog.partbodyfeatureactivate('machining_AA')\r\n                    mprog.partbodyfeatureactivate('machining_L')\r\n                    mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                    mprog.activatefeature('M10X20L(不可貫穿)', 0)\r\n                elif stamping_press_type == 2:\r\n                    mprog.activatefeature('SN1_25250_Body', 1)\r\n                    mprog.activatefeature('Hole_1', 1)\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_25250_PQ')\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_2560_S')\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_2560_U')\r\n                    mprog.partbodyfeatureactivate('machining_AA')\r\n                    mprog.partbodyfeatureactivate('machining_L')\r\n                    mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                    mprog.activatefeature('M10X20L(不可貫穿)', 0)\r\n                elif stamping_press_type == 3:\r\n                    mprog.activatefeature('SN1_25250_Body', 1)\r\n                    mprog.activatefeature('Hole_1', 1)\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_25250_PQ')\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_2560_S')\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_2560_U')\r\n                    mprog.partbodyfeatureactivate('machining_AA')\r\n                    mprog.partbodyfeatureactivate('machining_L')\r\n                    mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                    mprog.activatefeature('M10X20L(不可貫穿)', 0)\r\n                elif stamping_press_type == 4:\r\n                    mprog.activatefeature('SN1_25250_Body', 1)\r\n                    mprog.activatefeature('Hole_1', 1)\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_25250_PQ')\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_80250_R')\r\n                    mprog.partbodyfeatureactivate('machining_AA')\r\n                    mprog.partbodyfeatureactivate('machining_L')\r\n                    mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                    mprog.activatefeature('M10X20L(不可貫穿)', 0)\r\n                elif stamping_press_type == 5:\r\n                    mprog.activatefeature('SN1_25250_Body', 1)\r\n                    mprog.activatefeature('Hole_1', 1)\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_25250_PQ')\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_80250_R')\r\n                    mprog.partbodyfeatureactivate('machining_AA')\r\n                    mprog.partbodyfeatureactivate('machining_L')\r\n                    mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                    mprog.activatefeature('M10X20L(不可貫穿)', 0)\r\n                elif stamping_press_type == 6:\r\n                    mprog.activatefeature('SN1_25250_Body', 1)\r\n                    mprog.activatefeature('Hole_1', 1)\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_25250_PQ')\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_80250_R')\r\n                    mprog.partbodyfeatureactivate('machining_AA')\r\n                    mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                    mprog.partbodyfeatureactivate('machining_L')\r\n                    mprog.activatefeature('M10X20L(不可貫穿)', 0)\r\n                elif stamping_press_type == 7:\r\n                    mprog.activatefeature('SN1_25250_Body', 1)\r\n                    mprog.activatefeature('Hole_1', 1)\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_25250_PQ')\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_80250_R')\r\n                    mprog.partbodyfeatureactivate('machining_AA')\r\n                    mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                    mprog.partbodyfeatureactivate('machining_L')\r\n                elif stamping_press_type == 8:\r\n                    mprog.activatefeature('SN1_25250_Body', 1)\r\n                    mprog.activatefeature('Hole_1', 1)\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_25250_PQ')\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_80250_R')\r\n                    mprog.partbodyfeatureactivate('machining_AA')\r\n                    mprog.partbodyfeatureactivate('machining_L')\r\n                    mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                print('FRAME3 machining success')\r\n            except:\r\n                print('FRAME3 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME3 Update success')\r\n                except:\r\n                    print('FRAME3 Update error')\r\n        elif name == 'FRAME4':  # 已更改\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME4')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME4', stamping_press_type)\r\n                print('FRAME4 Parameter change success')\r\n            except:\r\n                print('FRAME4 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.activatefeature('SN1_25250_Body', 1)\r\n                    mprog.activatefeature('Hole_1', 1)\r\n                    mprog.activatefeature('CLUCTH_AIR_HOLE', 0)\r\n                    mprog.partbodyfeatureactivate(\"machining_P\")\r\n                    mprog.partbodyfeatureactivate(\"machining_bbbbb\")\r\n                elif stamping_press_type == 1:\r\n                    mprog.activatefeature('SN1_25250_Body', 1)\r\n                    mprog.activatefeature('Hole_1', 1)\r\n                    mprog.activatefeature('CLUCTH_AIR_HOLE', 0)\r\n                    mprog.partbodyfeatureactivate(\"machining_P\")\r\n                    mprog.partbodyfeatureactivate(\"machining_O\")\r\n                    mprog.partbodyfeatureactivate(\"machining_bbbbb\")\r\n                elif stamping_press_type == 2:\r\n                    mprog.activatefeature('SN1_25250_Body', 1)\r\n                    mprog.activatefeature('Hole_1', 1)\r\n                    mprog.activatefeature('CLUCTH_AIR_HOLE', 0)\r\n                    mprog.partbodyfeatureactivate(\"machining_P\")\r\n                    mprog.partbodyfeatureactivate(\"machining_O\")\r\n                    mprog.partbodyfeatureactivate(\"machining_bbbbb\")\r\n                elif stamping_press_type == 3:\r\n                    mprog.activatefeature('SN1_25250_Body', 1)\r\n                    mprog.activatefeature('Hole_1', 1)\r\n                    mprog.activatefeature('CLUCTH_AIR_HOLE', 0)\r\n                    mprog.activatefeature('Hole_3', 2)\r\n                    mprog.partbodyfeatureactivate(\"machining_N\")\r\n                    mprog.partbodyfeatureactivate(\"machining_O\")\r\n                    mprog.partbodyfeatureactivate(\"machining_M\")\r\n                    mprog.partbodyfeatureactivate(\"machining_P\")\r\n                    mprog.partbodyfeatureactivate(\"machining_bbbbb\")\r\n                elif stamping_press_type == 4:\r\n                    mprog.activatefeature('SN1_25250_Body', 1)\r\n                    mprog.activatefeature('Hole_1', 1)\r\n                    mprog.activatefeature('CLUCTH_AIR_HOLE', 0)\r\n                    mprog.activatefeature('Hole_3', 2)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"machining_N\")\r\n                    mprog.partbodyfeatureactivate(\"machining_O\")\r\n                    mprog.partbodyfeatureactivate(\"machining_M\")\r\n                    mprog.partbodyfeatureactivate(\"machining_P\")\r\n                    mprog.partbodyfeatureactivate(\"machining_bbbbb\")\r\n                elif stamping_press_type == 5:\r\n                    mprog.activatefeature('SN1_25250_Body', 1)\r\n                    mprog.activatefeature('Hole_1', 1)\r\n                    mprog.activatefeature('CLUCTH_AIR_HOLE', 0)\r\n                    mprog.activatefeature('Hole_3', 2)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"machining_N\")\r\n                    mprog.partbodyfeatureactivate(\"machining_O\")\r\n                    mprog.partbodyfeatureactivate(\"machining_M\")\r\n                    mprog.partbodyfeatureactivate(\"machining_P\")\r\n                    mprog.partbodyfeatureactivate(\"machining_bbbbb\")\r\n                elif stamping_press_type == 6:\r\n                    mprog.activatefeature('SN1_25250_Body', 1)\r\n                    mprog.activatefeature('Hole_1', 1)\r\n                    mprog.activatefeature('CLUCTH_AIR_HOLE', 0)\r\n                    mprog.activatefeature('Hole_3', 2)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"machining_N\")\r\n                    mprog.partbodyfeatureactivate(\"machining_O\")\r\n                    mprog.partbodyfeatureactivate(\"machining_M\")\r\n                    mprog.partbodyfeatureactivate(\"machining_P\")\r\n                    mprog.partbodyfeatureactivate(\"machining_bbbbb\")\r\n                elif stamping_press_type == 7:\r\n                    mprog.activatefeature('SN1_25250_Body', 1)\r\n                    mprog.activatefeature('Hole_1', 1)\r\n                    mprog.activatefeature('CLUCTH_AIR_HOLE', 0)\r\n                    mprog.activatefeature('Hole_3', 2)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"machining_N\")\r\n                    mprog.partbodyfeatureactivate(\"machining_O\")\r\n                    mprog.partbodyfeatureactivate(\"machining_M\")\r\n                    mprog.partbodyfeatureactivate(\"machining_P\")\r\n                    mprog.partbodyfeatureactivate(\"machining_bbbbb\")\r\n                elif stamping_press_type == 8:\r\n                    mprog.activatefeature('SN1_25250_Body', 1)\r\n                    mprog.activatefeature('Hole_1', 1)\r\n                    mprog.activatefeature('CLUCTH_AIR_HOLE', 0)\r\n                    mprog.activatefeature('Hole_3', 4)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"machining_N\")\r\n                    mprog.partbodyfeatureactivate(\"machining_O\")\r\n                    mprog.partbodyfeatureactivate(\"machining_M\")\r\n                    mprog.partbodyfeatureactivate(\"machining_P\")\r\n                    mprog.partbodyfeatureactivate(\"machining_bbbbb\")\r\n                print('FRAME4 machining success')\r\n            except:\r\n                print('FRAME4 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME4 Update success')\r\n                except:\r\n                    print('FRAME4 Update error')\r\n        elif name == 'FRAME5':  # 已更改\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME5')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME5', stamping_press_type)\r\n                print('FRAME5 Parameter change success')\r\n            except:\r\n                print('FRAME5 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('SN1-25_X')\r\n                    mprog.partbodyfeatureactivate('CD')\r\n                    mprog.partbodyfeatureactivate('SN1_25_H')\r\n                    mprog.activatefeature('2-M8通孔', 0)\r\n                    mprog.activatefeature('TY牌電磁閥用', 0)\r\n                    mprog.activatefeature('M6通孔LED', 0)\r\n                    mprog.activatefeature('PT1/2', 0)\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('CD')\r\n                    mprog.partbodyfeatureactivate(\"SN1_3545_H\")\r\n                    mprog.activatefeature('2-M8通孔', 0)\r\n                    mprog.activatefeature('TY牌電磁閥用', 0)\r\n                    mprog.activatefeature('M6通孔LED', 0)\r\n                    mprog.activatefeature('PT1/2', 0)\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('CD')\r\n                    mprog.partbodyfeatureactivate(\"SN1_3545_H\")\r\n                    mprog.activatefeature('2-M8通孔', 0)\r\n                    mprog.activatefeature('TY牌電磁閥用', 0)\r\n                    mprog.activatefeature('M6通孔LED', 0)\r\n                    mprog.activatefeature('PT1/2', 0)\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('CD')\r\n                    mprog.partbodyfeatureactivate('NM')\r\n                    mprog.partbodyfeatureactivate('SN1_60_R')\r\n                    mprog.activatefeature('2-M8通孔', 0)\r\n                    mprog.activatefeature('TY牌電磁閥用', 0)\r\n                    mprog.activatefeature('M6通孔LED', 0)\r\n                elif stamping_press_type == 4:\r\n                    mprog.partbodyfeatureactivate('SN1_80250_OP')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_Q')\r\n                    mprog.activatefeature('2-M8通孔', 0)\r\n                    mprog.activatefeature('TY牌電磁閥用', 0)\r\n                    mprog.activatefeature('M6通孔LED', 0)\r\n                elif stamping_press_type == 5:\r\n                    mprog.partbodyfeatureactivate('SN1_80250_OP')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_Q')\r\n                    mprog.partbodyfeatureactivate('6-M6通C5')\r\n                    mprog.activatefeature('6-M6通', 0)\r\n                    mprog.activatefeature('M6通孔LED', 0)\r\n                elif stamping_press_type == 6:\r\n                    mprog.partbodyfeatureactivate('SN1_80250_OP')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_Q')\r\n                    mprog.partbodyfeatureactivate('3-M8通_C5')\r\n                    mprog.activatefeature('3-M8通', 0)\r\n                    mprog.activatefeature('M6通孔LED', 0)\r\n                elif stamping_press_type == 7:\r\n                    mprog.partbodyfeatureactivate('SN1_80250_OP')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_Q')\r\n                    mprog.partbodyfeatureactivate('5-M8通_C5')\r\n                    mprog.activatefeature('5-M8通', 0)\r\n                    mprog.activatefeature('M6通孔LED', 0)\r\n                elif stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('SN1_80250_OP')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_Q')\r\n                    mprog.partbodyfeatureactivate('5-M8通_C5')\r\n                    mprog.activatefeature('5-M8通', 0)\r\n                    mprog.activatefeature('M6通孔LED', 0)\r\n            except BaseException:\r\n                print('FRAME5 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME5 Update success')\r\n                except BaseException:\r\n                    print('FRAME5 Update error')\r\n        elif name == 'FRAME6':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME6')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME6', stamping_press_type)\r\n                print('FRAME6 Parameter change success')\r\n            except:\r\n                print('FRAME6 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.activatefeature('FRAME_SN1_2545_Body', 0)\r\n                    mprog.activatefeature('M16_i', 0)\r\n                elif stamping_press_type == 1:\r\n                    mprog.activatefeature('FRAME_SN1_2545_Body', 0)\r\n                    mprog.activatefeature('M16_i', 0)\r\n                elif stamping_press_type == 2:\r\n                    mprog.activatefeature('FRAME_SN1_2545_Body', 0)\r\n                    mprog.activatefeature('M16_i', 0)\r\n                elif stamping_press_type == 3:\r\n                    mprog.activatefeature('FRAME_SN1_60_Body', 0)\r\n                    mprog.activatefeature('M16_h FRAME9_L', 0)\r\n                elif stamping_press_type == 4:\r\n                    mprog.activatefeature('FRAME_SN1_80110_Body', 0)\r\n                    mprog.activatefeature('M16_h FRAME9_L', 0)\r\n                elif stamping_press_type == 5:\r\n                    mprog.activatefeature('FRAME_SN1_80110_Body', 0)\r\n                    mprog.activatefeature('M16_h FRAME9_L', 0)\r\n                elif stamping_press_type == 7:\r\n                    mprog.activatefeature('FRAME_SN1_200_Body', 0)\r\n                    mprog.activatefeature('M16_h FRAME9_L', 0)\r\n                print('FRAME6 machining success')\r\n            except:\r\n                print('FRAME6 machining activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME6 Update success')\r\n                except:\r\n                    print('FRAME6 Update error')\r\n        elif name == 'FRAME7':  # 已更改\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME7')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME7', stamping_press_type)\r\n                print('FRAME7 Parameter change success')\r\n            except:\r\n                print('FRAME7 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.activatefeature('SN1_2560_Body', 1)\r\n                    mprog.partbodyfeatureactivate('SN1_25_VWX')\r\n                    mprog.partbodyfeatureactivate('DD')\r\n                elif stamping_press_type == 1:\r\n                    mprog.activatefeature('SN1_2560_Body', 1)\r\n                    mprog.partbodyfeatureactivate('DD')\r\n                elif stamping_press_type == 2:\r\n                    mprog.activatefeature('SN1_2560_Body', 1)\r\n                    mprog.partbodyfeatureactivate('DD')\r\n                elif stamping_press_type == 3:\r\n                    mprog.activatefeature('SN1_2560_Body', 1)\r\n                    mprog.partbodyfeatureactivate('DD')\r\n                elif stamping_press_type == 4:\r\n                    mprog.activatefeature('SN1_80250_Body', 4)\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.partbodyfeatureactivate('DD')\r\n                elif stamping_press_type == 5:\r\n                    mprog.activatefeature('SN1_80250_Body', 4)\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.partbodyfeatureactivate('DD')\r\n                elif stamping_press_type == 6:\r\n                    mprog.activatefeature('SN1_80250_Body', 4)\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.partbodyfeatureactivate('DD')\r\n                elif stamping_press_type == 7:\r\n                    mprog.activatefeature('SN1_80250_Body', 4)\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.partbodyfeatureactivate('DD')\r\n                elif stamping_press_type == 8:\r\n                    mprog.activatefeature('SN1_80250_Body', 4)\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.partbodyfeatureactivate('DD')\r\n                print('FRAME7 machining success')\r\n            except:\r\n                print('FRAME7 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME7 Update success')\r\n                except:\r\n                    print('FRAME7 Update error')\r\n        elif name == 'FRAME8':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME8')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par(\r\n                    'FRAME8', stamping_press_type)\r\n                print('FRAME8 Parameter change success')\r\n            except:\r\n                print('FRAME8 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('上半倒角_25')\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate(\"Pad.2\")\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate(\"Pad.2\")\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate(\"Pad.2\")\r\n                elif stamping_press_type == 4:\r\n                    # mprog.partbodyfeatureactivate('上半倒角80')\r\n                    mprog.partbodyfeatureactivate('R40特徵')\r\n                    # mprog.partbodyfeatureactivate('下半開槽')\r\n                    mprog.activatefeature('38孔通', 0)\r\n                elif stamping_press_type == 5:\r\n                    mprog.partbodyfeatureactivate('R40特徵')\r\n                    mprog.activatefeature('38孔通', 0)\r\n                elif stamping_press_type == 6:\r\n                    mprog.partbodyfeatureactivate('R40特徵')\r\n                    mprog.activatefeature('38孔通', 0)\r\n                elif stamping_press_type == 7:\r\n                    mprog.partbodyfeatureactivate('R40特徵')\r\n                    mprog.activatefeature('38孔通', 0)\r\n                elif stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('R40特徵')\r\n                    mprog.activatefeature('38孔通', 0)\r\n                print('FRAME8 machining success')\r\n            except BaseException:\r\n                print('FRAME8 machining activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME8 Update success')\r\n                except BaseException:\r\n                    print('FRAME8 Update error')\r\n        elif name == 'FRAME9':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME9')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME9', stamping_press_type)\r\n                print('FRAME9 Parameter change success')\r\n            except:\r\n                print('FRAME9 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.activatefeature('SN1_2580_Body', 1)\r\n                elif stamping_press_type == 1:\r\n                    mprog.activatefeature('SN1_2580_Body', 1)\r\n                elif stamping_press_type == 2:\r\n                    mprog.activatefeature('SN1_2580_Body', 1)\r\n                elif stamping_press_type == 3:\r\n                    mprog.activatefeature('SN1_2580_Body', 1)\r\n                elif stamping_press_type == 4:\r\n                    mprog.activatefeature('channel steel', 0)\r\n                elif stamping_press_type == 5:\r\n                    mprog.activatefeature('channel steel', 0)\r\n                elif stamping_press_type == 6:\r\n                    mprog.activatefeature('channel steel', 0)\r\n                elif stamping_press_type == 7:\r\n                    mprog.activatefeature('channel steel', 0)\r\n                elif stamping_press_type == 8:\r\n                    mprog.activatefeature('channel steel', 0)\r\n                print('FRAME9 machining success')\r\n            except:\r\n                print('FRAME9 machining activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME9 Update success')\r\n                except:\r\n                    print('FRAME9 Update error')\r\n        elif name == 'FRAME10':  # 已更改\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME10')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME10', stamping_press_type)\r\n                print('FRAME10 Parameter change success')\r\n            except:\r\n                print('FRAME10 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.activatefeature('SN1_2545_Body', 0)\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.partbodyfeatureactivate('SN1_25250_K')\r\n                elif stamping_press_type == 1:\r\n                    mprog.activatefeature('SN1_2545_Body', 0)\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.partbodyfeatureactivate('SN1_25250_K')\r\n                elif stamping_press_type == 2:\r\n                    mprog.activatefeature('SN1_2545_Body', 0)\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.partbodyfeatureactivate('SN1_25250_K')\r\n                elif stamping_press_type == 3:\r\n                    mprog.activatefeature('SN1_60_Body', 0)\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                    mprog.partbodyfeatureactivate('SN1_25250_K')\r\n                elif stamping_press_type == 4:\r\n                    mprog.activatefeature('SN1_80110_Body', 0)\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                    mprog.partbodyfeatureactivate('SN1_25250_K')\r\n                elif stamping_press_type == 5:\r\n                    mprog.activatefeature('SN1_80110_Body', 0)\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                    mprog.partbodyfeatureactivate('SN1_25250_K')\r\n                elif stamping_press_type == 6:\r\n                    mprog.activatefeature('SN1_160250_Body', 0)\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                    mprog.partbodyfeatureactivate('SN1_25250_K')\r\n                elif stamping_press_type == 7:\r\n                    mprog.activatefeature('SN1_160250_Body', 0)\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                    mprog.partbodyfeatureactivate('SN1_25250_K')\r\n                elif stamping_press_type == 8:\r\n                    mprog.activatefeature('SN1_160250_Body', 0)\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                    mprog.partbodyfeatureactivate('SN1_25250_K')\r\n                print('FRAME10 machining success')\r\n            except:\r\n                print('FRAME10 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME10 Update success')\r\n                except:\r\n                    print('FRAME10 Update error')\r\n        elif name == 'FRAME11':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME11')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par(\r\n                    'FRAME11', stamping_press_type)\r\n                print('FRAME11 Parameter change success')\r\n            except BaseException:\r\n                print('FRAME11 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.activatefeature('挖孔', 0)\r\n                    mprog.activatefeature('RC1/8', 0)\r\n                elif stamping_press_type == 1:\r\n                    mprog.activatefeature('挖孔', 0)\r\n                    mprog.activatefeature('RC1/8', 0)\r\n                elif stamping_press_type == 2:\r\n                    mprog.activatefeature('挖孔', 0)\r\n                    mprog.activatefeature('RC1/8', 0)\r\n                elif stamping_press_type == 3:\r\n                    mprog.activatefeature('挖孔', 0)\r\n                    mprog.activatefeature('RC1/8', 0)\r\n                elif stamping_press_type == 4:\r\n                    mprog.activatefeature('挖孔', 0)\r\n                    mprog.activatefeature('RC1/8', 0)\r\n                elif stamping_press_type == 5:\r\n                    mprog.activatefeature('挖孔', 0)\r\n                    mprog.activatefeature('RC1/8', 0)\r\n                elif stamping_press_type == 6:\r\n                    mprog.activatefeature('挖孔', 0)\r\n                elif stamping_press_type == 7:\r\n                    mprog.activatefeature('挖孔', 0)\r\n                    mprog.activatefeature('RC1/8', 0)\r\n                elif stamping_press_type == 8:\r\n                    mprog.activatefeature('挖孔', 0)\r\n                    mprog.activatefeature('RC1/8', 0)\r\n                print('FRAME11 machining success')\r\n            except BaseException:\r\n                print('FRAME11 machining activate error')\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME11 Update success')\r\n            except BaseException:\r\n                print('FRAME11 Update error')\r\n        elif name == 'FRAME12':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME12')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME12', stamping_press_type)\r\n                print('FRAME12 Parameter change success')\r\n            except:\r\n                print('FRAME12 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:  # 25N\r\n                    mprog.partbodyfeatureactivate('Chamfer.1')\r\n                    mprog.activatefeature('Pipe_clamp', 2)\r\n                    mprog.activatefeature('drain_hole', 0)\r\n                elif stamping_press_type == 1:  # 35N\r\n                    mprog.partbodyfeatureactivate('Chamfer.1')\r\n                    mprog.activatefeature('Pipe_clamp', 2)\r\n                    mprog.activatefeature('drain_hole', 0)\r\n                elif stamping_press_type == 2:  # 45N\r\n                    mprog.partbodyfeatureactivate('Chamfer.1')\r\n                    mprog.activatefeature('Pipe_clamp', 2)\r\n                    mprog.activatefeature('drain_hole', 0)\r\n                elif stamping_press_type == 3:  # 60N\r\n                    mprog.partbodyfeatureactivate('Chamfer.1')\r\n                    mprog.activatefeature('Pipe_clamp', 2)\r\n                    mprog.activatefeature('drain_hole', 0)\r\n                elif stamping_press_type == 4:  # 80N\r\n                    mprog.partbodyfeatureactivate('Chamfer.1')\r\n                    mprog.activatefeature('Pipe_clamp', 2)\r\n                    mprog.activatefeature('drain_hole', 0)\r\n                elif stamping_press_type == 5:  # 110N\r\n                    mprog.partbodyfeatureactivate('Chamfer.1')\r\n                    mprog.activatefeature('Pipe_clamp', 2)\r\n                    mprog.activatefeature('drain_hole', 0)\r\n                elif stamping_press_type == 6:  # 160N\r\n                    mprog.partbodyfeatureactivate('C8_160')\r\n                    mprog.activatefeature('Pipe_clamp', 2)\r\n                    mprog.activatefeature('drain_hole', 0)\r\n                elif stamping_press_type == 7:  # 200N\r\n                    mprog.partbodyfeatureactivate('Chamfer.1')\r\n                    mprog.activatefeature('Pipe_clamp', 0)\r\n                    mprog.activatefeature('drain_hole', 0)\r\n                elif stamping_press_type == 8:  # 250N\r\n                    mprog.partbodyfeatureactivate('Chamfer.1')\r\n                    mprog.activatefeature('Pipe_clamp', 0)\r\n                    mprog.activatefeature('drain_hole', 0)\r\n            except:\r\n                print('FRAME12 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME12 Update success')\r\n                except:\r\n                    print('FRAME12 Update error')\r\n        elif name == 'FRAME13':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME13')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME13', stamping_press_type)\r\n                print('FRAME13 Parameter change success')\r\n            except:\r\n                print('FRAME13 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.partbodyfeatureactivate('SN1_25_45_CD')\r\n                    mprog.partbodyfeatureactivate('SN1_25_45_G')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 1)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 1)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.partbodyfeatureactivate('SN1_25_45_CD')\r\n                    mprog.partbodyfeatureactivate('SN1_25_45_G')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 1)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 1)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 4:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 5:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 6:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 7:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n            except:\r\n                print('FRAME13 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME13 Update success')\r\n                except:\r\n                    print('FRAME13 Update error')\r\n        elif name == 'FRAME13_1':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME13_1')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME13_1', stamping_press_type)\r\n                print('FRAME13_1 Parameter change success')\r\n            except:\r\n                print('FRAME13_1 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.partbodyfeatureactivate('SN1_25_45_CD')\r\n                    mprog.partbodyfeatureactivate('SN1_25_45_G')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 1)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 1)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.partbodyfeatureactivate('SN1_25_45_CD')\r\n                    mprog.partbodyfeatureactivate('SN1_25_45_G')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 1)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 1)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 4:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 5:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 6:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 7:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n            except:\r\n                print('FRAME13_1 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME13_1 Update success')\r\n                except:\r\n                    print('FRAME13_1 Update error')\r\n        elif name == 'FRAME14':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME14')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME14', stamping_press_type)\r\n                print('FRAME14 Parameter change success')\r\n            except:\r\n                print('FRAME14 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:  # 25N\r\n                    mprog.activatefeature('inside_hole', 0)\r\n                    mprog.activatefeature('processing_h', 0)\r\n                    mprog.activatefeature('processing_i', 0)\r\n                    mprog.activatefeature('processing_m', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 1:  # 35N\r\n                    mprog.activatefeature('inside_hole', 0)\r\n                    mprog.activatefeature('processing_h', 0)\r\n                    mprog.activatefeature('processing_i', 0)\r\n                    mprog.activatefeature('processing_m', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 2:  # 45N\r\n                    mprog.activatefeature('inside_hole', 0)\r\n                    mprog.activatefeature('processing_h', 0)\r\n                    mprog.activatefeature('processing_i', 0)\r\n                    mprog.activatefeature('processing_m', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 3:  # 60N\r\n                    mprog.activatefeature('inside_hole', 0)\r\n                    mprog.activatefeature('processing_h', 0)\r\n                    mprog.activatefeature('processing_i', 0)\r\n                    mprog.activatefeature('processing_m', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 4:  # 80N\r\n                    mprog.activatefeature('inside_hole', 0)\r\n                    mprog.activatefeature('outside_hole', 0)\r\n                    mprog.activatefeature('outside_hole_E', 0)\r\n                    mprog.activatefeature('processing_h', 0)\r\n                    mprog.activatefeature('processing_i', 0)\r\n                    mprog.activatefeature('processing_m', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 5:  # 110N\r\n                    mprog.activatefeature('inside_hole', 0)\r\n                    mprog.activatefeature('outside_hole', 0)\r\n                    mprog.activatefeature('processing_h', 0)\r\n                    mprog.activatefeature('processing_i', 0)\r\n                    mprog.activatefeature('processing_m', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 6:  # 160N\r\n                    mprog.activatefeature('inside_hole', 0)\r\n                    mprog.activatefeature('outside_hole', 0)\r\n                    mprog.activatefeature('processing_h', 0)\r\n                    mprog.activatefeature('processing_i', 0)\r\n                    mprog.activatefeature('processing_m', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 7:  # 200N\r\n                    mprog.activatefeature('outside_hole', 0)\r\n                    mprog.activatefeature('outside_hole_E', 0)\r\n                    mprog.activatefeature('processing_h', 0)\r\n                    mprog.activatefeature('processing_i', 0)\r\n                    mprog.activatefeature('processing_m', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 8:  # 250N\r\n                    mprog.partbodyfeatureactivate(\"250N\")\r\n                    mprog.activatefeature('inside_hole', 0)\r\n                    mprog.activatefeature('outside_hole', 0)\r\n                    mprog.activatefeature('processing_h', 0)\r\n                    mprog.activatefeature('processing_i', 0)\r\n                    mprog.activatefeature('processing_m', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                print('FRAME14 machining success')\r\n            except:\r\n                print('FRAME14 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME14 Update success')\r\n                except:\r\n                    print('FRAME14 Update error')\r\n        elif name == 'FRAME15':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME15')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME15', stamping_press_type)\r\n                print('FRAME15 Parameter change success')\r\n            except:\r\n                print('FRAME15 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:  # 25N\r\n                    mprog.activatefeature('Hole', 0)\r\n                    mprog.partbodyfeatureactivate('F')\r\n                elif stamping_press_type == 1:  # 35N\r\n                    mprog.activatefeature('Hole', 0)\r\n                    mprog.partbodyfeatureactivate('F')\r\n                elif stamping_press_type == 2:  # 45N\r\n                    mprog.activatefeature('Hole', 0)\r\n                    mprog.partbodyfeatureactivate('F')\r\n                elif stamping_press_type == 3:  # 60N\r\n                    mprog.activatefeature('Hole', 0)\r\n                    # mprog.partbodyfeatureactivate('F')\r\n                elif stamping_press_type == 4:  # 80N\r\n                    mprog.activatefeature('Hole', 0)\r\n                    # mprog.partbodyfeatureactivate('F')\r\n                elif stamping_press_type == 5:  # 110N\r\n                    mprog.activatefeature('Hole', 0)\r\n                    mprog.partbodyfeatureactivate('F')\r\n                elif stamping_press_type == 6:  # 160N\r\n                    mprog.activatefeature('Hole', 0)\r\n                    # mprog.partbodyfeatureactivate('F')\r\n                elif stamping_press_type == 7:  # 200N\r\n                    mprog.activatefeature('Hole', 0)\r\n                    mprog.partbodyfeatureactivate('F')\r\n                elif stamping_press_type == 8:  # 250N\r\n                    # mprog.partbodyfeatureactivate('SN1_200250')\r\n                    mprog.activatefeature('Hole', 0)\r\n                    mprog.partbodyfeatureactivate('F')\r\n            except:\r\n                print('FRAME15 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME15 Update success')\r\n                except:\r\n                    print('FRAME15 Update error')\r\n        elif name == 'FRAME16':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME16')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME16', stamping_press_type)\r\n                print('FRAME16 Parameter change success')\r\n            except:\r\n                print('FRAME16 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.partbodyfeatureactivate('SN1_25_45_CD')\r\n                    mprog.partbodyfeatureactivate('SN1_25_45_G')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 1)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 1)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.partbodyfeatureactivate('SN1_25_45_CD')\r\n                    mprog.partbodyfeatureactivate('SN1_25_45_G')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 1)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 1)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                elif stamping_press_type == 4:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                elif stamping_press_type == 5:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                elif stamping_press_type == 6:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                elif stamping_press_type == 7:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n                elif stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_1', 0)\r\n                    mprog.activatefeature('SLIDE_LINER_FIX_HOLE_2', 0)\r\n                    mprog.activatefeature('GIB_OIL_HOLE', 0)\r\n                    mprog.activatefeature('Hole_4', 0)\r\n            except:\r\n                print('FRAME16 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME16 Update success')\r\n                except:\r\n                    print('FRAME16 Update error')\r\n        elif name == 'FRAME17':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME17')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME17', stamping_press_type)\r\n                print('FRAME17 Parameter change success')\r\n            except:\r\n                print('FRAME17 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:  # 25N\r\n                    mprog.activatefeature('inside_hole', 0)\r\n                    mprog.activatefeature('processing_h', 0)\r\n                    mprog.activatefeature('processing_i', 0)\r\n                    mprog.activatefeature('processing_m', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 1:  # 35N\r\n                    mprog.activatefeature('inside_hole', 0)\r\n                    mprog.activatefeature('processing_h', 0)\r\n                    mprog.activatefeature('processing_i', 0)\r\n                    mprog.activatefeature('processing_m', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 2:  # 45N\r\n                    mprog.activatefeature('inside_hole', 0)\r\n                    mprog.activatefeature('processing_h', 0)\r\n                    mprog.activatefeature('processing_i', 0)\r\n                    mprog.activatefeature('processing_m', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 3:  # 60N\r\n                    mprog.activatefeature('inside_hole', 0)\r\n                    mprog.activatefeature('processing_h', 0)\r\n                    mprog.activatefeature('processing_i', 0)\r\n                    mprog.activatefeature('processing_m', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 4:  # 80N\r\n                    mprog.activatefeature('inside_hole', 0)\r\n                    mprog.activatefeature('outside_hole', 0)\r\n                    mprog.activatefeature('outside_hole_E', 0)\r\n                    mprog.activatefeature('processing_h', 0)\r\n                    mprog.activatefeature('processing_i', 0)\r\n                    mprog.activatefeature('processing_m', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 5:  # 110N\r\n                    mprog.activatefeature('inside_hole', 0)\r\n                    mprog.activatefeature('outside_hole', 0)\r\n                    mprog.activatefeature('processing_h', 0)\r\n                    mprog.activatefeature('processing_i', 0)\r\n                    mprog.activatefeature('processing_m', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 6:  # 160N\r\n                    mprog.activatefeature('inside_hole', 0)\r\n                    mprog.activatefeature('outside_hole', 0)\r\n                    mprog.activatefeature('processing_h', 0)\r\n                    mprog.activatefeature('processing_i', 0)\r\n                    mprog.activatefeature('processing_m', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 7:  # 200N\r\n                    mprog.activatefeature('outside_hole', 0)\r\n                    mprog.activatefeature('outside_hole_E', 0)\r\n                    mprog.activatefeature('processing_h', 0)\r\n                    mprog.activatefeature('processing_i', 0)\r\n                    mprog.activatefeature('processing_m', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                elif stamping_press_type == 8:  # 250N\r\n                    mprog.partbodyfeatureactivate(\"250N\")\r\n                    mprog.activatefeature('inside_hole', 0)\r\n                    mprog.activatefeature('outside_hole', 0)\r\n                    mprog.activatefeature('processing_h', 0)\r\n                    mprog.activatefeature('processing_i', 0)\r\n                    mprog.activatefeature('processing_m', 0)\r\n                    mprog.partbodyfeatureactivate(\"H\")\r\n                    mprog.partbodyfeatureactivate(\"I\")\r\n                print('FRAME17 machining success')\r\n            except:\r\n                print('FRAME17 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME17 Update success')\r\n                except:\r\n                    print('FRAME17 Update error')\r\n        elif name == 'FRAME18':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME18')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME18', stamping_press_type)\r\n                print('FRAME18 Parameter change success')\r\n            except:\r\n                print('FRAME18 Parameter change error')\r\n\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('Pad.2')\r\n                    mprog.partbodyfeatureactivate('HollowCylinder')\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('Pad.2')\r\n                    mprog.partbodyfeatureactivate('HollowCylinder')\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('Pad.2')\r\n                    mprog.partbodyfeatureactivate('HollowCylinder')\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('Pad.2')\r\n                    mprog.partbodyfeatureactivate('HollowCylinder')\r\n                elif stamping_press_type == 4:\r\n                    mprog.partbodyfeatureactivate('Pad.2')\r\n                    mprog.partbodyfeatureactivate('HollowCylinder')\r\n                    mprog.partbodyfeatureactivate('EdgeFillet.1')\r\n                elif stamping_press_type == 5:\r\n                    mprog.activatefeature('Hole.1', 0)\r\n                    mprog.partbodyfeatureactivate('EdgeFillet.1')\r\n                elif stamping_press_type == 6:\r\n                    mprog.activatefeature('Hole.1', 0)\r\n                    mprog.partbodyfeatureactivate('EdgeFillet.1')\r\n                elif stamping_press_type == 7:\r\n                    mprog.activatefeature('Hole.1', 0)\r\n                    mprog.partbodyfeatureactivate('EdgeFillet.1')\r\n                elif stamping_press_type == 8:\r\n                    mprog.activatefeature('Hole.1', 0)\r\n                    mprog.partbodyfeatureactivate('EdgeFillet.1')\r\n            except:\r\n                print('FRAME18 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME18 Update success')\r\n                except:\r\n                    print('FRAME18 Update error')\r\n        elif name == 'FRAME19':  # 已更改\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME19')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME19', stamping_press_type)\r\n                print('FRAME19 Parameter change success')\r\n            except:\r\n                print('FRAME19 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.activatefeature('SN1_2545_Body', 6)\r\n                    mprog.partbodyfeatureactivate('SN1_25_X')\r\n                    mprog.partbodyfeatureactivate('SN1_2535_Y')\r\n                    mprog.partbodyfeatureactivate(\"machining_AI\")\r\n                elif stamping_press_type == 1:\r\n                    mprog.activatefeature('SN1_2545_Body', 6)\r\n                    mprog.partbodyfeatureactivate('SN1_2535_Y')\r\n                    mprog.partbodyfeatureactivate(\"SN1_3545_AD\")\r\n                    mprog.partbodyfeatureactivate(\"machining_AI\")\r\n                elif stamping_press_type == 2:\r\n                    mprog.activatefeature('SN1_2545_Body', 6)\r\n                    mprog.partbodyfeatureactivate('SN1_45_Y')\r\n                    mprog.partbodyfeatureactivate('SN1_45_X')\r\n                    mprog.partbodyfeatureactivate(\"SN1_3545_AD\")\r\n                    mprog.partbodyfeatureactivate(\"machining_AI\")\r\n                elif stamping_press_type == 3:\r\n                    mprog.activatefeature('SN1_60_Body', 8)\r\n                    mprog.partbodyfeatureactivate(\"machining_AI\")\r\n                elif stamping_press_type == 4:\r\n                    mprog.activatefeature('SN1_80110_Body', 5)\r\n                    mprog.partbodyfeatureactivate(\"machining_AI\")\r\n                elif stamping_press_type == 5:\r\n                    mprog.activatefeature('SN1_80110_Body', 5)\r\n                    mprog.partbodyfeatureactivate(\"machining_AI\")\r\n                elif stamping_press_type == 6:\r\n                    mprog.activatefeature('FRAME_SN1_160_Body', 0)\r\n                    mprog.activatefeature('FRAME_34_Hole_1', 0)\r\n                    mprog.partbodyfeatureactivate(\"machining_AI\")\r\n                elif stamping_press_type == 7:\r\n                    mprog.activatefeature('SN1_200_Body', 4)\r\n                    mprog.partbodyfeatureactivate(\"machining_AI\")\r\n                elif stamping_press_type == 8:\r\n                    mprog.activatefeature('SN1_250_Body', 3)\r\n                    mprog.partbodyfeatureactivate(\"machining_AI\")\r\n                print('FRAME19 machining success')\r\n            except:\r\n                print('FRAME19 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME19 Update success')\r\n                except:\r\n                    print('FRAME19 Update error')\r\n        elif name == 'FRAME20':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME20')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME20', stamping_press_type)\r\n                print('FRAME20 Parameter change success')\r\n            except:\r\n                print('FRAME20 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('MOTOR_FIX_ADJUSTMENT_HOLE', 0)\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('MOTOR_FIX_ADJUSTMENT_HOLE', 0)\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('MOTOR_FIX_ADJUSTMENT_HOLE', 0)\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.partbodyfeatureactivate('SN1_60250_C')\r\n                    mprog.activatefeature('MOTOR_FIX_ADJUSTMENT_HOLE', 0)\r\n                elif stamping_press_type == 4:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.partbodyfeatureactivate('SN1_60250_C')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_DEF')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_G')\r\n                    mprog.activatefeature('MOTOR_FIX_ADJUSTMENT_HOLE', 0)\r\n                elif stamping_press_type == 5:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.partbodyfeatureactivate('SN1_60250_C')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_DEF')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_G')\r\n                    mprog.partbodyfeatureactivate('SN1_110160_ijk')\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                elif stamping_press_type == 6:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.partbodyfeatureactivate('SN1_60250_C')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_DEF')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_G')\r\n                    mprog.partbodyfeatureactivate('SN1_110160_ijk')\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                elif stamping_press_type == 7:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.partbodyfeatureactivate('SN1_60250_C')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_DEF')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_G')\r\n                    mprog.partbodyfeatureactivate('SN1_200250_hij')\r\n                    mprog.activatefeature('Hole_2', 1)\r\n                elif stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.partbodyfeatureactivate('SN1_60250_C')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_DEF')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_G')\r\n                    mprog.partbodyfeatureactivate('SN1_200250_hij')\r\n                    mprog.activatefeature('Hole_2', 1)\r\n            except:\r\n                print('FRAME20 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME20 Update success')\r\n                except:\r\n                    print('FRAME20 Update error')\r\n        elif name == 'FRAME21':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME21')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME21', stamping_press_type)\r\n                print('FRAME21 Parameter change success')\r\n            except:\r\n                print('FRAME21 Parameter change error')\r\n            try:\r\n                mprog.partdeactivate(\"H\")\r\n                if stamping_press_type == 0:  # 25\r\n                    mprog.activatefeature('Hole', 0)\r\n                elif stamping_press_type == 1:  # 35\r\n                    mprog.activatefeature('Hole', 0)\r\n                print('FRAME21 machining success')\r\n            except:\r\n                print('FRAME21 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME21 Update success')\r\n                except:\r\n                    print('FRAME21 Update error')\r\n        elif name == 'FRAME22':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME22')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME22', stamping_press_type)\r\n                print('FRAME22 Parameter change success')\r\n            except:\r\n                print('FRAME22 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('A(1)D')\r\n                    mprog.partbodyfeatureactivate('SN1-2560_BE')\r\n                    mprog.partbodyfeatureactivate('SN1_2545_I')\r\n                    mprog.activatefeature('OPERATION_BOX_FIX_HOLE', 0)\r\n                    mprog.activatefeature('SN1_2560_6_M8X16L_底孔27L', 0)\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('A(1)D')\r\n                    mprog.partbodyfeatureactivate('SN1-2560_BE')\r\n                    mprog.partbodyfeatureactivate('SN1_2545_I')\r\n                    mprog.activatefeature('OPERATION_BOX_FIX_HOLE', 0)\r\n                    mprog.activatefeature('SN1_2560_6_M8X16L_底孔27L', 0)\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('A(1)D')\r\n                    mprog.partbodyfeatureactivate('SN1-2560_BE')\r\n                    mprog.partbodyfeatureactivate('SN1_2545_I')\r\n                    mprog.activatefeature('OPERATION_BOX_FIX_HOLE', 0)\r\n                    mprog.activatefeature('SN1_2560_6_M8X16L_底孔27L', 0)\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('A(1)D')\r\n                    mprog.partbodyfeatureactivate('A(2)')\r\n                    mprog.partbodyfeatureactivate('SN1-2560_BE')\r\n                    mprog.partbodyfeatureactivate('SN1_60_I')\r\n                    mprog.activatefeature('OPERATION_BOX_FIX_HOLE', 0)\r\n                    mprog.activatefeature('Hole_3', 0)\r\n                    mprog.activatefeature('SN1_2560_6_M8X16L_底孔27L', 0)\r\n                elif stamping_press_type == 4:\r\n                    mprog.partbodyfeatureactivate('SN1_80250_A(1)D')\r\n                    mprog.partbodyfeatureactivate('A(2)')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_FEBC')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_IN')\r\n                    mprog.activatefeature('OPERATION_BOX_FIX_HOLE', 0)\r\n                    mprog.activatefeature('SN1_80250_6_M8X16L_底孔27L', 0)\r\n                    mprog.activatefeature('Hole_3', 0)\r\n                elif stamping_press_type == 5:\r\n                    mprog.partbodyfeatureactivate('SN1_80250_A(1)D')\r\n                    mprog.partbodyfeatureactivate('A(2)')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_FEBC')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_IN')\r\n                    mprog.activatefeature('OPERATION_BOX_FIX_HOLE', 0)\r\n                    mprog.activatefeature('SN1_80250_6_M8X16L_底孔27L', 0)\r\n                    mprog.activatefeature('Hole_3', 0)\r\n                elif stamping_press_type == 6:\r\n                    mprog.partbodyfeatureactivate('SN1_80250_A(1)D')\r\n                    mprog.partbodyfeatureactivate('A(2)')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_FEBC')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_IN')\r\n                    mprog.activatefeature('OPERATION_BOX_FIX_HOLE', 0)\r\n                    mprog.activatefeature('SN1_80250_6_M8X16L_底孔27L', 0)\r\n                    mprog.activatefeature('Hole_3', 0)\r\n                elif stamping_press_type == 7:\r\n                    mprog.partbodyfeatureactivate('SN1_80250_A(1)D')\r\n                    mprog.partbodyfeatureactivate('A(2)')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_FEBC')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_IN')\r\n                    mprog.activatefeature('OPERATION_BOX_FIX_HOLE', 0)\r\n                    mprog.activatefeature('SN1_80250_6_M8X16L_底孔27L', 0)\r\n                    mprog.activatefeature('Hole_3', 0)\r\n                elif stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('SN1_80250_A(1)D')\r\n                    mprog.partbodyfeatureactivate('A(2)')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_FEBC')\r\n                    mprog.partbodyfeatureactivate('SN1_80250_IN')\r\n                    mprog.activatefeature('OPERATION_BOX_FIX_HOLE', 0)\r\n                    mprog.activatefeature('SN1_80250_6_M8X16L_底孔27L', 0)\r\n                    mprog.activatefeature('Hole_3', 0)\r\n            except:\r\n                print('FRAME22 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME22 Update success')\r\n                except:\r\n                    print('FRAME22 Update error')\r\n        elif name == 'FRAME23':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME23')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME23', stamping_press_type)\r\n                print('FRAME23 Parameter change success')\r\n            except:\r\n                print('FRAME23 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('25至60除料')\r\n                    mprog.partbodyfeatureactivate('25至60導圓角')\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('25至60除料')\r\n                    mprog.partbodyfeatureactivate('25至60導圓角')\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('25至60除料')\r\n                    mprog.partbodyfeatureactivate('25至60導圓角')\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('25至60除料')\r\n                    mprog.partbodyfeatureactivate('25至60導圓角')\r\n                elif stamping_press_type == 4:\r\n                    mprog.partbodyfeatureactivate('80至250除料')\r\n                    mprog.partbodyfeatureactivate('80至250導圓角(除160和200)')\r\n                elif stamping_press_type == 5:\r\n                    mprog.partbodyfeatureactivate('80至250除料')\r\n                    mprog.partbodyfeatureactivate('80至250導圓角(除160和200)')\r\n                elif stamping_press_type == 6:\r\n                    mprog.partbodyfeatureactivate('80至250除料')\r\n                elif stamping_press_type == 7:\r\n                    mprog.partbodyfeatureactivate('80至250除料')\r\n                elif stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('80至250除料')\r\n                    mprog.partbodyfeatureactivate('80至250導圓角(除160和200)')\r\n            except:\r\n                print('FRAME23 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME23 Update success')\r\n                except:\r\n                    print('FRAME23 Update error')\r\n        elif name == 'FRAME23_1':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME23_1')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME23_1', stamping_press_type)\r\n                print('FRAME23_1 Parameter change success')\r\n            except:\r\n                print('FRAME23_1 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('25至60除料')\r\n                    mprog.partbodyfeatureactivate('25至60導圓角')\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('25至60除料')\r\n                    mprog.partbodyfeatureactivate('25至60導圓角')\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('25至60除料')\r\n                    mprog.partbodyfeatureactivate('25至60導圓角')\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('25至60除料')\r\n                    mprog.partbodyfeatureactivate('25至60導圓角')\r\n                elif stamping_press_type == 4:\r\n                    mprog.partbodyfeatureactivate('80至250除料')\r\n                    mprog.partbodyfeatureactivate('80至250導圓角(除160和200)')\r\n                elif stamping_press_type == 5:\r\n                    mprog.partbodyfeatureactivate('80至250除料')\r\n                    mprog.partbodyfeatureactivate('80至250導圓角(除160和200)')\r\n                elif stamping_press_type == 6:\r\n                    mprog.partbodyfeatureactivate('80至250除料')\r\n                elif stamping_press_type == 7:\r\n                    mprog.partbodyfeatureactivate('80至250除料')\r\n                elif stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('80至250除料')\r\n                    mprog.partbodyfeatureactivate('80至250導圓角(除160和200)')\r\n            except:\r\n                print('FRAME23_1 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME23_1 Update success')\r\n                except:\r\n                    print('FRAME23_1 Update error')\r\n        elif name == 'FRAME24':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME24')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par(\r\n                    'FRAME24', stamping_press_type)\r\n                print('FRAME24 Parameter change success')\r\n            except BaseException:\r\n                print('FRAME24 Parameter change error')\r\n            if stamping_press_type == 0:\r\n                mprog.partbodyfeatureactivate('Pad.2')\r\n                mprog.activatefeature('M5', 0)\r\n                mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                mprog.partbodyfeatureactivate('machining_bbbbb_2')\r\n                mprog.activatefeature('machining_Hole_1', 0)\r\n            elif stamping_press_type == 1:\r\n                mprog.partbodyfeatureactivate('Pad.2')\r\n                mprog.activatefeature('M5', 0)\r\n                mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                mprog.partbodyfeatureactivate('machining_bbbbb_2')\r\n                mprog.activatefeature('machining_Hole_1', 0)\r\n            elif stamping_press_type == 2:\r\n                mprog.partbodyfeatureactivate('Pad.2')\r\n                mprog.activatefeature('M5', 0)\r\n                mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                mprog.partbodyfeatureactivate('machining_bbbbb_2')\r\n                mprog.activatefeature('machining_Hole_1', 0)\r\n            elif stamping_press_type == 3:\r\n                mprog.partbodyfeatureactivate('Pad.2')\r\n                mprog.activatefeature('M5', 0)\r\n                mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                mprog.partbodyfeatureactivate('machining_bbbbb_2')\r\n                mprog.activatefeature('machining_Hole_1', 0)\r\n            elif stamping_press_type == 4:\r\n                mprog.partbodyfeatureactivate('Pad.2')\r\n                mprog.activatefeature('M5', 0)\r\n                mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                mprog.partbodyfeatureactivate('machining_bbbbb_2')\r\n                mprog.activatefeature('machining_Hole_1', 0)\r\n            elif stamping_press_type == 5:\r\n                mprog.partbodyfeatureactivate('Pad.2')\r\n                mprog.activatefeature('M5', 0)\r\n                mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                mprog.partbodyfeatureactivate('machining_bbbbb_2')\r\n                mprog.activatefeature('machining_Hole_1', 0)\r\n            elif stamping_press_type == 6:\r\n                mprog.partbodyfeatureactivate('Pad.2')\r\n                mprog.activatefeature('M5', 0)\r\n                mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                mprog.partbodyfeatureactivate('machining_bbbbb_2')\r\n                mprog.activatefeature('machining_Hole_1', 0)\r\n            elif stamping_press_type == 7:\r\n                mprog.partbodyfeatureactivate('Pad.2')\r\n                mprog.activatefeature('M5', 0)\r\n                mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                mprog.partbodyfeatureactivate('machining_bbbbb_2')\r\n                mprog.activatefeature('machining_Hole_1', 0)\r\n            elif stamping_press_type == 8:\r\n                mprog.partbodyfeatureactivate('Pad.2')\r\n                mprog.activatefeature('M5', 0)\r\n                mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                mprog.partbodyfeatureactivate('machining_bbbbb_2')\r\n                mprog.activatefeature('machining_Hole_1', 0)\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME24 Update success')\r\n            except BaseException:\r\n                print('FRAME24 Update error')\r\n        elif name == 'FRAME24_1':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME24_1')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par(\r\n                    'FRAME24_1', stamping_press_type)\r\n                print('FRAME24_1 Parameter change success')\r\n            except BaseException:\r\n                print('FRAME24_1 Parameter change error')\r\n            if stamping_press_type == 0:\r\n                mprog.partbodyfeatureactivate('Pad.2')\r\n                mprog.activatefeature('M5', 0)\r\n                mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                mprog.partbodyfeatureactivate('machining_bbbbb_2')\r\n                mprog.activatefeature('machining_Hole_1', 0)\r\n            elif stamping_press_type == 1:\r\n                mprog.partbodyfeatureactivate('Pad.2')\r\n                mprog.activatefeature('M5', 0)\r\n                mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                mprog.partbodyfeatureactivate('machining_bbbbb_2')\r\n                mprog.activatefeature('machining_Hole_1', 0)\r\n            elif stamping_press_type == 2:\r\n                mprog.partbodyfeatureactivate('Pad.2')\r\n                mprog.activatefeature('M5', 0)\r\n                mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                mprog.partbodyfeatureactivate('machining_bbbbb_2')\r\n                mprog.activatefeature('machining_Hole_1', 0)\r\n            elif stamping_press_type == 3:\r\n                mprog.partbodyfeatureactivate('Pad.2')\r\n                mprog.activatefeature('M5', 0)\r\n                mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                mprog.partbodyfeatureactivate('machining_bbbbb_2')\r\n                mprog.activatefeature('machining_Hole_1', 0)\r\n            elif stamping_press_type == 4:\r\n                mprog.partbodyfeatureactivate('Pad.2')\r\n                mprog.activatefeature('M5', 0)\r\n                mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                mprog.partbodyfeatureactivate('machining_bbbbb_2')\r\n                mprog.activatefeature('machining_Hole_1', 0)\r\n            elif stamping_press_type == 5:\r\n                mprog.partbodyfeatureactivate('Pad.2')\r\n                mprog.activatefeature('M5', 0)\r\n                mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                mprog.partbodyfeatureactivate('machining_bbbbb_2')\r\n                mprog.activatefeature('machining_Hole_1', 0)\r\n            elif stamping_press_type == 6:\r\n                mprog.partbodyfeatureactivate('Pad.2')\r\n                mprog.activatefeature('M5', 0)\r\n                mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                mprog.partbodyfeatureactivate('machining_bbbbb_2')\r\n                mprog.activatefeature('machining_Hole_1', 0)\r\n            elif stamping_press_type == 7:\r\n                mprog.partbodyfeatureactivate('Pad.2')\r\n                mprog.activatefeature('M5', 0)\r\n                mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                mprog.partbodyfeatureactivate('machining_bbbbb_2')\r\n                mprog.activatefeature('machining_Hole_1', 0)\r\n            elif stamping_press_type == 8:\r\n                mprog.partbodyfeatureactivate('Pad.2')\r\n                mprog.activatefeature('M5', 0)\r\n                mprog.partbodyfeatureactivate('machining_bbbbb')\r\n                mprog.partbodyfeatureactivate('machining_bbbbb_2')\r\n                mprog.activatefeature('machining_Hole_1', 0)\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME24_1 Update success')\r\n            except BaseException:\r\n                print('FRAME24_1 Update error')\r\n        elif name == 'FRAME25':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME25')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME25', stamping_press_type)\r\n                print('FRAME25 Parameter change success')\r\n            except:\r\n                print('FRAME25 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.activatefeature('3_M8通', 0)\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.activatefeature('3_M8通', 0)\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.activatefeature('3_M8通', 0)\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.activatefeature('3_M8通', 0)\r\n            except:\r\n                print('FRAME25 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME25 Update success')\r\n                except:\r\n                    print('FRAME25 Update error')\r\n        elif name == 'FRAME26':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME26')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME26', stamping_press_type)\r\n                print('FRAME26 Parameter change success')\r\n            except:\r\n                print('FRAME26 Parameter change error')\r\n\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('F')\r\n                    mprog.partbodyfeatureactivate('G')\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('F')\r\n                    mprog.partbodyfeatureactivate('G')\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('F')\r\n                    mprog.partbodyfeatureactivate('G')\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('F')\r\n                    mprog.partbodyfeatureactivate('G')\r\n                elif stamping_press_type == 4:\r\n                    mprog.partbodyfeatureactivate('F')\r\n                    mprog.partbodyfeatureactivate('G')\r\n                elif stamping_press_type == 5:\r\n                    mprog.partbodyfeatureactivate('F')\r\n                elif stamping_press_type == 6:\r\n                    mprog.partbodyfeatureactivate('F')\r\n                    mprog.partbodyfeatureactivate('G')\r\n                elif stamping_press_type == 7:\r\n                    mprog.partbodyfeatureactivate('F')\r\n                    mprog.partbodyfeatureactivate('G')\r\n                elif stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('250除料')\r\n            except:\r\n                print('FRAME26 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME26 Update success')\r\n                except:\r\n                    print('FRAME26 Update error')\r\n        elif name == 'FRAME27':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME27')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME27', stamping_press_type)\r\n                print('FRAME27 Parameter change success')\r\n            except:\r\n                print('FRAME27 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('35N前')\r\n                    mprog.activatefeature('Hole', 0)\r\n                    mprog.activatefeature('Piping', 0)\r\n                    mprog.partbodyfeatureactivate('machining_aaaaa2')\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('35N前')\r\n                    mprog.activatefeature('Hole', 0)\r\n                    mprog.activatefeature('Piping', 0)\r\n                    mprog.partbodyfeatureactivate('machining_aaaaa2')\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('Pocket.1')\r\n                    mprog.activatefeature('Hole', 0)\r\n                    mprog.activatefeature('Piping', 0)\r\n                    mprog.activatefeature('machining_ddddd', 0)\r\n                    mprog.partbodyfeatureactivate('machining_aaaaa2')\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('Pocket.1')\r\n                    mprog.activatefeature('Hole', 0)\r\n                    mprog.activatefeature('Piping', 0)\r\n                    mprog.activatefeature('machining_ddddd', 0)\r\n                    mprog.partbodyfeatureactivate('machining_aaaaa2')\r\n            except BaseException:\r\n                print('FRAME27 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME27 Update success')\r\n                except BaseException:\r\n                    print('FRAME27 Update error')\r\n        elif name == 'FRAME27_1':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME27_1')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME27_1', stamping_press_type)\r\n                print('FRAME27_1 Parameter change success')\r\n            except:\r\n                print('FRAME27_1 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('35N前')\r\n                    mprog.activatefeature('Hole', 0)\r\n                    mprog.activatefeature('Piping', 0)\r\n                    mprog.partbodyfeatureactivate('machining_aaaaa2')\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('35N前')\r\n                    mprog.activatefeature('Hole', 0)\r\n                    mprog.activatefeature('Piping', 0)\r\n                    mprog.partbodyfeatureactivate('machining_aaaaa2')\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('Pocket.1')\r\n                    mprog.activatefeature('Hole', 0)\r\n                    mprog.activatefeature('Piping', 0)\r\n                    mprog.activatefeature('machining_ddddd', 0)\r\n                    mprog.partbodyfeatureactivate('machining_aaaaa2')\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('Pocket.1')\r\n                    mprog.activatefeature('Hole', 0)\r\n                    mprog.activatefeature('Piping', 0)\r\n                    mprog.activatefeature('machining_ddddd', 0)\r\n                    mprog.partbodyfeatureactivate('machining_aaaaa2')\r\n            except BaseException:\r\n                print('FRAME27_1 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME27_1 Update success')\r\n                except BaseException:\r\n                    print('FRAME27_1 Update error')\r\n        elif name == 'FRAME28':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME28')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME28', stamping_press_type)\r\n                print('FRAME28 Parameter change success')\r\n            except:\r\n                print('FRAME28 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('SN1_25250_ABD')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_E')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_F')\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('SN1_25250_ABD')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_E')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_F')\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('SN1_25250_ABD')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_E')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_F')\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('SN1_25250_ABD')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_E')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_F')\r\n                elif stamping_press_type == 4:\r\n                    mprog.partbodyfeatureactivate('SN1_25250_ABD')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_E')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_F')\r\n                elif stamping_press_type == 5:\r\n                    mprog.partbodyfeatureactivate('SN1_25250_ABD')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_E')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_F')\r\n                elif stamping_press_type == 6:\r\n                    mprog.partbodyfeatureactivate('SN1_25250_ABD')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_E')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_F')\r\n                elif stamping_press_type == 7:\r\n                    mprog.partbodyfeatureactivate('SN1_25250_ABD')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_E')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_F')\r\n                elif stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('SN1_25250_ABD')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_E')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_F')\r\n            except:\r\n                print('FRAME28 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME28 Update success')\r\n                except:\r\n                    print('FRAME28 Update error')\r\n        elif name == 'FRAME29':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME29')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par(\r\n                    'FRAME29', stamping_press_type)\r\n                print('FRAME29 Parameter change success')\r\n            except BaseException:\r\n                print('FRAME29 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 5:\r\n                    mprog.partbodyfeatureactivate('Hole.1')\r\n                elif stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('Hole.1')\r\n                else:\r\n                    mprog.partbodyfeatureactivate('Hole.1')\r\n                    mprog.partbodyfeatureactivate(\"F\")\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME29 Update success')\r\n                except BaseException:\r\n                    print('FRAME29 Update error')\r\n        elif name == 'FRAME30':  # 已更改\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME30')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME30', stamping_press_type)\r\n                print('FRAME30 Parameter change success')\r\n            except:\r\n                print('FRAME30 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('SN1_25250_AE')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_HIJ')\r\n                    mprog.activatefeature('FRAME_CRANK_SHAFT', 0)\r\n                    mprog.activatefeature('Second_degree_drop_wire_threading_hole', 0)\r\n                    mprog.activatefeature('4_M14通', 0)\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('SN1_25250_AE')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_HIJ')\r\n                    mprog.activatefeature('FRAME_CRANK_SHAFT', 0)\r\n                    mprog.activatefeature('Second_degree_drop_wire_threading_hole', 0)\r\n                    mprog.activatefeature('4_M14通', 0)\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('SN1_25250_AE')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_HIJ')\r\n                    mprog.activatefeature('FRAME_CRANK_SHAFT', 0)\r\n                    mprog.activatefeature('Second_degree_drop_wire_threading_hole', 0)\r\n                    mprog.activatefeature('4_M14通', 0)\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('SN1_25250_AE')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_HIJ')\r\n                    mprog.activatefeature('FRAME_CRANK_SHAFT', 0)\r\n                    mprog.activatefeature('Second_degree_drop_wire_threading_hole', 0)\r\n                    mprog.activatefeature('4_M14通', 0)\r\n                elif stamping_press_type == 4:\r\n                    mprog.partbodyfeatureactivate('SN1_25250_AE')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_HIJ')\r\n                    mprog.activatefeature('FRAME_CRANK_SHAFT', 0)\r\n                    mprog.activatefeature('Second_degree_drop_wire_threading_hole', 0)\r\n                    mprog.activatefeature('4_M14通', 0)\r\n                elif stamping_press_type == 5:\r\n                    mprog.partbodyfeatureactivate('SN1_25250_AE')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_HIJ')\r\n                    mprog.activatefeature('FRAME_CRANK_SHAFT', 0)\r\n                    mprog.activatefeature('Second_degree_drop_wire_threading_hole', 0)\r\n                    mprog.activatefeature('4_M14通', 0)\r\n                elif stamping_press_type == 6:\r\n                    mprog.partbodyfeatureactivate('SN1_25250_AE')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_HIJ')\r\n                    mprog.activatefeature('FRAME_CRANK_SHAFT', 0)\r\n                    mprog.activatefeature('Second_degree_drop_wire_threading_hole', 0)\r\n                    mprog.activatefeature('4_M14通', 0)\r\n                elif stamping_press_type == 7:\r\n                    mprog.partbodyfeatureactivate('SN1_25250_AE')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_HIJ')\r\n                    mprog.activatefeature('FRAME_CRANK_SHAFT', 0)\r\n                    mprog.activatefeature('Second_degree_drop_wire_threading_hole', 0)\r\n                    mprog.activatefeature('4_M14通', 0)\r\n                elif stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('SN1_25250_AE')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                    mprog.partbodyfeatureactivate('SN1_25250_HIJ')\r\n                    mprog.activatefeature('FRAME_CRANK_SHAFT', 0)\r\n                    mprog.activatefeature('Second_degree_drop_wire_threading_hole', 0)\r\n                    mprog.activatefeature('4_M14通', 0)\r\n            except:\r\n                print('FRAME30 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME30 Update success')\r\n                except:\r\n                    print('FRAME30 Update error')\r\n        elif name == 'FRAME31':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME31')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME31', stamping_press_type)\r\n                print('FRAME31 Parameter change success')\r\n            except:\r\n                print('FRAME31 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n                    mprog.activatefeature('FRAME_Body', 2)\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n                    mprog.activatefeature('FRAME_Body', 0)\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n                    mprog.activatefeature('FRAME_Body', 0)\r\n            except:\r\n                print('FRAME31 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME31 Update success')\r\n                except:\r\n                    print('FRAME31 Update error')\r\n        elif name == 'FRAME32':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME32')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME32', stamping_press_type)\r\n                print('FRAME32 Parameter change success')\r\n            except:\r\n                print('FRAME32 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n                elif stamping_press_type == 4:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n                elif stamping_press_type == 5:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n                elif stamping_press_type == 6:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n                elif stamping_press_type == 7:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n                elif stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n            except:\r\n                print('FRAME32 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME32 Update success')\r\n                except:\r\n                    print('FRAME32 Update error')\r\n        elif name == \"FRAME33\":\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME33')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME33', stamping_press_type)\r\n                print('FRAME33 Parameter change success')\r\n            except:\r\n                print('FRAME33 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.partbodyfeatureactivate('SN1_2545_CEF')\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_2545_LMN')\r\n                    mprog.partbodyfeatureactivate(\"O\")\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.partbodyfeatureactivate('SN1_2545_CEF')\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_2545_LMN')\r\n                    mprog.partbodyfeatureactivate(\"O\")\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.partbodyfeatureactivate('SN1_2545_CEF')\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_2545_LMN')\r\n                    mprog.partbodyfeatureactivate(\"O\")\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                    mprog.partbodyfeatureactivate(\"O\")\r\n            except:\r\n                print('FRAME33 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME33 Update success')\r\n                except:\r\n                    print('FRAME33 Update error')\r\n        elif name == 'FRAME34':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME34')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME34', stamping_press_type)\r\n                print('FRAME34 Parameter change success')\r\n            except:\r\n                print('FRAME34 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.partbodyfeatureactivate('SN1_2545_CD')\r\n                    mprog.partbodyfeatureactivate('SN1_2535_J')\r\n                    mprog.activatefeature('Air_pipe_wire_threading_hole', 0)\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_1_2545_PQR')\r\n                    mprog.partbodyfeatureactivate(\"S\")\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.partbodyfeatureactivate('SN1_2545_CD')\r\n                    mprog.partbodyfeatureactivate('SN1_2535_J')\r\n                    mprog.activatefeature('Air_pipe_wire_threading_hole', 0)\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_1_2545_PQR')\r\n                    mprog.partbodyfeatureactivate(\"S\")\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.partbodyfeatureactivate('SN1_2545_CD')\r\n                    mprog.activatefeature('Air_pipe_wire_threading_hole', 0)\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_1_2545_PQR')\r\n                    mprog.partbodyfeatureactivate(\"S\")\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('AB')\r\n                    mprog.partbodyfeatureactivate('SN1_60_NM')\r\n                    mprog.activatefeature('Air_pipe_wire_threading_hole', 0)\r\n                    mprog.activatefeature('Hole_2', 0)\r\n                    mprog.partbodyfeatureactivate(\"S\")\r\n            except:\r\n                print('FRAME34 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME34 Update success')\r\n                except:\r\n                    print('FRAME34 Update error')\r\n        elif name == 'FRAME35':  # 已更改\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME35')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME35', stamping_press_type)\r\n                print('FRAME35 Parameter change success')\r\n            except:\r\n                print('FRAME35 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.activatefeature('SN1_2545_Body', 0)\r\n                    mprog.activatefeature('Hole', 2)\r\n                    mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                elif stamping_press_type == 1:\r\n                    mprog.activatefeature('SN1_2545_Body', 0)\r\n                    mprog.activatefeature('Hole', 2)\r\n                    mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                elif stamping_press_type == 2:\r\n                    mprog.activatefeature('SN1_2545_Body', 0)\r\n                    mprog.activatefeature('Hole', 2)\r\n                    mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                elif stamping_press_type == 3:\r\n                    mprog.activatefeature('SN1_60_Body', 0)\r\n                    mprog.activatefeature('Hole', 2)\r\n                    mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                elif stamping_press_type == 4:\r\n                    mprog.activatefeature('SN1_80200_Body', 0)\r\n                    mprog.activatefeature('Hole', 2)\r\n                    mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                elif stamping_press_type == 5:\r\n                    mprog.activatefeature('SN1_80200_Body', 0)\r\n                    mprog.activatefeature('Hole', 2)\r\n                    mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                elif stamping_press_type == 6:\r\n                    mprog.activatefeature('SN1_80200_Body', 0)\r\n                    mprog.activatefeature('Hole', 2)\r\n                    mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                elif stamping_press_type == 7:\r\n                    mprog.activatefeature('SN1_80200_Body', 6)\r\n                    mprog.activatefeature('Hole', 2)\r\n                    mprog.partbodyfeatureactivate('SN1_25250_L')\r\n                elif stamping_press_type == 8:\r\n                    mprog.activatefeature('SN1_250_Body', 0)\r\n                    mprog.activatefeature('Hole', 3)\r\n                    mprog.partbodyfeatureactivate('SN1_25250_L')\r\n            except:\r\n                print('FRAME35 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME35 Update success')\r\n                except:\r\n                    print('FRAME35 Update error')\r\n        elif name == 'FRAME36':  # 已更改\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME36')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME36', stamping_press_type)\r\n                print('FRAME36 Parameter change success')\r\n            except:\r\n                print('FRAME36 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_25_Body')\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_3560_Body')\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_3560_Body')\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_3560_Body')\r\n            except:\r\n                print('FRAME36 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME36 Update success')\r\n                except:\r\n                    print('FRAME36 Update error')\r\n        elif name == 'FRAME37':  # 已更改\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME37')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME37', stamping_press_type)\r\n                print('FRAME37 Parameter change success')\r\n            except:\r\n                print('FRAME37 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n                    mprog.partbodyfeatureactivate('FRAME_Body')\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n                    mprog.partbodyfeatureactivate('FRAME_Body')\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n                    mprog.partbodyfeatureactivate('FRAME_Body')\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n                    mprog.partbodyfeatureactivate('FRAME_Body')\r\n            except:\r\n                print('FRAME37 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME37 Update success')\r\n                except:\r\n                    print('FRAME37 Update error')\r\n        elif name == 'FRAME38':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME38')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME38', stamping_press_type)\r\n                print('FRAME38 Parameter change success')\r\n            except:\r\n                print('FRAME38 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 0:\r\n                    mprog.partbodyfeatureactivate('ABD')\r\n                    mprog.activatefeature('AIR_TANK_FIX_HOLE', 0)\r\n                elif stamping_press_type == 1:\r\n                    mprog.partbodyfeatureactivate('ABD')\r\n                    mprog.activatefeature('AIR_TANK_FIX_HOLE', 0)\r\n                elif stamping_press_type == 2:\r\n                    mprog.partbodyfeatureactivate('ABD')\r\n                    mprog.activatefeature('AIR_TANK_FIX_HOLE', 0)\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('ABD')\r\n                    mprog.activatefeature('AIR_TANK_FIX_HOLE', 0)\r\n                elif stamping_press_type == 4:\r\n                    mprog.partbodyfeatureactivate('ABD')\r\n                    mprog.activatefeature('AIR_TANK_FIX_HOLE', 0)\r\n                elif stamping_press_type == 5:\r\n                    mprog.partbodyfeatureactivate('ABD')\r\n                    mprog.activatefeature('AIR_TANK_FIX_HOLE', 0)\r\n                elif stamping_press_type == 6:\r\n                    mprog.partbodyfeatureactivate('ABD')\r\n                    mprog.activatefeature('AIR_TANK_FIX_HOLE', 0)\r\n                elif stamping_press_type == 7:\r\n                    mprog.partbodyfeatureactivate('ABD')\r\n                    mprog.activatefeature('AIR_TANK_FIX_HOLE', 0)\r\n                elif stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('ABD')\r\n                    mprog.activatefeature('AIR_TANK_FIX_HOLE', 0)\r\n            except:\r\n                print('FRAME38 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME38 Update success')\r\n                except:\r\n                    print('FRAME38 Update error')\r\n        elif name == 'FRAME41':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME41')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME41', stamping_press_type)\r\n                print('FRAME41 Parameter change success')\r\n            except:\r\n                print('FRAME41 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 1:  # 35\r\n                    pass\r\n            except:\r\n                print('FRAME41 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME41 Update success')\r\n                except:\r\n                    print('FRAME41 Update error')\r\n        elif name == 'FRAME42':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME42')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME42', stamping_press_type)\r\n                print('FRAME42 Parameter change success')\r\n            except:\r\n                print('FRAME42 Parameter change error')\r\n\r\n            try:\r\n                if stamping_press_type == 2:  # 45\r\n                    pass\r\n                elif stamping_press_type == 3:  # 60\r\n                    pass\r\n                elif stamping_press_type == 4:  # 80\r\n                    pass\r\n            except:\r\n                print('FRAME42 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME42 Update success')\r\n                except:\r\n                    print('FRAME42 Update error')\r\n        elif name == 'FRAME43':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME43')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par(\r\n                    'FRAME43', stamping_press_type)\r\n                print('FRAME43 Parameter change success')\r\n            except BaseException:\r\n                print('FRAME43 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 4:\r\n                    mprog.partbodyfeatureactivate('machining_Pocket')\r\n                    mprog.activatefeature(\"Hole_1\", 0)\r\n                elif stamping_press_type == 3:\r\n                    mprog.partbodyfeatureactivate('machining_Pocket')\r\n                    mprog.activatefeature(\"Hole_1\", 0)\r\n                elif stamping_press_type == 5:\r\n                    mprog.partbodyfeatureactivate('machining_Pocket')\r\n                    mprog.activatefeature(\"Hole_1\", 0)\r\n                elif stamping_press_type == 6:\r\n                    mprog.activatefeature(\"Hole_1\", 0)\r\n                elif stamping_press_type == 7:\r\n                    mprog.partbodyfeatureactivate('machining_Pocket')\r\n                    mprog.activatefeature(\"Hole_1\", 0)\r\n                elif stamping_press_type == 8:\r\n                    mprog.activatefeature(\"Hole_1\", 0)\r\n                else:\r\n                    pass\r\n            except BaseException:\r\n                print('FRAME43 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME43 Update success')\r\n                except BaseException:\r\n                    print('FRAME43 Update error')\r\n        elif name == 'FRAME45':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME45')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME45', stamping_press_type)\r\n                print('FRAME45 Parameter change success')\r\n            except:\r\n                print('FRAME45 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 3:  # 60N\r\n                    mprog.partbodyfeatureactivate('Chamfer.G')\r\n                    mprog.partbodyfeatureactivate('Chamfer.F')\r\n                elif stamping_press_type == 4:  # 80N\r\n                    mprog.partbodyfeatureactivate('Chamfer.G')\r\n                    mprog.partbodyfeatureactivate('Chamfer.F')\r\n                elif stamping_press_type == 5:  # 110N\r\n                    mprog.partbodyfeatureactivate('Chamfer.G')\r\n                    mprog.partbodyfeatureactivate('Chamfer.F')\r\n                elif stamping_press_type == 6:  # 160N\r\n                    mprog.partbodyfeatureactivate('Chamfer.G')\r\n                    mprog.partbodyfeatureactivate('Chamfer.F')\r\n                elif stamping_press_type == 7:  # 200N\r\n                    mprog.partbodyfeatureactivate('Chamfer.G')\r\n                    mprog.partbodyfeatureactivate('Chamfer.F')\r\n                elif stamping_press_type == 8:  # 250N\r\n                    mprog.partbodyfeatureactivate('Chamfer.G')\r\n                    mprog.partbodyfeatureactivate('Chamfer.F')\r\n            except:\r\n                print('FRAME45 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME45 Update success')\r\n                except:\r\n                    print('FRAME45 Update error')\r\n        elif name == 'FRAME47':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME47')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME47', stamping_press_type)\r\n                print('FRAME47 Parameter change success')\r\n            except:\r\n                print('FRAME47 Parameter change error')\r\n\r\n            try:\r\n                if stamping_press_type == 4:  # 80\r\n                    pass\r\n                elif stamping_press_type == 5:  # 110\r\n                    pass\r\n                elif stamping_press_type == 6:  # 160\r\n                    pass\r\n                elif stamping_press_type == 7:  # 200\r\n                    pass\r\n                elif stamping_press_type == 8:  # 250\r\n                    pass\r\n            except:\r\n                print('FRAME47 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME47 Update success')\r\n                except:\r\n                    print('FRAME47 Update error')\r\n        elif name == 'FRAME48':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME48')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME48', stamping_press_type)\r\n                print('FRAME48 Parameter change success')\r\n            except:\r\n                print('FRAME48 Parameter change error')\r\n\r\n            try:\r\n                if stamping_press_type == 4:  # 80\r\n                    pass\r\n                elif stamping_press_type == 5:  # 110\r\n                    pass\r\n                elif stamping_press_type == 6:  # 160\r\n                    pass\r\n                elif stamping_press_type == 7:  # 200\r\n                    pass\r\n                elif stamping_press_type == 8:  # 250\r\n                    pass\r\n            except:\r\n                print('FRAME48 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME48 Update success')\r\n                except:\r\n                    print('FRAME48 Update error')\r\n        elif name == 'FRAME49':  # 已更改\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME49')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME49', stamping_press_type)\r\n                print('FRAME49 Parameter change success')\r\n            except:\r\n                print('FRAME49 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 4:\r\n                    mprog.activatefeature('body', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_80250_c')\r\n                    mprog.activatefeature('M12通', 0)\r\n                elif stamping_press_type == 5:\r\n                    mprog.activatefeature('body', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_80250_c')\r\n                    mprog.activatefeature('M12通', 0)\r\n                elif stamping_press_type == 6:\r\n                    mprog.activatefeature('body', 0)\r\n                    mprog.activatefeature('M12通', 0)\r\n                elif stamping_press_type == 7:\r\n                    mprog.activatefeature('body', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_80250_c')\r\n                    mprog.activatefeature('M12通', 0)\r\n                elif stamping_press_type == 8:\r\n                    mprog.activatefeature('body', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_80250_c')\r\n                    mprog.activatefeature('M12通', 0)\r\n            except:\r\n                print('FRAME49 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME49 Update success')\r\n                except:\r\n                    print('FRAME49 Update error')\r\n        elif name == 'FRAME50':  # 已更改\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME50')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME50', stamping_press_type)\r\n                print('FRAME50 Parameter change success')\r\n            except:\r\n                print('FRAME50 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 4:\r\n                    mprog.activatefeature('Body', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_c')\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                elif stamping_press_type == 5:\r\n                    mprog.activatefeature('Body', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_c')\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                elif stamping_press_type == 6:\r\n                    mprog.activatefeature('Body', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_c')\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                elif stamping_press_type == 7:\r\n                    mprog.activatefeature('Body', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_c')\r\n                    mprog.activatefeature('Hole_1', 0)\r\n                elif stamping_press_type == 8:\r\n                    mprog.activatefeature('Body', 0)\r\n                    mprog.partbodyfeatureactivate('FRAME_SN1_c')\r\n                    mprog.activatefeature('Hole_1', 0)\r\n            except:\r\n                print('FRAME50 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME50 Update success')\r\n                except:\r\n                    print('FRAME50 Update error')\r\n        elif name == 'FRAME51':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME51')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME51', stamping_press_type)\r\n                print('FRAME51 Parameter change success')\r\n            except:\r\n                print('FRAME51 Parameter change error')\r\n            # 判斷是否需要模墊加工\r\n            try:\r\n                if stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n                    mprog.partbodyfeatureactivate('SN1_250_CD')\r\n                    mprog.activatefeature('M10*35L', 0)\r\n                else:\r\n                    print('FRAME51 feature activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME51 Update success')\r\n                except:\r\n                    print('FRAME51 Update error')\r\n        elif name == 'FRAME51_1':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME51_1')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME51_1', stamping_press_type)\r\n                print('FRAME51_1 Parameter change success')\r\n            except:\r\n                print('FRAME51_1 Parameter change error')\r\n            # 判斷是否需要模墊加工\r\n            try:\r\n                if stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n                    mprog.partbodyfeatureactivate('SN1_250_CD')\r\n                    mprog.activatefeature('M10*35L', 0)\r\n                else:\r\n                    print('FRAME51_1 feature activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME51_1 Update success')\r\n                except:\r\n                    print('FRAME51_1 Update error')\r\n        elif name == 'FRAME52':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME52')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME52', stamping_press_type)\r\n                print('FRAME52 Parameter change success')\r\n            except:\r\n                print('FRAME52 Parameter change error')\r\n            # 判斷是否需要模墊加工\r\n            try:\r\n                if machiningdiepad == 0:\r\n                    mprog.partbodyfeatureactivate('machining_除料')\r\n                    mprog.activatefeature('machining_通孔', 0)\r\n                    print('FRAME52 feature activate success')\r\n                else:\r\n                    print('FRAME52 feature activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME52 Update success')\r\n                except:\r\n                    print('FRAME52 Update error')\r\n        elif name == 'FRAME53':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME53')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par(\r\n                    'FRAME53', stamping_press_type)\r\n                print('FRAME53 Parameter change success')\r\n            except BaseException:\r\n                print('FRAME53 Parameter change error')\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME53 Update success')\r\n            except BaseException:\r\n                print('FRAME53 Update error')\r\n        elif name == 'FRAME53_1':\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME53_1')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par(\r\n                    'FRAME53_1', stamping_press_type)\r\n                print('FRAME53_1 Parameter change success')\r\n            except BaseException:\r\n                print('FRAME53_1 Parameter change error')\r\n            try:\r\n                mprog.Update()\r\n                print('FRAME53_1 Update success')\r\n            except BaseException:\r\n                print('FRAME53_1 Update error')\r\n        elif name == 'FRAME54':  # 已更改\r\n            excel = epc.ExcelOp('尺寸整理表', 'FRAME54')\r\n            try:\r\n                parameter_name, parameter_value = excel.get_sheet_par('FRAME54', stamping_press_type)\r\n                print('FRAME54 Parameter change success')\r\n            except:\r\n                print('FRAME54 Parameter change error')\r\n            try:\r\n                if stamping_press_type == 6:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n                elif stamping_press_type == 7:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n                elif stamping_press_type == 8:\r\n                    mprog.partbodyfeatureactivate('Body')\r\n            except:\r\n                print('FRAME54 Parameter activate error')\r\n            finally:\r\n                try:\r\n                    mprog.Update()\r\n                    print('FRAME54 Update success')\r\n                except:\r\n                    print('FRAME54 Update error')\r\n        elif name == \"crankshaft\":\r\n            if travel_type == 1:\r\n                excel = epc.ExcelOp('尺寸整理表', 'crankshaft_S')\r\n                try:\r\n                    parameter_name, parameter_value = excel.get_sheet_par('crankshaft', stamping_press_type)\r\n                    print('crankshaft_S Parameter change success')\r\n                except:\r\n                    print('crankshaft_S Parameter change error')\r\n                try:\r\n                    if stamping_press_type == 0:  # 302CC7S\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('BALLr外1')\r\n                        mprog.partbodyfeatureactivate('BALLr內1')\r\n                        mprog.partbodyfeatureactivate('CALLr1')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_6M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_1M', 0)\r\n                    elif stamping_press_type == 1:  # 322CC7S\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('BALLr外1')\r\n                        mprog.partbodyfeatureactivate('BALLr內1')\r\n                        mprog.partbodyfeatureactivate('CALLr1')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_6M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_1M', 0)\r\n                    elif stamping_press_type == 2:  # 342CC7S\r\n                        mprog.partbodyfeatureactivate('Bex')\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('BALLr外2')\r\n                        mprog.partbodyfeatureactivate('BALLr內1')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_6M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_1M', 0)\r\n                    elif stamping_press_type == 3:  # 372CC7S\r\n                        mprog.partbodyfeatureactivate('Bex')\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('BALLr外2')\r\n                        mprog.partbodyfeatureactivate('BALLr內1')\r\n                        mprog.partbodyfeatureactivate('CALLr1')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_6M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_1M', 0)\r\n                    elif stamping_press_type == 4:  # 395CC7S\r\n                        mprog.partbodyfeatureactivate('Bex')\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('Ar1')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('Cr2')\r\n                        mprog.partbodyfeatureactivate('CALLr2')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_4M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_4M', 0)\r\n                    elif stamping_press_type == 5:  # 412CC7S\r\n                        mprog.partbodyfeatureactivate('Bex')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('BALLr外2')\r\n                        mprog.partbodyfeatureactivate('BALLr內2')\r\n                        mprog.partbodyfeatureactivate('CALLr1')\r\n                        mprog.partbodyfeatureactivate('Cr2')\r\n                        mprog.partbodyfeatureactivate('Cex(SN1_110_S)')\r\n                        mprog.activatefeature('Cex孔(SN1_110_S)', 0)\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_4M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_4M', 0)\r\n                        mprog.activatefeature('Dex(SN1_110_S)', 0)\r\n                    elif stamping_press_type == 6:  # 435CC7S\r\n                        mprog.partbodyfeatureactivate('Bex')\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('Ar1')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('CALLr1')\r\n                        mprog.partbodyfeatureactivate('Cr2')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_4M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_4M', 0)\r\n                    elif stamping_press_type == 7:  # 455CC7S\r\n                        mprog.partbodyfeatureactivate('Bex')\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('Ar1')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('CALLr1')\r\n                        mprog.partbodyfeatureactivate('Cr2')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_4M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_4M', 0)\r\n                    elif stamping_press_type == 8:  # 475CC7S\r\n                        mprog.partbodyfeatureactivate('Bex')\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('Ar1')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('BALLr外2')\r\n                        mprog.partbodyfeatureactivate('Cr2')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_4M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_4M', 0)\r\n                except:\r\n                    print('crankshaft Parameter activate error')\r\n                finally:\r\n                    try:\r\n                        mprog.Update()\r\n                        print('crankshaft Update success')\r\n                    except:\r\n                        print('crankshaft Update error')\r\n            elif travel_type == 2:\r\n                excel = epc.ExcelOp('尺寸整理表', 'crankshaft_H')\r\n                try:\r\n                    parameter_name, parameter_value = excel.get_sheet_par('crankshaft', stamping_press_type)\r\n                    print('crankshaft_H Parameter change success')\r\n                except:\r\n                    print('crankshaft_H Parameter change error')\r\n                try:\r\n                    if stamping_press_type == 0:  # 302CC7H\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('BALLr外1')\r\n                        mprog.partbodyfeatureactivate('BALLr內1')\r\n                        mprog.partbodyfeatureactivate('CALLr1')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_6M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_1M', 0)\r\n                    elif stamping_press_type == 1:  # 322CC7H\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('BALLr外1')\r\n                        mprog.partbodyfeatureactivate('BALLr內1')\r\n                        mprog.partbodyfeatureactivate('CALLr1')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_6M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_1M', 0)\r\n                    elif stamping_press_type == 2:  # 342CC7H\r\n                        mprog.partbodyfeatureactivate('Bex')\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('BALLr外2')\r\n                        mprog.partbodyfeatureactivate('BALLr內1')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_6M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_1M', 0)\r\n                    elif stamping_press_type == 3:  # 372CC7H\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('BALLr外1')\r\n                        mprog.partbodyfeatureactivate('BALLr內1')\r\n                        mprog.partbodyfeatureactivate('CALLr1')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_4M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_1M', 0)\r\n                    elif stamping_press_type == 4:  # 395CC7H\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('Ar1')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('Cr2')\r\n                        mprog.partbodyfeatureactivate('CALLr2')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_4M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_4M', 0)\r\n                    elif stamping_press_type == 5:  # 415CC7H\r\n                        mprog.partbodyfeatureactivate('Bex')\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('BALLr外2')\r\n                        mprog.partbodyfeatureactivate('BALLr內2')\r\n                        mprog.partbodyfeatureactivate('CALLr1')\r\n                        mprog.partbodyfeatureactivate('Cr2')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_4M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_4M', 0)\r\n                    elif stamping_press_type == 6:  # 435CC7H\r\n                        mprog.partbodyfeatureactivate('Bex')\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('Ar1')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('CALLr1')\r\n                        mprog.partbodyfeatureactivate('Cr2')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_4M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_4M', 0)\r\n                    elif stamping_press_type == 7:  # 455CC7H\r\n                        mprog.partbodyfeatureactivate('Bex')\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('Ar1')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('CALLr1')\r\n                        mprog.partbodyfeatureactivate('Cr2')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_4M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_4M', 0)\r\n                    elif stamping_press_type == 8:  # 475CC7H\r\n                        mprog.partbodyfeatureactivate('Bex')\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('Ar1')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('BALLr外2')\r\n                        mprog.partbodyfeatureactivate('Cr2')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_4M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_4M', 0)\r\n                except:\r\n                    print('crankshaft Parameter activate error')\r\n                finally:\r\n                    try:\r\n                        mprog.Update()\r\n                        print('crankshaft Update success')\r\n                    except:\r\n                        print('crankshaft Update error')\r\n            elif travel_type == 3:\r\n                excel = epc.ExcelOp('尺寸整理表', 'crankshaft_P')\r\n                try:\r\n                    parameter_name, parameter_value = excel.get_sheet_par('crankshaft', stamping_press_type)\r\n                    print('crankshaft_P Parameter change success')\r\n                except:\r\n                    print('crankshaft_P Parameter change error')\r\n                try:\r\n                    if stamping_press_type == 0:  # 302CC7P\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('BALLr外1')\r\n                        mprog.partbodyfeatureactivate('BALLr內2')\r\n                        mprog.partbodyfeatureactivate('CALLr1')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_6M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_1M', 0)\r\n                    elif stamping_press_type == 1:  # 322CC7P\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('BALLr外1')\r\n                        mprog.partbodyfeatureactivate('BALLr內1')\r\n                        mprog.partbodyfeatureactivate('CALLr1')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_6M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_1M', 0)\r\n                    elif stamping_press_type == 2:  # 342CC7P\r\n                        mprog.partbodyfeatureactivate('Bex')\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('BALLr外2')\r\n                        mprog.partbodyfeatureactivate('BALLr內1')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_6M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_1M', 0)\r\n                    elif stamping_press_type == 3:  # 372CC7P\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('Aex(SN1_60_P)')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('BALLr外1')\r\n                        mprog.partbodyfeatureactivate('BALLr內1')\r\n                        mprog.partbodyfeatureactivate('CALLr1')\r\n                        mprog.partbodyfeatureactivate('Cr2')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_4M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_1M', 0)\r\n                    elif stamping_press_type == 4:  # 395CC7P\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('Ar1')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('Cr2')\r\n                        mprog.partbodyfeatureactivate('CALLr2')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_4M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_4M', 0)\r\n                    elif stamping_press_type == 5:    # 415CC7P\r\n                        mprog.partbodyfeatureactivate('Bex')\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('BALLr外2')\r\n                        mprog.partbodyfeatureactivate('BALLr內2')\r\n                        mprog.partbodyfeatureactivate('CALLr1')\r\n                        mprog.partbodyfeatureactivate('Cr2')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_4M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_4M', 0)\r\n                    elif stamping_press_type == 6:  # 435CC7P\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('Ar1')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('CALLr1')\r\n                        mprog.partbodyfeatureactivate('Cr2')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_4M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_4M', 0)\r\n                    elif stamping_press_type == 7:  # 455CC7P\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('Ar1')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('CALLr1')\r\n                        mprog.partbodyfeatureactivate('Cr2')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_4M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_4M', 0)\r\n                    elif stamping_press_type == 8:  # 475CC7P\r\n                        mprog.partbodyfeatureactivate('Bex')\r\n                        mprog.partbodyfeatureactivate('C5')\r\n                        mprog.partbodyfeatureactivate('Ar1')\r\n                        mprog.partbodyfeatureactivate('AALLr')\r\n                        mprog.partbodyfeatureactivate('BALLr外2')\r\n                        mprog.partbodyfeatureactivate('Cr2')\r\n                        mprog.activatefeature('D1吊掛孔', 0)\r\n                        mprog.activatefeature('D2_4M', 0)\r\n                        mprog.activatefeature('D3_4M', 0)\r\n                        mprog.activatefeature('D4_4M', 0)\r\n                except:\r\n                    print('crankshaft Parameter activate error')\r\n                finally:\r\n                    try:\r\n                        mprog.Update()\r\n                        print('crankshaft Update success')\r\n                    except:\r\n                        print('crankshaft Update error')\r\n\r\n\r\n    # print出跳錯欄位\r\n    except Exception as e:\r\n        s = sys.exc_info()\r\n        print('報錯行數：{}\\n報錯內容：{}'.format(__file__, s[2].tb_lineno, s[1]))\r\n\r\n    return parameter_name, parameter_value
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SYEI_stamping_press_system/machining_part_TYPE_change.py b/SYEI_stamping_press_system/machining_part_TYPE_change.py
--- a/SYEI_stamping_press_system/machining_part_TYPE_change.py	
+++ b/SYEI_stamping_press_system/machining_part_TYPE_change.py	
@@ -3301,6 +3301,501 @@
                         print('crankshaft Update success')
                     except:
                         print('crankshaft Update error')
+        elif name == "BALL_SCREW":
+            if travel_type == 1:
+                excel = epc.ExcelOp('尺寸整理表', 'BALL_SCREW_S')
+                try:
+                    parameter_name, parameter_value = excel.get_sheet_par('BALL_SCREW', stamping_press_type)
+                    print('BALL_SCREW_S Parameter change success')
+                except:
+                    print('BALL_SCREW_S Parameter change error')
+                try:
+                    if stamping_press_type == 0:  # 302B07S02
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_T')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 1:  # 322B07S02
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_T')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 2:  # 342B07
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_T')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 3:  # 372B07
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('Chamfer_AUAV')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AW')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AX')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 4:  # 392B07S06
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('Chamfer_AUAV')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AW')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AX')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 5:  # 412B07
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('Chamfer_AUAV')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AW')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AX')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 6:  # 432B07
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('Chamfer_AUAV')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AW')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AX')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 7:  # 452B07S03
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('Chamfer_AUAV')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AW')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AX')
+                        mprog.partbodyfeatureactivate('Groove_AY')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 8:  # 472B07S03
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AD')
+                        mprog.partbodyfeatureactivate('Chamfer_AUAV')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AW')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AX')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AZ')
+                except:
+                    print('crankshaft_S Parameter activate error')
+                finally:
+                    try:
+                        mprog.Update()
+                        print('crankshaft_S Update success')
+                    except:
+                        print('crankshaft_S Update error')
+            elif travel_type == 2:
+                excel = epc.ExcelOp('尺寸整理表', 'BALL_SCREW_H')
+                try:
+                    parameter_name, parameter_value = excel.get_sheet_par('BALL_SCREW', stamping_press_type)
+                    print('BALL_SCREW_H Parameter change success')
+                except:
+                    print('BALL_SCREW_H Parameter change error')
+                try:
+                    if stamping_press_type == 0:  # 302B07S03
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_T')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 1:  # 322B07S03
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_T')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 2:  # 342B07S01
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_T')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 3:  # 372B07S04
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('Chamfer_AUAV')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AW')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AX')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 4:  # 392B07S07
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('Chamfer_AUAV')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AW')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AX')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 5:  # 412B07S01
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('Chamfer_AUAV')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AW')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AX')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 6:  # 432B07S01
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('Chamfer_AUAV')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AW')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AX')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 7:  # 452B07S04
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('Chamfer_AUAV')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AW')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AX')
+                        mprog.partbodyfeatureactivate('Groove_AY')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 8:  # 472B07S04
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AD')
+                        mprog.partbodyfeatureactivate('Chamfer_AUAV')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AW')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AX')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                except:
+                    print('BALL_SCREW_H Parameter activate error')
+                finally:
+                    try:
+                        mprog.Update()
+                        print('BALL_SCREW_H Update success')
+                    except:
+                        print('BALL_SCREW_H Update error')
+            elif travel_type == 3:
+                excel = epc.ExcelOp('尺寸整理表', 'BALL_SCREW_P')
+                try:
+                    parameter_name, parameter_value = excel.get_sheet_par('BALL_SCREW', stamping_press_type)
+                    print('BALL_SCREW_P Parameter change success')
+                except:
+                    print('BALL_SCREW_P Parameter change error')
+                try:
+                    if stamping_press_type == 0:  # 302B07S03
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_T')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 1:  # 322B07S03
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_T')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 2:  # 342B07S01
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_T')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 3:  # 372B07S02
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('Chamfer_AUAV')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AW')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AX')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 4:  # 392B07S08
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('Chamfer_AUAV')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AW')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AX')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 5:    # 412B07S02
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('Chamfer_AUAV')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AW')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AX')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 6:  # 432B07S02
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('Chamfer_AUAV')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AW')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AX')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 7:  # 452B07S05
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('Groove_AD')
+                        mprog.partbodyfeatureactivate('Chamfer_AUAV')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AW')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AX')
+                        mprog.partbodyfeatureactivate('Groove_AY')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                    elif stamping_press_type == 8:  # 472B07S05
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Body')
+                        mprog.partbodyfeatureactivate('BALL_SCREW_Thread')
+                        mprog.partbodyfeatureactivate('AE')
+                        mprog.partbodyfeatureactivate('AB')
+                        mprog.partbodyfeatureactivate('Hole_AAAC')
+                        mprog.partbodyfeatureactivate('EdgeFillet_O')
+                        mprog.partbodyfeatureactivate('Chamfer_P')
+                        mprog.partbodyfeatureactivate('EdgeFillet_V')
+                        mprog.partbodyfeatureactivate('EdgeFillet_X')
+                        mprog.partbodyfeatureactivate('EdgeFillet_Y')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AD')
+                        mprog.partbodyfeatureactivate('Chamfer_AUAV')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AW')
+                        mprog.partbodyfeatureactivate('EdgeFillet_AX')
+                        mprog.partbodyfeatureactivate('AFAH')
+                        mprog.partbodyfeatureactivate('Hole_AJ')
+                except:
+                    print('BALL_SCREW_P Parameter activate error')
+                finally:
+                    try:
+                        mprog.Update()
+                        print('BALL_SCREW_P Update success')
+                    except:
+                        print('BALL_SCREW_P Update error')
+
 
 
     # print出跳錯欄位
Index: SYEI_stamping_press_system/test ass.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import main_program as mprog\r\n\r\n#待修正\r\n#412R24S03的基準平面要命名\r\n#FRAME2 ll要修正\r\n\r\n#待討論\r\n#曲軸合銅座建零件\r\n\r\n\r\n\r\n#待補齊\r\n#crankshaft的YZ距離為暫定\r\n#PANEL 的YZ距離為暫定\r\n#POINTER 的YZ距離為暫定
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SYEI_stamping_press_system/test ass.py b/SYEI_stamping_press_system/test ass.py
--- a/SYEI_stamping_press_system/test ass.py	
+++ b/SYEI_stamping_press_system/test ass.py	
@@ -1,8 +1,17 @@
 import main_program as mprog
+import STP_input as S_i
+import excel_parameter_change as epc
 
+excel = epc.ExcelOp('組立尺寸', 'STP_Assembly_value')
+try:
+    S_assmebly_par = excel.get_assmebly_sheet_par(8)
+    print('STP_Assembly_value Parameter change success')
+except BaseException:
+    print('STP_Assembly_value Parameter change error')
+
+mprog.Close_All()
 #待修正
-#412R24S03的基準平面要命名
-#FRAME2 ll要修正
+#FRAME43.2高度要調整
 
 #待討論
 #曲軸合銅座建零件
Index: SYEI_stamping_press_system/DEMO.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from PyQt5 import QtCore, QtGui, QtWidgets\r\nfrom PyQt5.QtWidgets import QVBoxLayout, QWidget, QPushButton, QLabel, QTableWidgetItem, QHeaderView, QComboBox, QAbstractItemView, QMessageBox, QHBoxLayout\r\nfrom PyQt5.QtCore import Qt\r\nfrom PyQt5.QtGui import QColor, QBrush, QPixmap\r\nfrom DEMOGUI import Ui_Dialog\r\nfrom PAD_main import Ui_Form as pad_main_Form\r\nfrom PAD_MACHINING import Ui_Form as pad_machining_Form\r\nfrom PAD_dimension import Ui_Form as pad_dimension_Form\r\nfrom pad_feeding_hole import Ui_Form as pad_feeding_hole_Form\r\nfrom cutout_hole_GUI import Ui_Form as cutout_hole_machining_form\r\nfrom plate_main_first import Ui_Form as plate_main_first_form\r\nfrom pad_main_simple import Ui_Form as pad_main_simple_form\r\nfrom window_main import Ui_Form\r\nfrom io import StringIO\r\nimport main_program as mprog\r\nimport file_path as fp\r\nimport parameter as par\r\nimport Assmebly_design as Ad\r\nimport machining_part_TYPE_change as mptc\r\nimport welding_part_TYPE_change as wptc\r\nimport excel_parameter_change as epc\r\nimport parameter_design_part as pdp\r\nimport interference as itf\r\nimport test_T as tT\r\nimport sys\r\nimport datetime\r\nimport os\r\nimport time\r\nimport traceback\r\nimport check as ch\r\nimport STP_input as S_i\r\n\r\ntest_stop = False\r\n\r\nclass main(QtWidgets.QWidget, Ui_Form):\r\n    def __init__(self):\r\n        super(main, self).__init__()\r\n        self.ui = Ui_Form()\r\n        self.ui.setupUi(self)\r\n        self.setting()\r\n        self.ui.start.clicked.connect(self.start)\r\n\r\n    def setting(self):\r\n        # 设置额外的宽度和高度来容纳其他界面元素\r\n        extra_width = 800\r\n        extra_height = 150\r\n        # 获取表格的大小\r\n        table_size = self.ui.window_main_table.size()\r\n        # 设置窗口的大小为表格大小加上额外的宽度和高度\r\n        self.setFixedSize(table_size.width() + extra_width, table_size.height() + extra_height)\r\n        window_size = self.size()\r\n        # 调整表格的大小以填充整个窗口\r\n        self.ui.window_main_table.setGeometry(0, 0, window_size.width(), window_size.height())\r\n        for x in range(0, 2):\r\n            self.ui.window_main_table.setSpan(x, 0, 1, 5) #以某格為基準向下向左合併儲存格\r\n            newItem = QTableWidgetItem(par.series1[x]) #儲存格內文字\r\n            newItem.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter) #設定置中\r\n            newItem.setFlags(newItem.flags() & ~Qt.ItemIsEditable) #不可編輯化\r\n            self.ui.window_main_table.setItem(x, 0, newItem) #指定文字放置位置\r\n        for x in range(2, 8):\r\n            self.ui.window_main_table.setSpan(x, 0, 1, 3)\r\n            newItem = QTableWidgetItem(par.series2[x-2])\r\n            newItem.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n            newItem.setFlags(newItem.flags() & ~Qt.ItemIsEditable)\r\n            self.ui.window_main_table.setItem(x, 0, newItem)\r\n        for x in range(2, 6):\r\n            self.ui.window_main_table.setSpan(x, 3, 1, 2)\r\n        combo_box_unit = QComboBox()\r\n        combo_box_unit.setEditable(False)\r\n        combo_box_unit.addItem('公制')\r\n        combo_box_unit.addItem('英制')\r\n        self.ui.window_main_table.setCellWidget(2, 3, combo_box_unit)\r\n        combo_box_law = QComboBox()\r\n        combo_box_law.setEditable(False)\r\n        combo_box_law.addItem('一般內銷')\r\n        combo_box_law.addItem('一般外銷')\r\n        combo_box_law.addItem('美國(ASME)')\r\n        combo_box_law.addItem('加拿大')\r\n        combo_box_law.addItem('巴西')\r\n        combo_box_law.addItem('歐洲(CE)')\r\n        self.ui.window_main_table.setCellWidget(3, 3, combo_box_law)\r\n        combo_box_machine = QComboBox()\r\n        combo_box_machine.setEditable(False)\r\n        combo_box_machine.addItem('SN1-25')\r\n        combo_box_machine.addItem('SN1-35')\r\n        combo_box_machine.addItem('SN1-45')\r\n        combo_box_machine.addItem('SN1-60')\r\n        combo_box_machine.addItem('SN1-80')\r\n        combo_box_machine.addItem('SN1-110')\r\n        combo_box_machine.addItem('SN1-160')\r\n        combo_box_machine.addItem('SN1-200')\r\n        combo_box_machine.addItem('SN1-250')\r\n        self.ui.window_main_table.setCellWidget(4, 3, combo_box_machine)\r\n        combo_box_type = QComboBox()\r\n        combo_box_type.setEditable(False)\r\n        combo_box_type.addItem('S')\r\n        combo_box_type.addItem('H')\r\n        combo_box_type.addItem('P')\r\n        self.ui.window_main_table.setCellWidget(5, 3, combo_box_type)\r\n        plate_setup = QPushButton('設定') #括號內為按鈕名稱\r\n        self.ui.window_main_table.setCellWidget(6, 3, plate_setup)\r\n        punch_setup = QPushButton('設定')\r\n        self.ui.window_main_table.setCellWidget(7, 3, punch_setup)\r\n        pad_finish = QtWidgets.QLabel('未設定')\r\n        pad_finish.setAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        self.ui.window_main_table.setCellWidget(6, 4, pad_finish)\r\n        punch_finish = QtWidgets.QLabel('未設定')\r\n        punch_finish.setAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        self.ui.window_main_table.setCellWidget(7, 4, punch_finish)\r\n        for x in range(8, 12):\r\n            self.ui.window_main_table.setSpan(x, 0, 1, 2)\r\n            newItem = QTableWidgetItem(par.series3[x - 8])\r\n            newItem.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n            newItem.setFlags(newItem.flags() & ~Qt.ItemIsEditable)\r\n            self.ui.window_main_table.setItem(x, 0, newItem)\r\n        self.ui.window_main_table.setSpan(12, 0, 2, 1)\r\n        newItem = QTableWidgetItem('主馬達')\r\n        newItem.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        newItem.setFlags(newItem.flags() & ~Qt.ItemIsEditable)\r\n        self.ui.window_main_table.setItem(12, 0, newItem)\r\n        self.ui.window_main_table.setSpan(14, 0, 2, 1)\r\n        newItem = QTableWidgetItem('變頻器')\r\n        newItem.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        newItem.setFlags(newItem.flags() & ~Qt.ItemIsEditable)\r\n        self.ui.window_main_table.setItem(14, 0, newItem)\r\n        for x in range(12, 16):\r\n            newItem = QTableWidgetItem(par.series4[x - 12])\r\n            newItem.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n            newItem.setFlags(newItem.flags() & ~Qt.ItemIsEditable)\r\n            self.ui.window_main_table.setItem(x, 1, newItem)\r\n        self.ui.window_main_table.setSpan(16, 0, 2, 2)\r\n        newItem = QTableWidgetItem('上模吊重')\r\n        newItem.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        newItem.setFlags(newItem.flags() & ~Qt.ItemIsEditable)\r\n        self.ui.window_main_table.setItem(16, 0, newItem)\r\n        self.ui.window_main_table.setSpan(18, 0, 2, 1)\r\n        newItem = QTableWidgetItem('防震腳')\r\n        newItem.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        newItem.setFlags(newItem.flags() & ~Qt.ItemIsEditable)\r\n        self.ui.window_main_table.setItem(18, 0, newItem)\r\n        newItem = QTableWidgetItem('廠牌')\r\n        newItem.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        newItem.setFlags(newItem.flags() & ~Qt.ItemIsEditable)\r\n        self.ui.window_main_table.setItem(18, 1, newItem)\r\n        newItem = QTableWidgetItem('規格')\r\n        newItem.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        newItem.setFlags(newItem.flags() & ~Qt.ItemIsEditable)\r\n        self.ui.window_main_table.setItem(19, 1, newItem)\r\n        for x in range(20, 22):\r\n            self.ui.window_main_table.setSpan(x, 0, 1, 2)\r\n            newItem = QTableWidgetItem(par.series5[x - 20])\r\n            newItem.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n            newItem.setFlags(newItem.flags() & ~Qt.ItemIsEditable)\r\n            self.ui.window_main_table.setItem(x, 0, newItem)\r\n        for x in range(22, 24):\r\n            self.ui.window_main_table.setSpan(x, 0, 1, 3)\r\n            newItem = QTableWidgetItem(par.series6[x - 22])\r\n            newItem.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n            newItem.setFlags(newItem.flags() & ~Qt.ItemIsEditable)\r\n            self.ui.window_main_table.setItem(x, 0, newItem)\r\n        self.ui.window_main_table.setSpan(16, 2, 2, 1)\r\n        for x in range(8, 17):\r\n            newItem = QTableWidgetItem(par.series7[x - 8])\r\n            newItem.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n            newItem.setFlags(newItem.flags() & ~Qt.ItemIsEditable)\r\n            self.ui.window_main_table.setItem(x, 2, newItem)\r\n        for x in range(18, 22):\r\n            newItem = QTableWidgetItem(par.series8[x - 18])\r\n            newItem.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n            newItem.setFlags(newItem.flags() & ~Qt.ItemIsEditable)\r\n            self.ui.window_main_table.setItem(x, 2, newItem)\r\n        newItem = QTableWidgetItem('標準')\r\n        newItem.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        newItem.setFlags(newItem.flags() & ~Qt.ItemIsEditable)\r\n        self.ui.window_main_table.setItem(8, 3, newItem)\r\n        newItem = QTableWidgetItem('客戶自訂')\r\n        newItem.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        newItem.setFlags(newItem.flags() & ~Qt.ItemIsEditable)\r\n        self.ui.window_main_table.setItem(8, 4, newItem)\r\n        punch_stroke = QTableWidgetItem('80')\r\n        punch_stroke.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        punch_stroke.setFlags(punch_stroke.flags() & ~Qt.ItemIsEditable)\r\n        self.ui.window_main_table.setItem(9, 3, punch_stroke)\r\n        punch_cycle = QTableWidgetItem('70~110')\r\n        punch_cycle.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        punch_cycle.setFlags(punch_cycle.flags() & ~Qt.ItemIsEditable)\r\n        self.ui.window_main_table.setItem(10, 3, punch_cycle)\r\n        punch_DH = QTableWidgetItem('230')\r\n        punch_DH.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        punch_DH.setFlags(punch_DH.flags() & ~Qt.ItemIsEditable)\r\n        self.ui.window_main_table.setItem(11, 3, punch_DH)\r\n        motor_company = QTableWidgetItem('東元')\r\n        motor_company.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        motor_company.setFlags(motor_company.flags() & ~Qt.ItemIsEditable)\r\n        self.ui.window_main_table.setItem(12, 3, motor_company)\r\n        motor_power = QTableWidgetItem('3.7×4')\r\n        motor_power.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        motor_power.setFlags(motor_power.flags() & ~Qt.ItemIsEditable)\r\n        self.ui.window_main_table.setItem(13, 3, motor_power)\r\n        frequency_company = QTableWidgetItem('東元')\r\n        frequency_company.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        frequency_company.setFlags(frequency_company.flags() & ~Qt.ItemIsEditable)\r\n        self.ui.window_main_table.setItem(14, 3, frequency_company)\r\n        frequency_power = QTableWidgetItem('3.7×4')\r\n        frequency_power.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        frequency_power.setFlags(frequency_power.flags() & ~Qt.ItemIsEditable)\r\n        self.ui.window_main_table.setItem(15, 3, frequency_power)\r\n        upper_kg = QTableWidgetItem('54')\r\n        upper_kg.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        upper_kg.setFlags(upper_kg.flags() & ~Qt.ItemIsEditable)\r\n        self.ui.window_main_table.setItem(16, 3, upper_kg)\r\n        for x in range(17, 22):\r\n            self.ui.window_main_table.setSpan(x, 3, 1, 2)\r\n        upper_extra = QTableWidgetItem('PC加大型平衡汽缸')\r\n        upper_extra.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        upper_extra.setFlags(upper_extra.flags() & ~Qt.ItemIsEditable)\r\n        self.ui.window_main_table.setItem(17, 3, upper_extra)\r\n        shockproof_company = QComboBox()\r\n        shockproof_company.setEditable(False)\r\n        shockproof_company.addItem('無')\r\n        shockproof_company.addItem('穎益')\r\n        shockproof_company.addItem('UNISORB')\r\n        shockproof_company.addItem('商定')\r\n        self.ui.window_main_table.setCellWidget(18, 3, shockproof_company)\r\n        shockproof_size = QTableWidgetItem('_')\r\n        shockproof_size.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        shockproof_size.setFlags(shockproof_size.flags() & ~Qt.ItemIsEditable)\r\n        self.ui.window_main_table.setItem(19, 3, shockproof_size)\r\n        work_height = QTableWidgetItem('800')\r\n        work_height.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        work_height.setFlags(work_height.flags() & ~Qt.ItemIsEditable)\r\n        self.ui.window_main_table.setItem(20, 3, work_height)\r\n        power = QComboBox()\r\n        power.setEditable(False)\r\n        power.addItem('200V×50Hz')\r\n        power.addItem('200V×60Hz')\r\n        power.addItem('220V×50Hz')\r\n        power.addItem('220V×60Hz')\r\n        power.addItem('380V×50Hz')\r\n        power.addItem('380V×60Hz')\r\n        power.addItem('415V×50Hz')\r\n        power.addItem('440V×60Hz')\r\n        power.addItem('460V×60Hz')\r\n        power.addItem('480V×60Hz')\r\n        power.addItem('575V×60Hz')\r\n        self.ui.window_main_table.setCellWidget(21, 3, power)\r\n        select_setup = QPushButton('設定')\r\n        self.ui.window_main_table.setCellWidget(22, 3, select_setup)\r\n        spare_parts_setup = QPushButton('設定')\r\n        self.ui.window_main_table.setCellWidget(23, 3, spare_parts_setup)\r\n        select_finish = QtWidgets.QLabel('未設定')\r\n        select_finish.setAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        self.ui.window_main_table.setCellWidget(22, 4, select_finish)\r\n        spare_parts_finish = QtWidgets.QLabel('未設定')\r\n        spare_parts_finish.setAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        self.ui.window_main_table.setCellWidget(23, 4, spare_parts_finish)\r\n        punch_stroke_customize = QTableWidgetItem('')\r\n        punch_stroke_customize.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        # punch_stroke_customize.setBackground(QBrush(QColor(255, 191, 0)))  # 背景色\r\n        self.ui.window_main_table.setItem(9, 4, punch_stroke_customize)\r\n        punch_cycle_customize = QTableWidgetItem('')\r\n        punch_cycle_customize.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        # punch_cycle_customize.setBackground(QBrush(QColor(255, 191, 0)))\r\n        self.ui.window_main_table.setItem(10, 4, punch_cycle_customize)\r\n        punch_DH_customize = QTableWidgetItem('')\r\n        punch_DH_customize.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        # punch_DH_customize.setBackground(QBrush(QColor(255, 191, 0)))\r\n        self.ui.window_main_table.setItem(11, 4, punch_DH_customize)\r\n        motor_company_customize = QTableWidgetItem('')\r\n        motor_company_customize.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        # motor_company_customize.setBackground(QBrush(QColor(255, 191, 0)))\r\n        self.ui.window_main_table.setItem(12, 4, motor_company_customize)\r\n        motor_power_customize = QTableWidgetItem('')\r\n        motor_power_customize.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        # motor_power_customize.setBackground(QBrush(QColor(255, 191, 0)))\r\n        self.ui.window_main_table.setItem(13, 4, motor_power_customize)\r\n        frequency_company_customize = QTableWidgetItem('')\r\n        frequency_company_customize.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        # frequency_company_customize.setBackground(QBrush(QColor(255, 191, 0)))\r\n        self.ui.window_main_table.setItem(14, 4, frequency_company_customize)\r\n        frequency_power_customize = QTableWidgetItem('')\r\n        frequency_power_customize.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        # frequency_power_customize.setBackground(QBrush(QColor(255, 191, 0)))\r\n        self.ui.window_main_table.setItem(15, 4, frequency_power_customize)\r\n        upper_kg_customize = QTableWidgetItem('')\r\n        upper_kg_customize.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\r\n        # upper_kg_customize.setBackground(QBrush(QColor(255, 191, 0)))\r\n        self.ui.window_main_table.setItem(16, 4, upper_kg_customize)\r\n\r\n        self.ui.window_main_table.setSpan(0, 5, 24, 9)\r\n\r\n        # 在初始化函数中创建 QWidget 和 QLabel\r\n        machine_picture_widget = QWidget()\r\n        machine_picture = QLabel(machine_picture_widget)\r\n\r\n        # 加载图像\r\n        pixmap = QPixmap('machine_picture.png')\r\n        machine_picture.setPixmap(pixmap)\r\n\r\n        scaled_pixmap = pixmap.scaled(pixmap.width()-100,pixmap.height()-110)\r\n        machine_picture.setPixmap(scaled_pixmap)\r\n\r\n        # # 设置 QLabel 居中\r\n        machine_picture.setAlignment(Qt.AlignCenter)\r\n\r\n        # 添加 QLabel 到 QWidget\r\n        machine_picture_layout = QVBoxLayout()\r\n        machine_picture_layout.addWidget(machine_picture)\r\n        machine_picture_widget.setLayout(machine_picture_layout)\r\n\r\n        # 将 QWidget 添加到表格单元格\r\n        self.ui.window_main_table.setCellWidget(0, 5, machine_picture_widget)\r\n        # 将 QLabel 添加到表格单元格\r\n        self.ui.window_main_table.setCellWidget(0, 5, machine_picture)\r\n        # 创建一个 QWidget 作为容器\r\n        button_container = QWidget()\r\n        button_layout = QHBoxLayout()  # 创建一个水平布局对象\r\n        button_container.setLayout(button_layout)  # 将布局附加到button_container上\r\n\r\n        plate_setup.clicked.connect(self.switch_to_plate)\r\n        # punch_setup.clicked.connect()\r\n        # select_setup.clicked.connect()\r\n        # spare_parts_setup.clicked.connect()\r\n\r\n    def switch_to_plate(self, stamping_press_type):\r\n        self.choose_stamping_press_type()\r\n        self.hide()\r\n        self.nw = plate_first_windows(stamping_press_type)\r\n        self.nw.show()\r\n\r\n    def start(self):\r\n        type = self.ui.window_main_table.cellWidget(4, 3).currentText()\r\n        travel_type = str(self.ui.window_main_table.cellWidget(4, 5).currentText())\r\n        specifications_travel_value = str(self.ui.lineEdit_5.text())\r\n        specifications_close_working_height_value = str(self.ui.lineEdit_2.text())\r\n        close_working_height = str(self.ui.label_9.text())\r\n        # delta = str(self.ui.lineEdit_4.text())\r\n        processing = str(self.ui.comboBox.currentText())\r\n        print(type, travel_type, travel, specifications_travel_value, specifications_close_working_height_value,\r\n              close_working_height)\r\n        self.create_dir(type)\r\n        if specifications_travel_value == \"\":\r\n            self.specifications_travel_value = 0\r\n        else:\r\n            self.specifications_travel_value = int(specifications_travel_value)\r\n        if specifications_close_working_height_value == \"\":\r\n            self.specifications_close_working_height_value = 0\r\n        else:\r\n            self.specifications_close_working_height_value = int(specifications_close_working_height_value)\r\n        self.stamping_press_type = self.choose_stamping_press_type()\r\n        self.p, self.travel_type = self.choos(processing, travel_type)\r\n\r\n        self.alpha, self.beta, self.zeta, self.epsilon = self.frame_calculate(self.stamping_press_type, self.specifications_travel_value,\r\n                                                                              self.specifications_close_working_height_value,\r\n                                                                              self.travel_type)\r\n        if test_stop == False:\r\n            self.create_txt(self.path, type, travel_type, self.specifications_travel_value,\r\n                            self.specifications_close_working_height_value, self.alpha, self.beta, self.zeta,\r\n                            self.epsilon)\r\n            self.change_dir(self.stamping_press_type, self.p, self.alpha, self.beta, self.zeta, self.epsilon, self.machining,\r\n                            self.welding, self.travel_type)\r\n\r\n    def show_pad_secend_windows(self):\r\n        window_table = self.ui.window_main_table\r\n        type = str(window_table.item(4, 5).currentText())\r\n        travel_type = str(window_table.item().currentText())\r\n        # processing = str(self.ui.comboBox.currentText())\r\n        self.stamping_press_type, self.travel_type = self.choos(type, travel_type)\r\n        self.hide()\r\n        self.nw = plate_first_windows(self.i)\r\n        self.nw.show()\r\n\r\n    def choose_stamping_press_type(self):\r\n        type = str(self.ui.window_main_table.item(4, 5).currentText())\r\n        if type == \"SN1-25\":\r\n            stamping_press_type = 0\r\n        elif type == \"SN1-35\":\r\n            stamping_press_type = 1\r\n        elif type == \"SN1-45\":\r\n            stamping_press_type = 2\r\n        elif type == \"SN1-60\":\r\n            stamping_press_type = 3\r\n        elif type == \"SN1-80\":\r\n            stamping_press_type = 4\r\n        elif type == \"SN1-110\":\r\n            stamping_press_type = 5\r\n        elif type == \"SN1-160\":\r\n            stamping_press_type = 6\r\n        elif type == \"SN1-200\":\r\n            stamping_press_type = 7\r\n        elif type == \"SN1-250\":\r\n            stamping_press_type = 8\r\n        elif type == \"SN1-300\":\r\n            stamping_press_type = 9\r\n\r\n        return stamping_press_type\r\n\r\n    def choos(self,prossing, travel_type):\r\n        # 確認型號\"輸入型號\"\r\n        # 確認加工方式\r\n        if prossing == '是':\r\n            p = 0\r\n        elif prossing == '否':\r\n            p = 1\r\n        # 確認行程類型\r\n        if travel_type == 'S':\r\n            travel_type = 1\r\n        elif travel_type == 'H':\r\n            travel_type = 2\r\n        elif travel_type == 'P':\r\n            travel_type = 3\r\n        return p, travel_type\r\n\r\n    def frame_calculate(self, stamping_press_type, specifications_travel_value, specifications_close_working_height_value, travel_type):\r\n        Form = QtWidgets.QWidget()\r\n        # Form.setWindowTitle('警告')\r\n        Form.resize(400, 300)\r\n        mbox = QtWidgets.QMessageBox(Form)\r\n\r\n        # 讀取標準資料\r\n        excel = epc.ExcelOp('尺寸整理表', '標準資料')\r\n        type_name, travel_value, close_working_height_value, specifications_travel_min_value, specifications_travel_max_value, specifications_close_working_height_min_value, specifications_close_working_height_max_value = excel.get_standard_parts(\r\n            stamping_press_type * 3)\r\n\r\n        # 噸數&行程類型\r\n        all_type = stamping_press_type * 3 + travel_type - 1\r\n        # 行程\r\n        alpha = int(specifications_travel_value) - travel_value[all_type]\r\n        # 牙球伸長量\r\n        epsilon_1 = (-alpha / 2) + (\r\n                close_working_height_value[all_type] - int(specifications_close_working_height_value))\r\n        elsilon_2 = (alpha / 2)\r\n        epsilon_3 = 0\r\n        epsilon = max(epsilon_1, elsilon_2, epsilon_3)\r\n        # 喉部拉高量\r\n        zeta = (alpha / 2) + epsilon + specifications_close_working_height_value - close_working_height_value[all_type]\r\n        print(zeta)\r\n        # 閉合工作高度驗證公式\r\n        verification_specifications_close_working_height_value = close_working_height_value[all_type] - (\r\n                alpha / 2) - epsilon + zeta\r\n        print(verification_specifications_close_working_height_value)\r\n\r\n        error = False\r\n\r\n        # 驗證行程\r\n        if specifications_travel_value >= specifications_travel_min_value[all_type] and specifications_travel_value <= \\\r\n                specifications_travel_max_value[all_type]:\r\n            print('行程尺寸在允許範圍: %s <= %s <= %s' % (\r\n                specifications_travel_min_value[all_type], specifications_travel_value,\r\n                specifications_travel_max_value[all_type]))\r\n        else:\r\n            print('行程尺寸不再允許範圍: %s <= %s <= %s' % (\r\n                specifications_travel_min_value[all_type], specifications_travel_value,\r\n                specifications_travel_max_value[all_type]))\r\n            mbox.warning(Form, '警告', '行程超出範圍')\r\n            error = True\r\n            self.ui.lineEdit_5.clear()\r\n\r\n        # 驗證閉合工作高度\r\n        if specifications_close_working_height_value >= specifications_close_working_height_min_value[\r\n            all_type] and specifications_close_working_height_value <= \\\r\n                specifications_close_working_height_max_value[all_type]:\r\n            print('閉合工作高度在允許範圍: %s <= %s <= %s' % (\r\n                specifications_close_working_height_min_value[all_type], specifications_close_working_height_value,\r\n                specifications_close_working_height_max_value[all_type]))\r\n        else:\r\n            print('閉合工作高度不在允許範圍: %s <= %s <= %s' % (\r\n                specifications_close_working_height_min_value[all_type], specifications_close_working_height_value,\r\n                specifications_close_working_height_max_value[all_type]))\r\n            mbox.warning(Form, '警告', '閉合工作高度超出範圍')\r\n            error = True\r\n            self.ui.lineEdit_2.clear()\r\n\r\n        # 驗證閉合工作高度是否符合客戶需求\r\n        if verification_specifications_close_working_height_value == specifications_close_working_height_value:\r\n            print('閉合工作高度符合要求: %s = %s' % (\r\n                verification_specifications_close_working_height_value, specifications_close_working_height_value))\r\n        else:\r\n            print(\r\n                'verification_specifications_close_working_height_value: %s；specifications_close_working_height_value: %s' % (\r\n                    verification_specifications_close_working_height_value, specifications_close_working_height_value))\r\n            mbox.warning(Form, '警告', '閉合工作高度不符合客戶需求')\r\n            error = True\r\n            self.ui.lineEdit_2.clear()\r\n            self.ui.lineEdit_5.clear()\r\n\r\n        # 驗證牙球伸長量\r\n        if epsilon >= 0:\r\n            print('牙球伸長量: %s >= 0' % epsilon)\r\n        else:\r\n            print('牙球伸長量: %s <= 0' % epsilon)\r\n            mbox.warning(Form, '警告', '牙球伸長量小於0')\r\n            error = True\r\n            self.ui.lineEdit_2.clear()\r\n            self.ui.lineEdit_5.clear()\r\n\r\n        # 驗證機架拉高量\r\n        if zeta >= 0:\r\n            print('機架拉高量: %s >= 0' % zeta)\r\n        else:\r\n            print('機架拉高量: %s <= 0' % zeta)\r\n            mbox.warning(Form, '警告', '機架拉高量小於0')\r\n            error = True\r\n            self.ui.lineEdit_2.clear()\r\n            self.ui.lineEdit_5.clear()\r\n\r\n        # 驗證喉部拉高量\r\n        if epsilon >= (alpha / 2):\r\n            print('喉部拉高量: %s >= %s' % (epsilon, (alpha / 2)))\r\n        else:\r\n            mbox.warning(Form, '警告', '衝頭縮進導軌內部')\r\n            error = True\r\n            self.ui.lineEdit_2.clear()\r\n            self.ui.lineEdit_5.clear()\r\n\r\n        if error == True:\r\n            global test_stop\r\n            test_stop = True\r\n\r\n        alpha = alpha  # 行程差\r\n        beta = specifications_close_working_height_value - close_working_height_value[all_type]  # 閉合工作高度差\r\n        zeta = zeta  # 喉部拉高量\r\n        epsilon = epsilon  # 牙球伸長量\r\n        return alpha, beta, zeta, epsilon\r\n\r\n    # 建立txt檔\r\n    def create_txt(self, path, travel_type, specifications_travel_value, specifications_close_working_height_value,\r\n                   type, alpha, beta, zeta, epsilon):\r\n        file_txt = path\r\n        txt_name = \"生成參數.txt\"\r\n        with open(file_txt + \"\\\\\" + txt_name, \"w\") as f:\r\n            f.write(\"噸數=%s\\n\" % type)\r\n            f.write(\"型式:%s\\n\" % travel_type)\r\n            f.write(\"本次行程=%s\\n\" % specifications_travel_value)\r\n            f.write(\"本次閉合工作高度=%s\\n\" % specifications_close_working_height_value)\r\n            f.write(\"行程=%s\\n\" % alpha)\r\n            f.write(\"閉合工作高度=%s\\n\" % beta)\r\n            f.write(\"喉部拉高量=%s\\n\" % zeta)\r\n            f.write(\"牙球伸長量=%s\\n\" % epsilon)\r\n\r\n    def create_dir(self, type):  # 創建資料夾\r\n        time_now = datetime.datetime.now()\r\n        dir_name = '{}_{}_{}_{}_{}'.format(type, time_now.day, time_now.hour, time_now.minute, time_now.second)\r\n        desktop = os.path.join(os.path.join(os.environ['USERPROFILE']), 'Desktop')\r\n        test = os.path.join('Z:')\r\n        path = desktop + '\\\\' + dir_name\r\n        os.mkdir(path)\r\n        machining = path + \"\\\\\" + \"machining\"\r\n        os.mkdir(machining)\r\n        welding = path + \"\\\\\" + \"welding\"\r\n        os.mkdir(welding)\r\n        self.path = path\r\n        self.machining = machining\r\n        self.welding = welding\r\n\r\n    def finish(self, machining_file_change_error, welding_file_change_error):\r\n        Form = QtWidgets.QWidget()\r\n        Form.setWindowTitle('oxxo.studio')\r\n        Form.resize(500, 200)\r\n        mbox = QtWidgets.QMessageBox(Form)\r\n        mbox.information(Form, '完成', '生成完成\\nmachining_file_change_error:%s\\nwelding_file_change_error:%s\\n' % (\r\n            machining_file_change_error, welding_file_change_error))\r\n        self.ui.lineEdit_5.clear()\r\n        self.ui.lineEdit_2.clear()\r\n\r\n    def label_7_change_data(self):\r\n        label_7_data = {250: {\"S\": \"標準:80\", \"H\": (\"標準:50\"), \"P\": (\"標準:35\")},\r\n                        350: {\"S\": (\"標準:90\"), \"H\": (\"標準:60\"), \"P\": (\"標準:40\")},\r\n                        450: {\"S\": (\"標準:110\"), \"H\": (\"標準:70\"), \"P\": (\"標準:45\")},\r\n                        600: {\"S\": (\"標準:130\"), \"H\": (\"標準:80\"), \"P\": (\"標準:50\")},\r\n                        800: {\"S\": (\"標準:150\"), \"H\": (\"標準:100\"), \"P\": (\"標準:60\")},\r\n                        1100: {\"S\": (\"標準:180\"), \"H\": (\"標準:110\"), \"P\": (\"標準:70\")},\r\n                        1600: {\"S\": (\"標準:200\"), \"H\": (\"標準:130\"), \"P\": (\"標準:80\")},\r\n                        2000: {\"S\": (\"標準:220\"), \"H\": (\"標準:150\"), \"P\": (\"標準:90\")},\r\n                        2500: {\"S\": (\"標準:250\"), \"H\": (\"標準:180\"), \"P\": (\"標準:100\")},\r\n                        }\r\n        return label_7_data\r\n\r\n    def change_label_7(self):\r\n        label_7_data = self.label_7_change_data()\r\n        type = str(self.ui.comboBox_4.currentText())\r\n        travel_type = str(self.ui.comboBox_2.currentText())\r\n        ton = int(type.split('-')[-1] + '0')\r\n        travel_standard = label_7_data[ton][travel_type]\r\n        travel_standard = str(travel_standard)\r\n\r\n        self.ui.label_7.clear()\r\n        self.ui.label_7.setText(travel_standard)\r\n\r\n    def label_9_data(self):\r\n        label_9_data = {250: {\"S\": (\"標準:230\"), \"H\": (\"標準:200\"), \"P\": (\"標準:200\")},\r\n                        350: {\"S\": (\"標準:250\"), \"H\": (\"標準:220\"), \"P\": (\"標準:220\")},\r\n                        450: {\"S\": (\"標準:270\"), \"H\": (\"標準:240\"), \"P\": (\"標準:240\")},\r\n                        600: {\"S\": (\"標準:300\"), \"H\": (\"標準:270\"), \"P\": (\"標準:270\")},\r\n                        800: {\"S\": (\"標準:330\"), \"H\": (\"標準:300\"), \"P\": (\"標準:300\")},\r\n                        1100: {\"S\": (\"標準:350\"), \"H\": (\"標準:320\"), \"P\": (\"標準:320\")},\r\n                        1600: {\"S\": (\"標準:400\"), \"H\": (\"標準:360\"), \"P\": (\"標準:360\")},\r\n                        2000: {\"S\": (\"標準:450\"), \"H\": (\"標準:400\"), \"P\": (\"標準:400\")},\r\n                        2500: {\"S\": (\"標準:450\"), \"H\": (\"標準:400\"), \"P\": (\"標準:400\")}, }\r\n\r\n        return label_9_data\r\n\r\n    def change_label_9(self):\r\n        label_9_data = self.label_9_data()\r\n        type = str(self.ui.comboBox_4.currentText())\r\n        travel_type = str(self.ui.comboBox_2.currentText())\r\n        ton = int(type.split('-')[-1] + '0')\r\n        close_h = label_9_data[ton][travel_type]\r\n        close_h = str(close_h)\r\n\r\n        self.ui.label_9.clear()\r\n        self.ui.label_9.setText(close_h)\r\n\r\n    def change_dir(self, stamping_press_type, p, alpha, beta, zeta, epsilon, machining, welding, travel_type):\r\n        start_time = time.time()\r\n        all_part_name = {}\r\n        all_part_value = {}\r\n        all_parameter_save = {}\r\n        all_parameter_value = {}\r\n        # 開啟CATIA\r\n        env = mprog.set_CATIA_workbench_env()\r\n        machining_file_change_error = []\r\n        machining_file_change_pass = []\r\n        welding_file_change_error = []\r\n        welding_file_change_pass = []\r\n        # 開啟零件檔更改變數後儲存並關閉\r\n        for name in epc.ExcelOp('尺寸整理表', '沖床機架零件清單').get_col_cell(1):\r\n            print(name)\r\n            file_list_name, file_list_value = epc.ExcelOp('尺寸整理表', '沖床機架零件清單').get_sheet_par('沖床機架零件清單', stamping_press_type)\r\n            file_list_name_index = file_list_name.index(name)\r\n            if file_list_value[file_list_name_index] == 0:\r\n                pass\r\n            else:\r\n                try:\r\n                    # 保存原始的sys.stdout\r\n                    original_stdout = sys.stdout\r\n                    # 创建一个新的StringIO对象来捕获输出\r\n                    captured_output = StringIO()\r\n                    sys.stdout = captured_output\r\n                    if name == 'PANEL' or name == 'CON_ROD' or name == 'CON_ROD_BASE' or name == 'CON_ROD_CAP' or name == 'INVERTERBRACKET' \\\r\n                            or name == 'POINTER' or name == 'COVER' or name == 'PLUG' or name == 'feeding_shaft_cover' or name == 'OIL_LEVEL_GAUGE' \\\r\n                            or name == 'slide_gib' or name == 'ELECTRIC_BOX_PLATE' or name == 'MOUNT_FILTER'or name == 'CONTROL_PANEL' or name == 'PANEL_BOX'\\\r\n                            or name == 'PANEL_BOX_BRACKET' or name == 'ELECTRIC_BOX' or name == 'GUARD_FLYWHEEL' or name == 'NAME_PLATE'\\\r\n                            or name == 'TRADEMARK_NAMEPLATE'or name == 'OPERATION_BOX':\r\n                        # 讀取其餘STP檔\r\n                        S_i.STP(name, stamping_press_type, machining)\r\n                        continue\r\n                    else:\r\n                        # 讀取機架零件\r\n                        mprog.import_part(fp.system_root + fp.DEMO_part, name)\r\n                    if name == 'FRAME52' and p == 0:\r\n                        try:\r\n                            mprog.param_change(name, \"alpha\", alpha)\r\n                            mprog.param_change(name, \"beta\", beta)\r\n                            mprog.param_change(name, 'zeta', zeta)\r\n                        except:\r\n                            pass\r\n                        # 加工圖零件\r\n                        parameter_name, parameter_value = mptc.change_machining_parameter(name, stamping_press_type, 0, travel_type)\r\n                        all_part_name[name] = parameter_name\r\n                        all_part_value[name] = parameter_value\r\n                        for x in range(len(parameter_name)):\r\n                            all_parameter_save.setdefault(parameter_name[x], parameter_value[x])\r\n                            all_parameter_list = all_parameter_save.copy()\r\n                            all_parameter_value[name] = all_parameter_list\r\n                            apv = all_parameter_value\r\n                        all_parameter_save.clear()\r\n\r\n                        # 恢复原始的sys.stdout\r\n                        sys.stdout = original_stdout\r\n                        # 从捕获的输出中获取文本\r\n                        output_text = captured_output.getvalue()\r\n\r\n                        # 判断文本内容\r\n                        if \"error\" in output_text:\r\n                            machining_file_change_error.append(name)\r\n                        else:\r\n                            machining_file_change_pass.append(name)\r\n                            # mprog.close_file(name)\r\n                    else:\r\n                        try:\r\n                            mprog.param_change(name, \"alpha\", alpha)\r\n                            mprog.param_change(name, \"beta\", beta)\r\n                            mprog.param_change(name, 'zeta', zeta)\r\n                        except:\r\n                            pass\r\n\r\n                        # 加工圖零件\r\n                        parameter_name, parameter_value = mptc.change_machining_parameter(name, stamping_press_type, 1, travel_type)\r\n                        all_part_name[name] = parameter_name\r\n                        all_part_value[name] = parameter_value\r\n                        for x in range(len(parameter_name)):\r\n                            all_parameter_save.setdefault(parameter_name[x], parameter_value[x])\r\n                            all_parameter_list = all_parameter_save.copy()\r\n                            all_parameter_value[name] = all_parameter_list\r\n                            apv = all_parameter_value\r\n                        all_parameter_save.clear()\r\n\r\n                        # 恢复原始的sys.stdout\r\n                        sys.stdout = original_stdout\r\n                        output_text = captured_output.getvalue()\r\n                        # 判断文本内容\r\n                        if \"error\" in output_text:\r\n                            machining_file_change_error.append(name)\r\n                        else:\r\n                            machining_file_change_pass.append(name)\r\n                    # 儲存加工圖零件檔\r\n                    mprog.save_file_stp(machining, name)\r\n                    mprog.save_stpfile_part(machining, name)\r\n                    # 進行裁料圖特徵變更\r\n                    wptc.change_welding_feature(name, stamping_press_type)\r\n                    print(output_text)\r\n                    if \"error\" in output_text:\r\n                        welding_file_change_error.append(name)\r\n                    else:\r\n                        welding_file_change_pass.append(name)\r\n                    # 儲存裁料圖零件檔\r\n                    mprog.save_file_stp(welding, name)\r\n                    mprog.save_stpfile_part(welding, name)\r\n                    mprog.close_file(name)\r\n                except:\r\n                    pass\r\n        print(stamping_press_type)\r\n        print('all_part_name', all_part_name)\r\n        print('all_part_value', all_part_value)\r\n        print('machining_file_change_error', machining_file_change_error)\r\n        print('machining_file_change_pass', machining_file_change_pass)\r\n        print('welding_file_change_error', welding_file_change_error)\r\n        print('welding_file_change_pass', welding_file_change_pass)\r\n        print('總用時%s' % (time.time() - start_time))  # 建立3D組立\r\n        Ad.assembly(stamping_press_type, apv, self.path, alpha, beta, zeta)\r\n\r\n        return machining_file_change_error, welding_file_change_error\r\n\r\n\r\n# 平板第一頁\r\nclass plate_first_windows(QtWidgets.QWidget):\r\n    def __init__(self, stamping_press_type):\r\n        super().__init__()\r\n        self.ui = pad_main_simple_form()\r\n        self.ui.setupUi(self)\r\n        self.setWindowTitle('平板')\r\n        self.ui.pad_select.currentIndexChanged.connect(lambda: self.select_plate_type_name(stamping_press_type))\r\n        self.ui.plate_start.clicked.connect(lambda: self.start(stamping_press_type))\r\n\r\n\r\n    # 選擇平板類型\r\n    def select_plate_type_name(self, stamping_press_type):\r\n        get_pad_select_name = self.ui.pad_select.currentText()\r\n        if get_pad_select_name == \"特殊平板\":\r\n            self.hide()\r\n            self.nw = pad_secend_windows(stamping_press_type)\r\n            self.nw.show()\r\n\r\n    def start(self, stamping_press_type):\r\n        par.plate_normal_name = [self.ui.pad_select.currentText()]\r\n        # 判斷模墊型\r\n        if par.plate_normal_name[0] == \"標準模墊型\":\r\n            if stamping_press_type == 0:\r\n                par.total_t_slot_h_type = ['貫穿', '分段', '貫穿']\r\n                par.total_position_y = [100, 0, -100]\r\n                par.total_LL = ['', 185, '']\r\n                par.total_LR = ['', 185, '']\r\n                par.t_all_dimension = [22, 38, 23, 16]\r\n            elif stamping_press_type == 1:\r\n                par.total_t_slot_h_type = ['貫穿', '分段', '貫穿']\r\n                par.total_position_y = [125, 0, -125]\r\n                par.total_LL = ['', 210, '']\r\n                par.total_LR = ['', 210, '']\r\n                par.t_all_dimension = [22, 38, 23, 16]\r\n            elif stamping_press_type == 2:\r\n                par.total_t_slot_h_type = ['貫穿', '分段', '貫穿']\r\n                par.total_position_y = [140, 0, -140]\r\n                par.total_LL = ['', 220, '']\r\n                par.total_LR = ['', 220, '']\r\n                par.t_all_dimension = [22, 38, 23, 16]\r\n            elif stamping_press_type == 3:\r\n                par.total_t_slot_h_type = ['貫穿', '分段', '貫穿']\r\n                par.total_position_y = [150, 0, -150]\r\n                par.total_LL = ['', 240, '']\r\n                par.total_LR = ['', 240, '']\r\n                par.t_all_dimension = [22, 38, 23, 16]\r\n            elif stamping_press_type == 4:\r\n                par.total_t_slot_h_type = ['貫穿', '分段', '貫穿']\r\n                par.total_position_y = [180, 0, -180]\r\n                par.total_LL = ['', 270, '']\r\n                par.total_LR = ['', 270, '']\r\n                par.t_all_dimension = [28, 48, 30, 20]\r\n            elif stamping_press_type == 5:\r\n                par.total_t_slot_h_type = ['貫穿', '分段', '貫穿']\r\n                par.total_position_y = [210, 0, -210]\r\n                par.total_LL = ['', 280, '']\r\n                par.total_LR = ['', 280, '']\r\n                par.t_all_dimension = [28, 48, 30, 20]\r\n            elif stamping_press_type == 6:\r\n                par.total_t_slot_h_type = ['貫穿', '分段', '分段', '分段', '貫穿']\r\n                par.total_position_y = [290, 165, 0, -165, -290]\r\n                par.total_LL = ['', 290, 290, 290, '']\r\n                par.total_LR = ['', 290, 290, 290, '']\r\n                par.t_all_dimension = [28, 48, 30, 20]\r\n            elif stamping_press_type == 7:\r\n                par.total_t_slot_h_type = ['貫穿', '分段', '分段', '分段', '貫穿']\r\n                par.total_position_y = [320, 180, 0, -180, -320]\r\n                par.total_LL = ['', 320, 320, 320, '']\r\n                par.total_LR = ['', 320, 320, 320, '']\r\n                par.t_all_dimension = [28, 48, 30, 20]\r\n            elif stamping_press_type == 8:\r\n                par.total_t_slot_h_type = ['貫穿', '分段', '分段', '分段', '貫穿']\r\n                par.total_position_y = [350, 200, 0, -200, -350]\r\n                par.total_LL = ['', 320, 320, 320, '']\r\n                par.total_LR = ['', 320, 320, 320, '']\r\n                par.t_all_dimension = [28, 48, 30, 20]\r\n        else:\r\n            # 判斷下料孔\r\n            if '圓孔' in par.plate_normal_name[0]:\r\n                if stamping_press_type == 0:\r\n                    par.cutout_part_dimension = [100, '', '', '', '']\r\n                elif stamping_press_type == 1:\r\n                    par.cutout_part_dimension = [110, '', '', '', '']\r\n                elif stamping_press_type == 2:\r\n                    par.cutout_part_dimension = [130, '', '', '', '']\r\n                elif stamping_press_type == 3:\r\n                    par.cutout_part_dimension = [150, '', '', '', '']\r\n                elif stamping_press_type == 4:\r\n                    par.cutout_part_dimension = [180, '', '', '', '']\r\n                elif stamping_press_type == 5:\r\n                    par.cutout_part_dimension = [200, '', '', '', '']\r\n                elif stamping_press_type == 6:\r\n                    par.cutout_part_dimension = [220, '', '', '', '']\r\n                elif stamping_press_type == 7:\r\n                    par.cutout_part_dimension = [250, '', '', '', '']\r\n                elif stamping_press_type == 8:\r\n                    par.cutout_part_dimension = [270, '', '', '', '']\r\n            elif '方孔' in par.plate_normal_name[0]:\r\n                if stamping_press_type == 0:\r\n                    par.cutout_part_dimension = [200, 100, '', '', '']\r\n                    par.cutout_spuare_R = [20]\r\n                elif stamping_press_type == 1:\r\n                    par.cutout_part_dimension = [220, 110, '', '', '']\r\n                    par.cutout_spuare_R = [25]\r\n                elif stamping_press_type == 2:\r\n                    par.cutout_part_dimension = [260, 130, '', '', '']\r\n                    par.cutout_spuare_R = [25]\r\n                elif stamping_press_type == 3:\r\n                    par.cutout_part_dimension = [300, 150, '', '', '']\r\n                    par.cutout_spuare_R = [30]\r\n                elif stamping_press_type == 4:\r\n                    par.cutout_part_dimension = [360, 180, '', '', '']\r\n                    par.cutout_spuare_R = [35]\r\n                elif stamping_press_type == 5:\r\n                    par.cutout_part_dimension = [400, 200, '', '', '']\r\n                    par.cutout_spuare_R = [40]\r\n                elif stamping_press_type == 6:\r\n                    par.cutout_part_dimension = [440, 220, '', '', '']\r\n                    par.cutout_spuare_R = [45]\r\n                elif stamping_press_type == 7:\r\n                    par.cutout_part_dimension = [500, 250, '', '', '']\r\n                    par.cutout_spuare_R = [50]\r\n                elif stamping_press_type == 8:\r\n                    par.cutout_part_dimension = [540, 270, '', '', '']\r\n                    par.cutout_spuare_R = [55]\r\n            # 判斷T溝\r\n            if stamping_press_type == 0:\r\n                par.total_t_slot_h_type = ['貫穿', '貫穿', '貫穿']\r\n                par.total_position_y = [100, 0, -100]\r\n                par.t_all_dimension = [22, 38, 23, 16]\r\n            elif stamping_press_type == 1:\r\n                par.total_t_slot_h_type = ['貫穿', '貫穿', '貫穿']\r\n                par.total_position_y = [125, 0, -125]\r\n                par.t_all_dimension = [22, 38, 23, 16]\r\n            elif stamping_press_type == 2:\r\n                par.total_t_slot_h_type = ['貫穿', '貫穿', '貫穿']\r\n                par.total_position_y = [140, 0, -140]\r\n                par.t_all_dimension = [22, 38, 23, 16]\r\n            elif stamping_press_type == 3:\r\n                par.total_t_slot_h_type = ['貫穿', '貫穿', '貫穿']\r\n                par.total_position_y = [150, 0, -150]\r\n                par.t_all_dimension = [22, 38, 23, 16]\r\n            elif stamping_press_type == 4:\r\n                par.total_t_slot_h_type = ['貫穿', '貫穿', '貫穿']\r\n                par.total_position_y = [180, 0, -180]\r\n                par.t_all_dimension = [28, 48, 30, 20]\r\n            elif stamping_press_type == 5:\r\n                par.total_t_slot_h_type = ['貫穿', '貫穿', '貫穿']\r\n                par.total_position_y = [210, 0, -210]\r\n                par.t_all_dimension = [28, 48, 30, 20]\r\n            elif stamping_press_type == 6:\r\n                par.total_t_slot_h_type = ['貫穿', '貫穿', '貫穿', '貫穿', '貫穿']\r\n                par.total_position_y = [290, 165, 0, -165, -290]\r\n                par.t_all_dimension = [28, 48, 30, 20]\r\n            elif stamping_press_type == 7:\r\n                par.total_t_slot_h_type = ['貫穿', '貫穿', '貫穿', '貫穿', '貫穿']\r\n                par.total_position_y = [320, 180, 0, -180, -320]\r\n                par.t_all_dimension = [28, 48, 30, 20]\r\n            elif stamping_press_type == 8:\r\n                par.total_t_slot_h_type = ['貫穿', '貫穿', '貫穿', '貫穿', '貫穿']\r\n                par.total_position_y = [350, 200, 0, -200, -350]\r\n                par.t_all_dimension = [28, 48, 30, 20]\r\n        # 連結到平板第二頁的函式進行生成\r\n        path = pad_secend_windows.start(stamping_press_type, stamping_press_type)\r\n        # T溝\r\n        pad_secend_windows.t_solt(stamping_press_type, path)\r\n        # 下料孔\r\n        pad_secend_windows.plate_hole(stamping_press_type, stamping_press_type, path)\r\n        # 關閉實體外所有東西\r\n        mprog.Close_All()\r\n        # 平板存檔\r\n        mprog.save_file_stp(path, 'plate')\r\n        mprog.save_stpfile_part(path, 'plate')\r\n\r\n\r\n# 平板第二頁\r\nclass pad_secend_windows(QtWidgets.QWidget):\r\n    def __init__(self, stamping_press_type):\r\n        super().__init__()\r\n        self.ui = pad_main_Form()\r\n        self.ui.setupUi(self)\r\n        self.setWindowTitle('平板')\r\n        # 切換平板第一頁\r\n        self.ui.pad_select.currentIndexChanged.connect(lambda: self.switch_to_first_plate_windows(stamping_press_type))\r\n        self.ui.pad_select.setCurrentText('特殊平板')\r\n        # 下料孔\r\n        self.ui.remove_type.currentIndexChanged.connect(self.cutout_parameter_change)\r\n        self.ui.removetable.verticalHeader().setSectionResizeMode(QtWidgets.QHeaderView.Stretch)\r\n        self.ui.removetable.horizontalHeader().setSectionResizeMode(QtWidgets.QHeaderView.Stretch)\r\n        self.ui.removetable.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)\r\n        self.ui.removetable.verticalHeader().setVisible(False)\r\n        # 平板面積\r\n        self.plate_type(stamping_press_type)\r\n        self.ui.pad_extrasize.currentIndexChanged.connect(lambda: self.plate_area_dimension(stamping_press_type))\r\n        self.ui.LR.setText(str(par.plate_length[stamping_press_type]))\r\n        self.ui.FB.setText(str(par.plate_width[stamping_press_type]))\r\n        # T溝\r\n        for number in range(0, 4):\r\n            self.ui.t_solttable.setItem(number, 0, QTableWidgetItem(par.t_table_dimension_parameter[number]))\r\n        self.ui.t_solttable.verticalHeader().setVisible(False)\r\n        self.ui.t_solttable.horizontalHeader().setVisible(False)\r\n        # 設定T_solt表格內容\r\n        self.T_solt_table_normel_setup()\r\n        for number in range(1, 10):\r\n            newItem = QTableWidgetItem(\"-\")\r\n            self.ui.t_solttable.setItem(number, 1, newItem)\r\n        self.ui.t_solttable.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)\r\n        self.ui.t_solttable.horizontalHeader().setSectionResizeMode(QtWidgets.QHeaderView.Stretch)\r\n        self.ui.t_solttable.verticalHeader().setSectionResizeMode(QtWidgets.QHeaderView.Stretch)\r\n        self.ui.t_solt_type.currentIndexChanged.connect(self.T_solt_combobox_change)\r\n        self.ui.plate_start.clicked.connect(lambda: self.start(stamping_press_type))\r\n        self.ui.t_machining.clicked.connect(lambda: self.showpadmachiningwindows(stamping_press_type))\r\n        self.ui.remove_machining.clicked.connect(lambda: self.showcutoutmachiningwindows(stamping_press_type))\r\n        self.chack_plate_table()\r\n\r\n    def switch_to_first_plate_windows(self, stamping_press_type):\r\n        if self.ui.pad_select.currentText() != \"特殊平板\":\r\n            self.hide()\r\n            self.nw = plate_first_windows(stamping_press_type)\r\n            self.nw.show()\r\n\r\n    def plate_area_dimension(self, stamping_press_type):\r\n        get_pad_select_name = self.ui.pad_select.currentText()\r\n        get_pad_area_name = self.ui.pad_extrasize.currentText()\r\n        if get_pad_select_name == \"特殊平板\":\r\n            if get_pad_area_name == '標準':\r\n                LR_value = str(par.plate_length[stamping_press_type])\r\n                FB_value = str(par.plate_width[stamping_press_type])\r\n            elif get_pad_area_name == '加大I型':\r\n                LR_value = str(par.plate_length[stamping_press_type] + par.plate_lv1[stamping_press_type])\r\n                FB_value = str(par.plate_width[stamping_press_type])\r\n            elif get_pad_area_name == '加大II型':\r\n                LR_value = str(par.plate_length[stamping_press_type] + par.plate_lv2[stamping_press_type])\r\n                FB_value = str(par.plate_width[stamping_press_type])\r\n            par.plate_special_type = [get_pad_area_name]\r\n            # 設定最終的 LR 和 FB 值\r\n            self.ui.LR.setText(LR_value)\r\n            self.ui.FB.setText(FB_value)\r\n        else:\r\n            self.ui.LR.clear()\r\n            self.ui.FB.clear()\r\n\r\n    def plate_type(self, stamping_press_type):\r\n        for number in range(0, 10):\r\n            self.ui.pad_select.setItemText(number, str(par.plate_type[number]) + '(' + str(\r\n                par.plate_length[stamping_press_type]) + 'x' + str(par.plate_width[stamping_press_type]) + \")\")\r\n\r\n    def T_solt_table_normel_setup(self):\r\n        # 設定T_solt表格內容\r\n        # 第一行\r\n        newItem = QTableWidgetItem(\"尺寸代號\")\r\n        self.ui.t_solttable.setItem(0, 0, newItem)\r\n        newItem = QTableWidgetItem(\"尺寸\")\r\n        self.ui.t_solttable.setItem(0, 1, newItem)\r\n        newItem = QTableWidgetItem(\"公差\")\r\n        self.ui.t_solttable.setItem(0, 2, newItem)\r\n        # 第一列\r\n        self.ui.t_solttable.setSpan(1, 0, 2, 1)\r\n        newItem = QTableWidgetItem(\"A\")\r\n        self.ui.t_solttable.setItem(1, 0, newItem)\r\n        self.ui.t_solttable.setSpan(3, 0, 2, 1)\r\n        newItem = QTableWidgetItem(\"B\")\r\n        self.ui.t_solttable.setItem(3, 0, newItem)\r\n        self.ui.t_solttable.setSpan(5, 0, 2, 1)\r\n        newItem = QTableWidgetItem(\"C\")\r\n        self.ui.t_solttable.setItem(5, 0, newItem)\r\n        self.ui.t_solttable.setSpan(7, 0, 2, 1)\r\n        newItem = QTableWidgetItem(\"D\")\r\n        self.ui.t_solttable.setItem(7, 0, newItem)\r\n        # 第二列\r\n        self.ui.t_solttable.setSpan(1, 1, 2, 1)\r\n        self.ui.t_solttable.setSpan(3, 1, 2, 1)\r\n        self.ui.t_solttable.setSpan(5, 1, 2, 1)\r\n        self.ui.t_solttable.setSpan(7, 1, 2, 1)\r\n        # 第三列\r\n        newItem = QTableWidgetItem(\"+1\")\r\n        self.ui.t_solttable.setItem(1, 2, newItem)\r\n        newItem = QTableWidgetItem(\"0\")\r\n        self.ui.t_solttable.setItem(2, 2, newItem)\r\n        newItem = QTableWidgetItem(\"+1\")\r\n        self.ui.t_solttable.setItem(3, 2, newItem)\r\n        newItem = QTableWidgetItem(\"-1\")\r\n        self.ui.t_solttable.setItem(4, 2, newItem)\r\n        newItem = QTableWidgetItem(\"+0.25\")\r\n        self.ui.t_solttable.setItem(5, 2, newItem)\r\n        newItem = QTableWidgetItem(\"-0.25\")\r\n        self.ui.t_solttable.setItem(6, 2, newItem)\r\n        newItem = QTableWidgetItem(\"+2\")\r\n        self.ui.t_solttable.setItem(7, 2, newItem)\r\n        newItem = QTableWidgetItem(\"0\")\r\n        self.ui.t_solttable.setItem(8, 2, newItem)\r\n\r\n    def T_solt_combobox_change(self):\r\n        t_solt_type = self.ui.t_solt_type.currentText()\r\n        if t_solt_type == \"T溝代號:F(SN1-25~60標準)\" or t_solt_type == \"T溝代號:G(SN1-180~250標準)\":\r\n            if t_solt_type == \"T溝代號:F(SN1-25~60標準)\":\r\n                self.ui.removepicture_2.setPixmap(QtGui.QPixmap(\"T溝詳圖_F.png\"))\r\n            elif t_solt_type == \"T溝代號:G(SN1-180~250標準)\":\r\n                self.ui.removepicture_2.setPixmap(QtGui.QPixmap(\"T溝詳圖_G.png\"))\r\n            for number in range(1, 10):\r\n                newItem = QTableWidgetItem(\"-\")\r\n                self.ui.t_solttable.setItem(number, 1, newItem)\r\n        elif t_solt_type == \"特殊T溝\":\r\n            self.ui.removepicture_2.setPixmap(QtGui.QPixmap(\"T溝詳圖.png\"))\r\n            for number in range(1, 10):\r\n                newItem = QTableWidgetItem(\"\")\r\n                self.ui.t_solttable.setItem(number, 1, newItem)\r\n        for number in range(0, 10):\r\n            for number2 in range(0, 3):\r\n                item = self.ui.t_solttable.item(number, number2)\r\n                if item is not None:\r\n                    item.setFlags(item.flags() & ~QtCore.Qt.ItemIsEditable)\r\n        if self.ui.t_solt_type.currentText() == '特殊T溝':\r\n            for number in range(1, 10):\r\n                item = self.ui.t_solttable.item(number, 1)\r\n                if item is not None:\r\n                    item.setFlags(item.flags() | QtCore.Qt.ItemIsEditable)\r\n                    self.ui.t_solttable.setEditTriggers(QtWidgets.QAbstractItemView.AllEditTriggers)\r\n\r\n    def chack_plate_table(self):\r\n        if len(par.plate_hole_type) != 0:\r\n            if par.plate_hole_type[0] == '圓孔':\r\n                self.ui.remove_type.setCurrentIndex(1)\r\n                self.ui.removetable.setItem(0, 0, QTableWidgetItem(par.cutout_parameter_circle[0]))\r\n                self.ui.removetable.setItem(0, 1, QTableWidgetItem(par.cutout_part_dimension[0]))\r\n            if par.plate_hole_type[0] == '方孔':\r\n                self.ui.remove_type.setCurrentIndex(2)\r\n                for i in range(0, 2):\r\n                    self.ui.removetable.setItem(i, 0, QTableWidgetItem(par.cutout_parameter_square[i]))\r\n                    self.ui.removetable.setItem(i, 1, QTableWidgetItem(par.cutout_part_dimension[i]))\r\n            if par.plate_hole_type[0] == '漏斗型':\r\n                self.ui.remove_type.setCurrentIndex(3)\r\n                for i in range(0, 5):\r\n                    self.ui.removetable.setItem(i, 0, QTableWidgetItem(par.cutout_parameter_funnel[i]))\r\n                    self.ui.removetable.setItem(i, 1, QTableWidgetItem(par.cutout_part_dimension[i]))\r\n\r\n    # def showpaddimensionwindows(self, stamping_press_type):\r\n    #     self.hide()\r\n    #     self.nw = pad_dimension(stamping_press_type)\r\n    #     self.nw.show()\r\n\r\n    def showpadmachiningwindows(self, stamping_press_type):\r\n        t_solt_type = self.ui.t_solt_type.currentText()\r\n        if t_solt_type == \"T溝代號:F(SN1-25~60標準)\":\r\n            par.t_all_dimension = [22, 38, 23, 16]\r\n        elif t_solt_type == \"T溝代號:G(SN180~250標準)\":\r\n            par.t_all_dimension = [28, 48, 30, 20]\r\n        elif t_solt_type == \"特殊T溝\":\r\n            for value in range(1, 9, 2):\r\n                par.t_all_dimension.append(self.ui.t_solttable.item(value, 1).text())\r\n        plate_type_select = self.ui.pad_extrasize.currentText()\r\n        if plate_type_select == '標準':\r\n            plate_lenght = par.plate_length[stamping_press_type]\r\n            plate_width = par.plate_width[stamping_press_type]\r\n        elif plate_type_select == '加大I型':\r\n            plate_lenght = par.plate_length[stamping_press_type] + par.plate_lv1[stamping_press_type]\r\n            plate_width = par.plate_width[stamping_press_type]\r\n        elif plate_type_select == '加大II型':\r\n            plate_lenght = par.plate_length[stamping_press_type] + par.plate_lv2[stamping_press_type]\r\n            plate_width = par.plate_width[stamping_press_type]\r\n\r\n        self.hide()\r\n        self.nw = t_machining(stamping_press_type, plate_lenght, plate_width)\r\n        self.nw.show()\r\n\r\n    def showcutoutmachiningwindows(self, i):\r\n        par.plate_hole_type = [self.ui.remove_type.currentText()]\r\n        for turn in range(0, 5):\r\n            par.cutout_part_dimension[turn] = (self.ui.removetable.item(turn, 1).text())\r\n        print(par.cutout_part_dimension)\r\n        if par.plate_hole_type == '漏斗型':\r\n            if int(par.cutout_part_dimension[0]) < int(par.cutout_part_dimension[1]) or int(\r\n                    par.cutout_part_dimension[2]) < int(par.cutout_part_dimension[3]):\r\n                print('error')\r\n        self.hide()\r\n        self.nw = cutout_hole_machining(i)\r\n        self.nw.show()\r\n\r\n    # def showremovemachiningwindows(self, stamping_press_type):\r\n    #     self.hide()\r\n    #     self.nw = remove_machining(stamping_press_type)\r\n    #     self.nw.show()\r\n\r\n    # 下料孔形狀選單連動功能\r\n    def cutout_parameter_change(self):\r\n        translate = QtCore.QCoreApplication.translate\r\n        cutout_type = self.ui.remove_type.currentText()\r\n        for number in range(0, 5):\r\n            self.ui.removetable.setItem(number, 0, QTableWidgetItem(''))\r\n            self.ui.removetable.setItem(number, 1, QTableWidgetItem(''))\r\n        if cutout_type == '無孔':\r\n            self.ui.removepicture.setPixmap(QtGui.QPixmap(\"cutout_shape_A.png\"))\r\n            self.ui.remove_machining.setDisabled(True)\r\n        if cutout_type == '圓孔':\r\n            self.ui.removepicture.setPixmap(QtGui.QPixmap(\"cutout_shape_B.png\"))\r\n            self.ui.remove_machining.setDisabled(False)\r\n            self.ui.removetable.setItem(0, 0, QTableWidgetItem('HD'))\r\n        if cutout_type == '方孔':\r\n            self.ui.removepicture.setPixmap(QtGui.QPixmap(\"cutout_shape_C.png\"))\r\n            self.ui.remove_machining.setDisabled(False)\r\n            self.ui.removetable.setItem(0, 0, QTableWidgetItem('HLR'))\r\n            self.ui.removetable.setItem(1, 0, QTableWidgetItem('HFB'))\r\n        if cutout_type == '漏斗型':\r\n            self.ui.removepicture.setPixmap(QtGui.QPixmap(\"cutout_shape_D.png\"))\r\n            self.ui.remove_machining.setDisabled(False)\r\n            self.ui.removetable.setItem(0, 0, QTableWidgetItem('HULR'))\r\n            self.ui.removetable.setItem(1, 0, QTableWidgetItem('HDLR'))\r\n            self.ui.removetable.setItem(2, 0, QTableWidgetItem('HUFB'))\r\n            self.ui.removetable.setItem(3, 0, QTableWidgetItem('HDFB'))\r\n            self.ui.removetable.setItem(4, 0, QTableWidgetItem('HH'))\r\n        if cutout_type == '模墊型':\r\n            self.ui.removepicture.setPixmap(QtGui.QPixmap(\"cutout_shape_E.png\"))\r\n            self.ui.remove_machining.setDisabled(True)\r\n        for number in range(0, 5):\r\n            item = self.ui.removetable.item(number, 0)\r\n            if item is not None:\r\n                item.setFlags(item.flags() & ~QtCore.Qt.ItemIsEditable)\r\n\r\n    def start(self, stamping_press_type):\r\n        # 對平板進行變數\r\n        path = FolderManager('plate').path\r\n        path = str(path)\r\n        mprog.set_CATIA_workbench_env()\r\n        mprog.import_part(fp.system_root + fp.DEMO_part, 'plate')\r\n        plate_name, plate_value = pdp.padchange(stamping_press_type)\r\n        for name in plate_name:\r\n            par.plate_all_parameter[name] = plate_value[plate_name.index(name)]\r\n        print(par.plate_all_parameter)\r\n        if len(par.plate_normal_name) != 0:\r\n            if '加大I型' in par.plate_normal_name[0]:\r\n                par.lv = [par.plate_lv1[stamping_press_type]]\r\n                mprog.param_change('plate', 'LV', par.lv[0])\r\n            elif '加大II型' in par.plate_normal_name[0]:\r\n                par.lv = [par.plate_lv2[stamping_press_type]]\r\n                mprog.param_change('plate', 'LV', par.lv[0])\r\n            else:\r\n                par.lv = [0]\r\n            if '模墊型' in par.plate_normal_name[0]:\r\n                if stamping_press_type <= 4:\r\n                    mprog.activatefeature('cutout_molded_cushion', 4)\r\n                    mprog.param_change('plate', 'cutout_molded_cushion_A',\r\n                                       par.normal_cutout_molded_cushion_A[stamping_press_type])\r\n                    mprog.param_change('plate', 'cutout_molded_cushion_B',\r\n                                       par.normal_cutout_molded_cushion_B[stamping_press_type])\r\n                    mprog.param_change('plate', 'cutout_molded_cushion_D',\r\n                                       par.normal_cutout_molded_cushion_D[stamping_press_type])\r\n                    mprog.param_change('plate', 'cutout_molded_cushion_length',\r\n                                       par.normal_cutout_molded_cushion_length[stamping_press_type])\r\n                    mprog.param_change('plate', 'cutout_molded_cushion_width',\r\n                                       par.normal_cutout_molded_cushion_width[stamping_press_type])\r\n            mprog.Update()\r\n        else:\r\n            plate_type = self.ui.pad_extrasize.currentText()\r\n            par.plate_special_type = [plate_type]\r\n            if par.plate_special_type[0] == '標準':\r\n                par.lv = [0]\r\n            elif par.plate_special_type[0] == '加大I型':\r\n                par.lv.append(par.plate_lv1[stamping_press_type])\r\n                mprog.param_change('plate', 'LV', par.lv[0])\r\n            elif par.plate_special_type[0] == '加大II型':\r\n                par.lv.append(par.plate_lv2[stamping_press_type])\r\n                mprog.param_change('plate', 'LV', par.lv[0])\r\n            # T溝程式\r\n            self.t_solt(path)\r\n            # 下料孔程式\r\n            self.plate_hole(stamping_press_type, path)\r\n            # 關閉實體外所有東西\r\n            mprog.Close_All()\r\n            # 平板存檔\r\n            mprog.save_file_stp(path, 'plate')\r\n            mprog.save_stpfile_part(path, 'plate')\r\n        return path\r\n\r\n    # T形槽\r\n    def t_solt(self, path):\r\n        # 對T溝進行變數變換\r\n        mprog.import_part(fp.system_root + fp.DEMO_part, 'T')\r\n        for t in par.t_all_dimension:\r\n            for t_name in range(len(par.t_all_dimension_name) + 1):\r\n                mprog.param_change('T', par.t_all_dimension_name[t_name], t)\r\n                break\r\n        mprog.param_change('T', 'LB', 0)\r\n        mprog.param_change('T', 'LF', 0)\r\n        mprog.param_change('T', 'SB', 0)\r\n        mprog.param_change('T', 'SF', 0)\r\n        mprog.Update()\r\n        mprog.save_file_stp(path, 'T')\r\n        mprog.save_stpfile_part(path, 'T')\r\n        mprog.close_window()\r\n\r\n        # 橫向T溝\r\n        if len(par.total_position_y) != 0:\r\n            for turn in range(0, len(par.total_position_y)):\r\n                mprog.import_part(path, 'T')\r\n                tT.changerotate(0)\r\n                mprog.param_change('T', 'A', (par.plate_all_parameter['A'] + par.lv[0]))\r\n                mprog.param_change('T', 'C', par.plate_all_parameter['C'])\r\n                if par.total_t_slot_h_type[turn] == '貫穿' or par.total_t_slot_h_type[turn] == '':\r\n                    mprog.param_change('T', 'LL', (par.plate_all_parameter['A'] + par.lv[0]))\r\n                    mprog.param_change('T', 'LR', (par.plate_all_parameter['A'] + par.lv[0]))\r\n                elif par.total_t_slot_h_type[turn] == '分段':\r\n                    mprog.param_change('T', 'LL', par.total_LL[turn])\r\n                    mprog.param_change('T', 'LR', par.total_LR[turn])\r\n                # 判斷SL和SR是否為0或空值\r\n                if len(par.total_SL) != 0:\r\n                    if par.total_SL[turn] == '' or par.total_SL[turn] == '0':\r\n                        mprog.partdeactivate('讓孔1')\r\n                        mprog.partdeactivate('讓孔倒圓角1')\r\n                    elif par.total_SL[turn] != '':\r\n                        mprog.param_change('T', 'SL', par.total_SL[turn])\r\n                else:\r\n                    mprog.partdeactivate('讓孔1')\r\n                    mprog.partdeactivate('讓孔倒圓角1')\r\n                if len(par.total_SR) != 0:\r\n                    if par.total_SR[turn] == '' or par.total_SR[turn] == '0' or len(par.total_SR) == 0:\r\n                        mprog.partdeactivate('讓孔2')\r\n                        mprog.partdeactivate('讓孔倒圓角2')\r\n                    elif par.total_SR[turn] != '':\r\n                        mprog.param_change('T', 'SR', par.total_SR[turn])\r\n                else:\r\n                    mprog.partdeactivate('讓孔2')\r\n                    mprog.partdeactivate('讓孔倒圓角2')\r\n                tT.create_t_solt((par.plate_all_parameter['B'] / 2) + par.total_position_y[turn], turn)\r\n                if len(par.total_SL) != 0:\r\n                    if par.total_SL[turn] == '' or par.total_SL[turn] == '0':\r\n                        mprog.partbodyfeatureactivate('讓孔1')\r\n                        mprog.partbodyfeatureactivate('讓孔倒圓角1')\r\n                else:\r\n                    mprog.partbodyfeatureactivate('讓孔1')\r\n                    mprog.partbodyfeatureactivate('讓孔倒圓角1')\r\n                if len(par.total_SR) != 0:\r\n                    if par.total_SR[turn] == '' or par.total_SR[turn] == '0':\r\n                        mprog.partbodyfeatureactivate('讓孔2')\r\n                        mprog.partbodyfeatureactivate('讓孔倒圓角2')\r\n                else:\r\n                    mprog.partbodyfeatureactivate('讓孔2')\r\n                    mprog.partbodyfeatureactivate('讓孔倒圓角2')\r\n                mprog.Update()\r\n                mprog.close_window()\r\n                # time.sleep(0.1)\r\n        else:\r\n            turn = 0\r\n\r\n        # 縱向T溝\r\n        if len(par.total_position_x) != 0:\r\n            if turn != 0:\r\n                mprog.param_change('T', 'LL', 0)\r\n                mprog.param_change('T', 'LR', 0)\r\n                mprog.param_change('T', 'SL', 0)\r\n                mprog.param_change('T', 'SR', 0)\r\n            for turn_2 in range(0, len(par.total_position_x)):\r\n                mprog.import_part(path, 'T')\r\n                tT.changerotate(-90)\r\n                mprog.param_change('T', 'A', par.plate_all_parameter['B'])\r\n                mprog.param_change('T', 'C', par.plate_all_parameter['C'])\r\n                if par.total_t_slot_v_type[turn_2] == '貫穿' or par.total_t_slot_v_type[turn_2] == '':\r\n                    mprog.param_change('T', 'LF', par.plate_all_parameter['B'])\r\n                    mprog.param_change('T', 'LB', par.plate_all_parameter['B'])\r\n                elif par.total_t_slot_v_type[turn_2] == '分段':\r\n                    mprog.param_change('T', 'LF', par.total_LF[turn_2])\r\n                    mprog.param_change('T', 'LB', par.total_LB[turn_2])\r\n                # 判斷SL和SR是否為0或空值\r\n                if par.total_SF[turn_2] == '' or par.total_SF[turn_2] == '0':\r\n                    mprog.partdeactivate('讓孔1')\r\n                    mprog.partdeactivate('讓孔倒圓角1')\r\n                elif par.total_SF[turn_2] != '':\r\n                    mprog.param_change('T', 'SF', par.total_SF[turn_2])\r\n                if par.total_SB[turn_2] == '' or par.total_SB[turn_2] == '0':\r\n                    mprog.partdeactivate('讓孔2')\r\n                    mprog.partdeactivate('讓孔倒圓角2')\r\n                elif par.total_SB[turn_2] != '':\r\n                    mprog.param_change('T', 'SB', par.total_SB[turn_2])\r\n                if turn == 0:\r\n                    tT.create_t_solt(\r\n                        -((par.plate_all_parameter['A'] / 2) + (par.lv[0] / 2) + par.total_position_x[turn_2]), turn_2)\r\n                else:\r\n                    tT.create_t_solt(\r\n                        -((par.plate_all_parameter['A'] / 2) + (par.lv[0] / 2) + par.total_position_x[turn_2]),\r\n                        turn_2 + turn + 1)\r\n                if par.total_SF[turn_2] == '' or par.total_SF[turn_2] == '0':\r\n                    mprog.param_change('T', 'SF', 10)\r\n                    mprog.partbodyfeatureactivate('讓孔1')\r\n                    mprog.partbodyfeatureactivate('讓孔倒圓角1')\r\n                if par.total_SB[turn_2] == '' or par.total_SB[turn_2] == '0':\r\n                    mprog.param_change('T', 'SB', 10)\r\n                    mprog.partbodyfeatureactivate('讓孔2')\r\n                    mprog.partbodyfeatureactivate('讓孔倒圓角2')\r\n                mprog.Update()\r\n                mprog.close_window()\r\n        print('T-slot create successfully')\r\n\r\n    # 下料孔\r\n    def plate_hole(self, stamping_press_type, path):\r\n        try:\r\n            par.plate_hole_type = [self.ui.remove_type.currentText()]\r\n        except:\r\n            pass\r\n        if len(par.plate_hole_type) != 0:\r\n            if par.plate_hole_type[0] != '無孔' or len(par.plate_hole_type) != 0:\r\n                par.plate_hole_type = [self.ui.remove_type.currentText()]\r\n                print(stamping_press_type)\r\n                for x in range(0, 5):\r\n                    par.cutout_part_dimension[x] = (self.ui.removetable.item(x, 1).text())\r\n                print(par.cutout_part_dimension)\r\n                print(stamping_press_type)\r\n                ch.edge_test(stamping_press_type)\r\n                # 開下料孔檔案+變數變換\r\n                if par.plate_hole_type[0] == '圓孔':\r\n                    mprog.import_part(fp.system_root + fp.DEMO_part, 'cutout_hole_circle')\r\n                    mprog.param_change('cutout_hole_circle', par.cutout_parameter_circle[0],\r\n                                       int(par.cutout_part_dimension[0]))\r\n                    mprog.param_change('cutout_hole_circle', 'C', par.plate_all_parameter['C'])\r\n                    mprog.param_change('cutout_hole_circle', 'X',\r\n                                       par.cutout_hole_machining_X - par.plate_all_parameter['A'] / 2 - par.lv[0] / 2)\r\n                    mprog.param_change('cutout_hole_circle', 'Y',\r\n                                       par.plate_all_parameter['B'] / 2 + par.cutout_hole_machining_Y)\r\n                    par.plate_hole_type[0] = 'cutout_hole_circle'\r\n                elif par.plate_hole_type[0] == '方孔':\r\n                    mprog.import_part(fp.system_root + fp.DEMO_part, 'cutout_hole_square')\r\n                    for n in range(0, 2):\r\n                        mprog.param_change('cutout_hole_square', par.cutout_parameter_square[n],\r\n                                           int(par.cutout_part_dimension[n]))\r\n                    mprog.param_change('cutout_hole_square', 'C', par.plate_all_parameter['C'])\r\n                    mprog.param_change('cutout_hole_square', 'X',\r\n                                       par.cutout_hole_machining_X - par.plate_all_parameter['A'] / 2 - par.lv[0] / 2)\r\n                    mprog.param_change('cutout_hole_square', 'Y',\r\n                                       par.plate_all_parameter['B'] / 2 + par.cutout_hole_machining_Y)\r\n                    par.plate_hole_type[0] = 'cutout_hole_square'\r\n                elif par.plate_hole_type[0] == '漏斗型':\r\n                    mprog.import_part(fp.system_root + fp.DEMO_part, 'cutout_funnel')\r\n                    for n in range(0, 5):\r\n                        mprog.param_change('cutout_funnel', par.cutout_parameter_funnel[n],\r\n                                           int(par.cutout_part_dimension[n]))\r\n                    mprog.param_change('cutout_funnel', 'C', par.plate_all_parameter['C'])\r\n                    mprog.param_change('cutout_funnel', 'X',\r\n                                       par.cutout_hole_machining_X - par.plate_all_parameter['A'] / 2 - par.lv[0] / 2)\r\n                    mprog.param_change('cutout_funnel', 'Y',\r\n                                       par.plate_all_parameter['B'] / 2 + par.cutout_hole_machining_Y)\r\n                    par.plate_hole_type[0] = 'cutout_funnel'\r\n                elif par.plate_hole_type[0] == '模墊型':\r\n                    mprog.import_part(fp.system_root + fp.DEMO_part, 'cutout_molded_cushion')\r\n                    mprog.param_change('cutout_molded_cushion', 'C', par.plate_all_parameter['C'])\r\n                    if stamping_press_type < 5:\r\n                        mprog.param_change('cutout_molded_cushion', 'A', par.cutout_molded_cushion_A[0])\r\n                        mprog.param_change('cutout_molded_cushion', 'B', par.cutout_molded_cushion_B[0])\r\n                        mprog.param_change('cutout_molded_cushion', 'D', par.cutout_molded_cushion_L[0])\r\n                    else:\r\n                        mprog.param_change('cutout_molded_cushion', 'A', par.cutout_molded_cushion_A[1])\r\n                        mprog.param_change('cutout_molded_cushion', 'B', par.cutout_molded_cushion_B[1])\r\n                        mprog.param_change('cutout_molded_cushion', 'D', par.cutout_molded_cushion_L[1])\r\n                    mprog.param_change('cutout_molded_cushion', 'width_gap', 60)\r\n                    mprog.param_change('cutout_molded_cushion', 'length_gap', 65)\r\n                    mprog.param_change('cutout_molded_cushion', 'i', par.cutout_molded_cushion_i[stamping_press_type])\r\n                    mprog.param_change('cutout_molded_cushion', 'j', par.cutout_molded_cushion_j[stamping_press_type])\r\n                    mprog.param_change('cutout_molded_cushion', 'X',\r\n                                       65 * (par.cutout_molded_cushion_i[stamping_press_type] - 1) / 2 - par.plate_all_parameter[\r\n                                           'A'] / 2 - par.lv[0] / 2)\r\n                    mprog.param_change('cutout_molded_cushion', 'Y',\r\n                                       par.plate_all_parameter['B'] / 2 - 60 * (par.cutout_molded_cushion_j[stamping_press_type] - 1) / 2)\r\n                    par.plate_hole_type[0] = 'cutout_molded_cushion'\r\n                mprog.Update()\r\n                mprog.save_file_stp(path, par.plate_hole_type[0])\r\n                mprog.save_stpfile_part(path, par.plate_hole_type[0])\r\n                tT.copybody()\r\n                tT.switch_to_window_by_name('plate.CATPart')\r\n                # 計算下料孔變數名稱\r\n                if len(par.total_position_y) != 0:\r\n                    position_y = len(par.total_position_y)\r\n                else:\r\n                    position_y = 0\r\n                if len(par.total_position_x) != 0:\r\n                    position_x = len(par.total_position_x)\r\n                else:\r\n                    position_x = 0\r\n                total_turn = position_y + position_x\r\n                print(total_turn)\r\n                # 移除下料孔\r\n                tT.pastebody(total_turn, par.plate_hole_type[0])\r\n                tT.removebody(total_turn, par.plate_hole_type[0])\r\n                mprog.Update()\r\n                tT.switch_to_window_by_name(par.plate_hole_type[0] + \".CATPart\")\r\n                mprog.close_window()\r\n        if len(par.plate_normal_name) != 0:\r\n            if '無孔' not in par.plate_normal_name[0]:\r\n                # 開下料孔檔案+變數變換\r\n                if '圓孔' in par.plate_normal_name[0]:\r\n                    mprog.import_part(fp.system_root + fp.DEMO_part, 'cutout_hole_circle')\r\n                    mprog.param_change('cutout_hole_circle', par.cutout_parameter_circle[0],\r\n                                       int(par.cutout_part_dimension[0]))\r\n                    mprog.param_change('cutout_hole_circle', 'C', par.plate_all_parameter['C'])\r\n                    mprog.param_change('cutout_hole_circle', 'X',\r\n                                       par.cutout_hole_machining_X - par.plate_all_parameter['A'] / 2 - par.lv[\r\n                                           0] / 2)\r\n                    mprog.param_change('cutout_hole_circle', 'Y',\r\n                                       par.plate_all_parameter['B'] / 2 + par.cutout_hole_machining_Y)\r\n                    par.plate_normal_name[0] = 'cutout_hole_circle'\r\n                elif '方孔' in par.plate_normal_name[0]:\r\n                    mprog.import_part(fp.system_root + fp.DEMO_part, 'cutout_hole_square')\r\n                    for n in range(0, 2):\r\n                        mprog.param_change('cutout_hole_square', par.cutout_parameter_square[n],\r\n                                           int(par.cutout_part_dimension[n]))\r\n                    mprog.param_change('cutout_hole_square', 'C', par.plate_all_parameter['C'])\r\n                    mprog.param_change('cutout_hole_square', 'X',\r\n                                       par.cutout_hole_machining_X - par.plate_all_parameter['A'] / 2 - par.lv[\r\n                                           0] / 2)\r\n                    mprog.param_change('cutout_hole_square', 'Y',\r\n                                       par.plate_all_parameter['B'] / 2 + par.cutout_hole_machining_Y)\r\n                    mprog.param_change('cutout_hole_square', 'edge_fillet', par.cutout_spuare_R[0])\r\n                    par.plate_normal_name[0] = 'cutout_hole_square'\r\n                elif '漏斗型' in par.plate_normal_name[0]:\r\n                    mprog.import_part(fp.system_root + fp.DEMO_part, 'cutout_funnel')\r\n                    for n in range(0, 5):\r\n                        mprog.param_change('cutout_funnel', par.cutout_parameter_funnel[n],\r\n                                           int(par.cutout_part_dimension[n]))\r\n                    mprog.param_change('cutout_funnel', 'C', par.plate_all_parameter['C'])\r\n                    mprog.param_change('cutout_funnel', 'X',\r\n                                       par.cutout_hole_machining_X - par.plate_all_parameter['A'] / 2 - par.lv[\r\n                                           0] / 2)\r\n                    mprog.param_change('cutout_funnel', 'Y',\r\n                                       par.plate_all_parameter['B'] / 2 + par.cutout_hole_machining_Y)\r\n                    par.plate_normal_name[0] = 'cutout_funnel'\r\n                elif '模墊型' in par.plate_normal_name[0]:\r\n                    mprog.import_part(fp.system_root + fp.DEMO_part, 'cutout_molded_cushion')\r\n                    mprog.param_change('cutout_molded_cushion', 'C', par.plate_all_parameter['C'])\r\n                    if stamping_press_type < 5:\r\n                        mprog.param_change('cutout_molded_cushion', 'A', par.cutout_molded_cushion_A[0])\r\n                        mprog.param_change('cutout_molded_cushion', 'B', par.cutout_molded_cushion_B[0])\r\n                        mprog.param_change('cutout_molded_cushion', 'D', par.cutout_molded_cushion_L[0])\r\n                    else:\r\n                        mprog.param_change('cutout_molded_cushion', 'A', par.cutout_molded_cushion_A[1])\r\n                        mprog.param_change('cutout_molded_cushion', 'B', par.cutout_molded_cushion_B[1])\r\n                        mprog.param_change('cutout_molded_cushion', 'D', par.cutout_molded_cushion_L[1])\r\n                    mprog.param_change('cutout_molded_cushion', 'i',\r\n                                       par.normal_cutout_molded_cushion_length_quantity[stamping_press_type])\r\n                    mprog.param_change('cutout_molded_cushion', 'j',\r\n                                       par.normal_cutout_molded_cushion_width_quantity[stamping_press_type])\r\n                    mprog.param_change('cutout_molded_cushion', 'width_gap', par.normal_cutout_molded_cushion_length_gap[stamping_press_type])\r\n                    mprog.param_change('cutout_molded_cushion', 'length_gap', par.normal_cutout_molded_cushion_width_gap[stamping_press_type])\r\n                    mprog.param_change('cutout_molded_cushion', 'X', -((par.plate_all_parameter['A'] + par.lv[0]) / 2 - (par.normal_cutout_molded_cushion_length_quantity[stamping_press_type] - 1) * par.normal_cutout_molded_cushion_width_gap[stamping_press_type] / 2))\r\n                    print((par.plate_all_parameter['A'] + par.lv[0]) / 2 - (par.normal_cutout_molded_cushion_length_quantity[stamping_press_type] - 1) * par.normal_cutout_molded_cushion_width_gap[stamping_press_type] / 2)\r\n\r\n                    mprog.param_change('cutout_molded_cushion', 'Y',\r\n                                       (par.plate_all_parameter['B'] / 2 -\r\n                                       (par.normal_cutout_molded_cushion_length_gap[stamping_press_type] *\r\n                                        (par.normal_cutout_molded_cushion_width_quantity[stamping_press_type] - 1)) / 2))\r\n                    par.plate_normal_name[0] = 'cutout_molded_cushion'\r\n\r\n                mprog.Update()\r\n                mprog.save_file_stp(path, par.plate_normal_name[0])\r\n                mprog.save_stpfile_part(path, par.plate_normal_name[0])\r\n                tT.copybody()\r\n                tT.switch_to_window_by_name('plate.CATPart')\r\n                # 計算下料孔變數名稱\r\n                if len(par.total_position_y) != 0:\r\n                    position_y = len(par.total_position_y)\r\n                else:\r\n                    position_y = 0\r\n                if len(par.total_position_x) != 0:\r\n                    position_x = len(par.total_position_x)\r\n                else:\r\n                    position_x = 0\r\n                total_turn = position_y + position_x\r\n                print(total_turn)\r\n                # 移除下料孔\r\n                tT.pastebody(total_turn, par.plate_normal_name[0])\r\n                tT.removebody(total_turn, par.plate_normal_name[0])\r\n                mprog.Update()\r\n                tT.switch_to_window_by_name(par.plate_normal_name[0] + \".CATPart\")\r\n                mprog.close_window()\r\n\r\n\r\n# T溝外型尺寸\r\n# class pad_dimension(QtWidgets.QWidget):\r\n#     def __init__(self, stamping_press_type):\r\n#         super().__init__()\r\n#         self.ui = pad_dimension_Form()\r\n#         self.ui.setupUi(self)\r\n#         self.setWindowTitle('平板')\r\n#         self.ui.setup_value.clicked.connect(lambda :self.setup(stamping_press_type))\r\n#         self.ui.escape.clicked.connect(lambda :self.show_pad_secend_windows(stamping_press_type))\r\n#         self.ui.reset_value.clicked.connect(self.reset)\r\n#\r\n#     def setup(self, stamping_press_type):\r\n#         t_a = str(self.ui.A.text())\r\n#         t_b = str(self.ui.B.text())\r\n#         t_c = str(self.ui.C.text())\r\n#         t_d = str(self.ui.D.text())\r\n#         par.t_all_dimension = [t_a, t_b, t_c, t_d]\r\n#         print(\"T溝外型尺寸:\", par.t_all_dimension)\r\n#         self.hide()\r\n#         self.nw = pad_secend_windows(stamping_press_type)\r\n#         self.nw.show()\r\n#\r\n#     def reset(self):\r\n#         self.ui.A.clear()\r\n#         self.ui.B.clear()\r\n#         self.ui.C.clear()\r\n#         self.ui.D.clear()\r\n#\r\n#     def show_pad_secend_windows(self, stamping_press_type):\r\n#         self.hide()\r\n#         self.nw = pad_secend_windows(stamping_press_type)\r\n#         self.nw.show()\r\n\r\n\r\nclass t_machining(QWidget):\r\n    def __init__(self, stamping_press_type, plate_lenght, plate_width):\r\n        super().__init__()\r\n        self.ui = pad_machining_Form()\r\n        self.ui.setupUi(self)\r\n        self.setWindowTitle('平板加工設定')\r\n        # 橫向T溝\r\n        self.ui.t_slot_table_h.verticalHeader().setVisible(False)\r\n        self.ui.t_slot_table_h.horizontalHeader().setVisible(False)\r\n        self.ui.t_slot_table_h.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)\r\n        self.ui.t_slot_table_h.setEditTriggers(QAbstractItemView.AllEditTriggers)\r\n        self.t_slot_table_h_setup()\r\n        self.ui.t_slot_h_number.textChanged.connect(self.check_slot_number)\r\n        self.table_h_combo_boxes = {}\r\n        # 縱向T溝\r\n        self.ui.t_slot_table_v.verticalHeader().setVisible(False)\r\n        self.ui.t_slot_table_v.horizontalHeader().setVisible(False)\r\n        self.ui.t_slot_table_v.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)\r\n        self.ui.t_slot_table_v.setEditTriggers(QAbstractItemView.AllEditTriggers)\r\n        self.t_slot_table_v_setup()\r\n        self.ui.t_slot_v_number.textChanged.connect(self.check_slot_v_number)\r\n        self.table_v_combo_boxes = {}\r\n        # 確定按鈕\r\n        self.ui.setup.clicked.connect(lambda: self.setup(stamping_press_type))\r\n        # 重製按鈕\r\n        self.ui.reset.clicked.connect(self.reset)\r\n        # 重新排列\r\n        self.ui.rearrange_the_order.clicked.connect(lambda: self.rearrange_the_order(plate_lenght, plate_width))\r\n\r\n    def change_table_h_clear_table(self):\r\n        while self.ui.t_slot_table_h.rowCount() > 1:\r\n            self.ui.t_slot_table_h.removeRow(1)\r\n\r\n    def check_slot_number(self, current_value):\r\n        try:\r\n            if current_value == '':\r\n                current_value = 0\r\n            current_value = int(current_value)\r\n            self.add_rows_to_table(current_value)  # 插入新行\r\n        except ValueError:\r\n            print(\"Invalid input. Please enter a valid number\")\r\n\r\n    def add_rows_to_table(self, num_rows):\r\n        self.change_table_h_clear_table()  # 清除表格内容\r\n        col_count = self.ui.t_slot_table_h.columnCount()\r\n        for row in range(num_rows):\r\n            row_position = self.ui.t_slot_table_h.rowCount()\r\n            self.ui.t_slot_table_h.insertRow(row_position)\r\n            for col in range(col_count):\r\n                item = QTableWidgetItem(\"H\" + str(row_position) if (row_position == 0 or col == 0) else \"\")\r\n                if col == 0 or row_position == 0:\r\n                    item.setFlags(item.flags() & ~Qt.ItemIsEditable)\r\n                else:\r\n                    # 其他单元格默认不可编辑，会在后续根据条件进行修改\r\n                    item.setFlags(item.flags() | Qt.ItemIsEditable)\r\n                self.ui.t_slot_table_h.setItem(row_position, col, item)\r\n            # 创建 QComboBox 并添加到新行的第三列\r\n            combo_box = QComboBox()\r\n            combo_box.addItem(\"\")\r\n            combo_box.addItem(\"貫穿\")\r\n            combo_box.addItem(\"分段\")\r\n            combo_box.currentIndexChanged.connect(lambda index, row=row_position: self.combo_box_changed(row, index))\r\n            self.ui.t_slot_table_h.setCellWidget(row_position, 2, combo_box)\r\n            self.table_h_combo_boxes[row_position] = combo_box  # 存储QComboBox\r\n            # 初始化选项状态为不可编辑\r\n            for col in range(3, 5):\r\n                item = QTableWidgetItem(\"\")\r\n                item.setFlags(item.flags() & ~Qt.ItemIsEditable)\r\n                color = QColor(192, 192, 192)\r\n                brush = QBrush(color)\r\n                item.setBackground(brush)\r\n                self.ui.t_slot_table_h.setItem(row_position, col, item)\r\n\r\n    def combo_box_changed(self, row, index):\r\n        combo_box = self.table_h_combo_boxes.get(row)\r\n        if combo_box:\r\n            if index == 2:  # 如果选择了\"分段\"\r\n                self.set_editable_cells(row, is_editable=True)\r\n            else:\r\n                self.set_editable_cells(row, is_editable=False)\r\n\r\n    def set_editable_cells(self, row, is_editable=True):\r\n        for col in range(3, 5):\r\n            item = self.ui.t_slot_table_h.item(row, col)\r\n            if item:\r\n                if is_editable and row != 0:\r\n                    item.setFlags(item.flags() | Qt.ItemIsEditable)\r\n                    item.setBackground(QBrush(QColor(255, 255, 255)))\r\n                else:\r\n                    item.setFlags(item.flags() & ~Qt.ItemIsEditable)\r\n                    item.setBackground(QBrush(QColor(192, 192, 192)))\r\n\r\n    def t_slot_table_h_setup(self):\r\n        # 第一行\r\n        for col in range(7):  # 假设有7列\r\n            newItem = QTableWidgetItem(\r\n                \"編號\" if col == 0 else \"位置(Y)\" if col == 1 else \"形式\" if col == 2 else \"LL\" if col == 3 else \"LR\" if col == 4 else \"SL\" if col == 5 else \"SR\")\r\n            newItem.setTextAlignment(Qt.AlignCenter)  # 可以根据需要设置文本对齐方式\r\n            self.ui.t_slot_table_h.setItem(0, col, newItem)\r\n            newItem.setFlags(newItem.flags() & ~Qt.ItemIsEditable)  # 移除可编辑标志\r\n\r\n    def combo_box_changed_v(self, row, index):\r\n        combo_box = self.table_v_combo_boxes.get(row)\r\n        if combo_box:\r\n            if index == 2:\r\n                self.set_editable_v_cells(row, is_editable=True)\r\n            else:\r\n                self.set_editable_v_cells(row, is_editable=False)\r\n\r\n    def change_table_v_clear_table(self):\r\n        while self.ui.t_slot_table_v.rowCount() > 1:\r\n            self.ui.t_slot_table_v.removeRow(1)\r\n\r\n    def check_slot_v_number(self, current_value):\r\n        try:\r\n            if current_value == '':\r\n                current_value = 0\r\n            current_value = int(current_value)\r\n            self.add_rows_to_table_v(current_value)\r\n        except ValueError:\r\n            print(\"Invalid input. Please enter a valid number\")\r\n\r\n    def add_rows_to_table_v(self, num_rows):\r\n        self.change_table_v_clear_table()\r\n        col_count = self.ui.t_slot_table_v.columnCount()\r\n        for row in range(num_rows):\r\n            row_position = self.ui.t_slot_table_v.rowCount()\r\n            self.ui.t_slot_table_v.insertRow(row_position)\r\n            for col in range(col_count):\r\n                item = QTableWidgetItem(\"V\" + str(row_position) if (row_position == 0 or col == 0) else \"\")\r\n                if col == 0 or row_position == 0:\r\n                    item.setFlags(item.flags() & ~Qt.ItemIsEditable)\r\n                else:\r\n                    item.setFlags(item.flags() | Qt.ItemIsEditable)\r\n                self.ui.t_slot_table_v.setItem(row_position, col, item)\r\n\r\n            # 创建 QComboBox 并添加到新行的第三列\r\n            combo_box = QComboBox()\r\n            combo_box.addItem(\"\")\r\n            combo_box.addItem(\"貫穿\")\r\n            combo_box.addItem(\"分段\")\r\n            combo_box.currentIndexChanged.connect(lambda index, row=row_position: self.combo_box_changed_v(row, index))\r\n            self.ui.t_slot_table_v.setCellWidget(row_position, 2, combo_box)\r\n            self.table_v_combo_boxes[row_position] = combo_box  # 存储QComboBox\r\n            # 初始化选项状态为不可编辑\r\n            for col in range(3, 5):\r\n                item = QTableWidgetItem(\"\")\r\n                item.setFlags(item.flags() & ~Qt.ItemIsEditable)\r\n                color = QColor(192, 192, 192)\r\n                brush = QBrush(color)\r\n                item.setBackground(brush)\r\n                self.ui.t_slot_table_v.setItem(row_position, col, item)\r\n\r\n    def set_editable_v_cells(self, row, is_editable=True):\r\n        for col in range(3, 5):\r\n            item = self.ui.t_slot_table_v.item(row, col)\r\n            if item:\r\n                if is_editable and row != 0:\r\n                    item.setFlags(item.flags() | Qt.ItemIsEditable)\r\n                    item.setBackground(QBrush(QColor(255, 255, 255)))\r\n                else:\r\n                    item.setFlags(item.flags() & ~Qt.ItemIsEditable)\r\n                    item.setBackground(QBrush(QColor(192, 192, 192)))\r\n\r\n    def t_slot_table_v_setup(self):\r\n        # 第一行\r\n        for col in range(7):  # 假設有7列\r\n            newItem = QTableWidgetItem(\r\n                \"編號\" if col == 0 else \"位置(X)\" if col == 1 else \"形式\" if col == 2 else \"LF\" if col == 3 else \"LB\" if col == 4 else \"SF\" if col == 5 else \"SB\")\r\n            newItem.setTextAlignment(Qt.AlignCenter)  # 可以根據需要設定文本對齊方式\r\n            self.ui.t_slot_table_v.setItem(0, col, newItem)\r\n            newItem.setFlags(newItem.flags() & ~Qt.ItemIsEditable)  # 移除可編輯標誌\r\n\r\n    def setup(self, stamping_press_type):\r\n        self.hide()\r\n        self.nw = pad_secend_windows(stamping_press_type)\r\n        self.nw.show()\r\n\r\n    def rearrange_the_order(self, plate_lenght, plate_width):\r\n        par.total_position_y.clear()\r\n        par.total_t_slot_h_type.clear()\r\n        par.total_LL.clear()\r\n        par.total_LR.clear()\r\n        par.total_SL.clear()\r\n        par.total_SR.clear()\r\n        par.total_position_x.clear()\r\n        par.total_t_slot_v_type.clear()\r\n        par.total_LF.clear()\r\n        par.total_LB.clear()\r\n        par.total_SF.clear()\r\n        par.total_SB.clear()\r\n\r\n        if self.ui.t_slot_table_h.rowCount() != 0:\r\n            for row in range(1, self.ui.t_slot_table_h.rowCount()):\r\n                position_y = self.ui.t_slot_table_h.item(row, 1).text()\r\n                t_slot_type = self.ui.t_slot_table_h.cellWidget(row, 2).currentText()\r\n                LL = self.ui.t_slot_table_h.item(row, 3).text()\r\n                LR = self.ui.t_slot_table_h.item(row, 4).text()\r\n                SL = self.ui.t_slot_table_h.item(row, 5).text()\r\n                SR = self.ui.t_slot_table_h.item(row, 6).text()\r\n                par.total_position_y.append(position_y)\r\n                par.total_t_slot_h_type.append(t_slot_type)\r\n                par.total_LL.append(LL)\r\n                par.total_LR.append(LR)\r\n                par.total_SL.append(SL)\r\n                par.total_SR.append(SR)\r\n            par.total_position_y = [int(x) for x in par.total_position_y]\r\n            position_y_change_position = sorted(enumerate(par.total_position_y), key=lambda x: x[1], reverse=True)\r\n            print('position_y_change_position:', position_y_change_position)\r\n            rearrange = [position[0] for position in position_y_change_position]\r\n            print('rearrange:', rearrange)\r\n            par.total_position_y = [par.total_position_y[order_position] for order_position in rearrange]\r\n            par.total_LL = [par.total_LL[order_position] for order_position in rearrange]\r\n            par.total_LR = [par.total_LR[order_position] for order_position in rearrange]\r\n            par.total_SL = [par.total_SL[order_position] for order_position in rearrange]\r\n            par.total_SR = [par.total_SR[order_position] for order_position in rearrange]\r\n            par.total_t_slot_h_type = [par.total_t_slot_h_type[order_position] for order_position in rearrange]\r\n\r\n            print('total_position_y:', par.total_position_y)\r\n            print('total_t_slot_h_type:', par.total_t_slot_h_type)\r\n            print('total_LL:', par.total_LL)\r\n            print('total_LR:', par.total_LR)\r\n            print('total_SL:', par.total_SL)\r\n            print('total_SR:', par.total_SR)\r\n            for position, item in enumerate(par.total_position_y):\r\n                # 將整數轉換為字串，然後設定為表格的項目文本\r\n                item_text = str(item)\r\n                table_item = QtWidgets.QTableWidgetItem(item_text)\r\n                self.ui.t_slot_table_h.setItem(position + 1, 1, table_item)\r\n            for position, item in enumerate(par.total_LL):\r\n                item = QtWidgets.QTableWidgetItem(item)\r\n                self.ui.t_slot_table_h.setItem(position + 1, 3, item)\r\n            for position, item in enumerate(par.total_LR):\r\n                item = QtWidgets.QTableWidgetItem(item)\r\n                self.ui.t_slot_table_h.setItem(position + 1, 4, item)\r\n            for position, item in enumerate(par.total_SL):\r\n                item = QtWidgets.QTableWidgetItem(item)\r\n                self.ui.t_slot_table_h.setItem(position + 1, 5, item)\r\n            for position, item in enumerate(par.total_SR):\r\n                item = QtWidgets.QTableWidgetItem(item)\r\n                self.ui.t_slot_table_h.setItem(position + 1, 6, item)\r\n            for position, item in enumerate(par.total_t_slot_h_type):\r\n                combo_box = self.ui.t_slot_table_h.cellWidget(position + 1, 2)  # 從表格中獲取 ComboBox\r\n                combo_box.setCurrentText(item)\r\n                self.combo_box_changed(position + 1, combo_box.currentIndex())\r\n\r\n        if self.ui.t_slot_table_v.rowCount() != 0:\r\n            for row in range(1, self.ui.t_slot_table_v.rowCount()):\r\n                position_x = self.ui.t_slot_table_v.item(row, 1).text()\r\n                t_slot_type = self.ui.t_slot_table_v.cellWidget(row, 2).currentText()\r\n                LF = self.ui.t_slot_table_v.item(row, 3).text()\r\n                LB = self.ui.t_slot_table_v.item(row, 4).text()\r\n                SF = self.ui.t_slot_table_v.item(row, 5).text()\r\n                SB = self.ui.t_slot_table_v.item(row, 6).text()\r\n                par.total_position_x.append(position_x)\r\n                par.total_t_slot_v_type.append(t_slot_type)\r\n                par.total_LF.append(LF)\r\n                par.total_LB.append(LB)\r\n                par.total_SF.append(SF)\r\n                par.total_SB.append(SB)\r\n            par.total_position_x = [int(x) for x in par.total_position_x]\r\n            position_x_change_position = sorted(enumerate(par.total_position_x), key=lambda x: x[1], reverse=True)\r\n            print('position_x_change_position:', position_x_change_position)\r\n            rearrange = [position[0] for position in position_x_change_position]\r\n            print('rearrange:', rearrange)\r\n            par.total_position_x = [par.total_position_x[order_position] for order_position in rearrange]\r\n            par.total_LF = [par.total_LF[order_position] for order_position in rearrange]\r\n            par.total_LB = [par.total_LB[order_position] for order_position in rearrange]\r\n            par.total_SF = [par.total_SF[order_position] for order_position in rearrange]\r\n            par.total_SB = [par.total_SB[order_position] for order_position in rearrange]\r\n            par.total_t_slot_v_type = [par.total_t_slot_v_type[order_position] for order_position in rearrange]\r\n            print('total_position_x:', par.total_position_x)\r\n            print('total_t_slot_v_type:', par.total_t_slot_v_type)\r\n            print('total_LF:', par.total_LF)\r\n            print('total_LB:', par.total_LB)\r\n            print('total_SF:', par.total_SF)\r\n            print('total_SB:', par.total_SB)\r\n            for position, item in enumerate(par.total_position_x):\r\n                # 將整數轉換為字串，然後設定為表格的項目文本\r\n                item_text = str(item)\r\n                table_item = QtWidgets.QTableWidgetItem(item_text)\r\n                self.ui.t_slot_table_v.setItem(position + 1, 1, table_item)\r\n            for position, item in enumerate(par.total_LF):\r\n                item = QtWidgets.QTableWidgetItem(item)\r\n                self.ui.t_slot_table_v.setItem(position + 1, 3, item)\r\n            for position, item in enumerate(par.total_LB):\r\n                item = QtWidgets.QTableWidgetItem(item)\r\n                self.ui.t_slot_table_v.setItem(position + 1, 4, item)\r\n            for position, item in enumerate(par.total_SF):\r\n                item = QtWidgets.QTableWidgetItem(item)\r\n                self.ui.t_slot_table_v.setItem(position + 1, 5, item)\r\n            for position, item in enumerate(par.total_SB):\r\n                item = QtWidgets.QTableWidgetItem(item)\r\n                self.ui.t_slot_table_v.setItem(position + 1, 6, item)\r\n            for position, item in enumerate(par.total_t_slot_v_type):\r\n                combo_box = self.ui.t_slot_table_v.cellWidget(position + 1, 2)\r\n                combo_box.setCurrentText(item)\r\n                self.combo_box_changed_v(position + 1, combo_box.currentIndex())\r\n\r\n            # 檢查T溝是否超出界線\r\n            # T溝尺寸與平板邊緣>=50mm\r\n            if len(par.total_position_y) != 0:\r\n                if par.total_position_y[0] + (par.t_all_dimension[1] / 2) > (plate_width / 2) - 50:\r\n                    self.show_alert('橫向T溝位置(Y) H1 與平板邊緣過近')\r\n                if par.total_position_y[-1] - (par.t_all_dimension[1] / 2) <= (-plate_width / 2) + 50:\r\n                    self.show_alert('橫向T溝位置(Y) H' + str(len(par.total_position_y)) + ' 與平板邊緣過近')\r\n\r\n                # T溝與T溝之間間距需>=50mm\r\n                for turn in range(len(par.total_position_y) - 1):\r\n                    third_value = abs(par.total_position_y[turn] - par.total_position_y[turn + 1]) - \\\r\n                                  par.t_all_dimension[1]\r\n                    if third_value <= 50:\r\n                        self.show_alert('橫向T溝位置(Y) H' + str(turn + 1) + ' 與 H' + str(turn + 2) + ' 間距過近')\r\n                    print('third_value:', third_value)\r\n\r\n            if len(par.total_position_x) != 0:\r\n                if par.total_position_x[0] + (par.t_all_dimension[0] / 2) > (plate_lenght / 2) - 50:\r\n                    self.show_alert('縱向T溝位置(X) V1 與平板邊緣過近')\r\n                if par.total_position_x[-1] - (par.t_all_dimension[0] / 2) <= (-plate_lenght / 2) + 50:\r\n                    self.show_alert('縱向T溝位置(X) V' + str(len(par.total_position_x)) + ' 與平板邊緣過近')\r\n\r\n                # T溝與T溝之間間距需>=50mm\r\n                for turn in range(len(par.total_position_x) - 1):\r\n                    third_value = abs(par.total_position_x[turn] - par.total_position_x[turn + 1]) - \\\r\n                                  par.t_all_dimension[0]\r\n                    if third_value <= 50:\r\n                        self.show_alert('縱向T溝位置(X) V' + str(turn + 1) + ' 與 V' + str(turn + 2) + ' 間距過近')\r\n                    print('third_value:', third_value)\r\n\r\n    def show_alert(self, alert):\r\n        QMessageBox.about(self, \"警告\", alert)\r\n\r\n    def reset(self):\r\n        self.ui.t_slot_h_number.clear()\r\n        self.ui.t_slot_v_number.clear()\r\n        par.total_position_y.clear()\r\n        par.total_t_slot_h_type.clear()\r\n        par.total_LL.clear()\r\n        par.total_LR.clear()\r\n        par.total_SL.clear()\r\n        par.total_SR.clear()\r\n        par.total_position_x.clear()\r\n        par.total_t_slot_v_type.clear()\r\n        par.total_LF.clear()\r\n        par.total_LB.clear()\r\n        par.total_SF.clear()\r\n        par.total_SB.clear()\r\n\r\n\r\n# 下料孔設定介面\r\nclass cutout_hole_machining(QtWidgets.QWidget):\r\n    def __init__(self, stamping_press_type):\r\n        super().__init__()\r\n        self.ui = cutout_hole_machining_form()\r\n        self.ui.setupUi(self)\r\n        self.setWindowTitle('下料口位置')\r\n        if par.plate_hole_type[0] != '無孔':\r\n            if par.plate_hole_type[0] == '圓孔':\r\n                self.ui.picture.setPixmap(QtGui.QPixmap(\"feeding_hole_A.png\"))\r\n            elif par.plate_hole_type[0] == '方孔':\r\n                self.ui.picture.setPixmap(QtGui.QPixmap(\"feeding_hole_B.png\"))\r\n            elif par.plate_hole_type[0] == '漏斗型':\r\n                self.ui.picture.setPixmap(QtGui.QPixmap(\"feeding_hole_C.png\"))\r\n        self.ui.setup.clicked.connect(lambda: self.setup(stamping_press_type))\r\n        self.ui.esc.clicked.connect(lambda: self.esc(stamping_press_type))\r\n\r\n    def setup(self, stamping_press_type):\r\n        par.cutout_hole_machining_X = self.ui.X.text()\r\n        par.cutout_hole_machining_Y = self.ui.Y.text()\r\n        if par.cutout_hole_machining_X == '':\r\n            par.cutout_hole_machining_X = 0\r\n        if par.cutout_hole_machining_Y == '':\r\n            par.cutout_hole_machining_Y = 0\r\n        par.cutout_hole_machining_X = int(par.cutout_hole_machining_X)\r\n        par.cutout_hole_machining_Y = int(par.cutout_hole_machining_Y)\r\n\r\n        excel_cutout_limit = epc.ExcelOp('平板', '下料孔界線')\r\n        excel_cutout_limit.get_cutout_limit(stamping_press_type)\r\n        print(par.cutout_hole_machining_X, par.cutout_hole_machining_Y, par.cutout_all_limit['X'],\r\n              par.cutout_all_limit['Y'])\r\n        if par.plate_hole_type[0] == '圓孔':\r\n            if abs(par.cutout_hole_machining_X) + int(par.cutout_part_dimension[0]) / 2 + 10 >= par.cutout_all_limit[\r\n                'X'] / 2 or abs(par.cutout_hole_machining_Y) + int(par.cutout_part_dimension[0]) / 2 + 10 >= \\\r\n                    par.cutout_all_limit['Y'] / 2:\r\n                print('error')\r\n            else:\r\n                self.esc(stamping_press_type)\r\n        elif par.plate_hole_type[0] == '方孔':\r\n            if abs(par.cutout_hole_machining_X) + int(par.cutout_part_dimension[0]) / 2 + 10 >= par.cutout_all_limit[\r\n                'X'] / 2 or abs(par.cutout_hole_machining_Y) + int(par.cutout_part_dimension[0]) / 2 + 10 >= \\\r\n                    par.cutout_all_limit['Y'] / 2:\r\n                print('error')\r\n            else:\r\n                self.esc(stamping_press_type)\r\n        elif par.plate_hole_type[0] == '漏斗型':\r\n            if abs(par.cutout_hole_machining_X) + int(par.cutout_part_dimension[0]) / 2 + 10 >= par.cutout_all_limit[\r\n                'X'] / 2 or abs(par.cutout_hole_machining_Y) + int(par.cutout_part_dimension[0]) / 2 + 10 >= \\\r\n                    par.cutout_all_limit['Y'] / 2:\r\n                print('error')\r\n            else:\r\n                self.esc(stamping_press_type)\r\n        else:\r\n            self.esc(stamping_press_type)\r\n\r\n    def esc(self, stamping_press_type):\r\n        self.hide()\r\n        self.nw = pad_secend_windows(stamping_press_type)\r\n        self.nw.show()\r\n\r\n\r\n# class remove_machining(QtWidgets.QWidget):\r\n#     def __init__(self, stamping_press_type):\r\n#         super().__init__()\r\n#         self.ui = pad_feeding_hole_Form()\r\n#         self.ui.setupUi(self)\r\n#         self.setWindowTitle('下料口加工設定')\r\n#         self.ui.escape.clicked.connect(self.show_pad_secend_windows)\r\n#         self.ui.setup.clicked.connect(lambda :self.setup(stamping_press_type))\r\n#         self.ui.reset.clicked.connect(self.clean_data)\r\n#\r\n#     def setup(self, stamping_press_type):\r\n#         X = self.ui.X.text()\r\n#         Y = self.ui.Y.text()\r\n#         par.feeding_hole_position = [X, Y]\r\n#         print(\"下料口位置:\", par.feeding_hole_position)\r\n#         self.hide()\r\n#         self.nw = pad_secend_windows(stamping_press_type)\r\n#         self.nw.show()\r\n#\r\n#     def clean_data(self):\r\n#         self.ui.X.clear()\r\n#         self.ui.Y.clear()\r\n#\r\n#     def show_pad_secend_windows(self, stamping_press_type):\r\n#         self.hide()\r\n#         self.nw = pad_secend_windows(stamping_press_type)\r\n#         self.nw.show()\r\n\r\n\r\nclass FolderManager:\r\n    _instance = None\r\n\r\n    def __new__(cls, create_name):\r\n        if cls._instance is None:\r\n            cls._instance = super(FolderManager, cls).__new__(cls)\r\n            cls._instance.init_folders(create_name)\r\n        return cls._instance\r\n\r\n    def init_folders(self, create_name):\r\n        time_now = datetime.datetime.now()\r\n        dir_name = '{}_{}_{}_{}_{}'.format(create_name, time_now.day, time_now.hour, time_now.minute, time_now.second)\r\n        desktop = os.path.join(os.path.join(os.environ['USERPROFILE']), 'Desktop')\r\n        path = desktop + '\\\\' + dir_name\r\n        os.mkdir(path)\r\n        self.path = path\r\n\r\n    # 添加其他管理資料夾的方法，如machining、welding等\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    QtCore.QCoreApplication.setAttribute(QtCore.Qt.AA_EnableHighDpiScaling)  # 自適應屏幕分辨率\r\n    app = QtWidgets.QApplication([])\r\n    window = main()\r\n    window.show()\r\n    sys.exit(app.exec_())\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SYEI_stamping_press_system/DEMO.py b/SYEI_stamping_press_system/DEMO.py
--- a/SYEI_stamping_press_system/DEMO.py	
+++ b/SYEI_stamping_press_system/DEMO.py	
@@ -330,14 +330,16 @@
 
     def start(self):
         type = self.ui.window_main_table.cellWidget(4, 3).currentText()
-        travel_type = str(self.ui.window_main_table.cellWidget(4, 5).currentText())
-        specifications_travel_value = str(self.ui.lineEdit_5.text())
-        specifications_close_working_height_value = str(self.ui.lineEdit_2.text())
-        close_working_height = str(self.ui.label_9.text())
+        travel_type = str(self.ui.window_main_table.cellWidget(5, 3).currentText())
+        specifications_travel_value = str(self.ui.window_main_table.item(9, 3).text())
+        specifications_travel_value = 250
+        specifications_close_working_height_value = str(self.ui.window_main_table.item(11, 3).text())
+        specifications_close_working_height_value = 450
+        # close_working_height = str(self.ui.label_9.text())
         # delta = str(self.ui.lineEdit_4.text())
-        processing = str(self.ui.comboBox.currentText())
-        print(type, travel_type, travel, specifications_travel_value, specifications_close_working_height_value,
-              close_working_height)
+        # processing = str(self.ui.comboBox.currentText())
+        processing = '是'
+        print(type, travel_type, specifications_travel_value, specifications_close_working_height_value)
         self.create_dir(type)
         if specifications_travel_value == "":
             self.specifications_travel_value = 0
@@ -362,7 +364,7 @@
 
     def show_pad_secend_windows(self):
         window_table = self.ui.window_main_table
-        type = str(window_table.item(4, 5).currentText())
+        type = self.ui.window_main_table.cellWidget(4, 3).currentText()
         travel_type = str(window_table.item().currentText())
         # processing = str(self.ui.comboBox.currentText())
         self.stamping_press_type, self.travel_type = self.choos(type, travel_type)
@@ -371,7 +373,7 @@
         self.nw.show()
 
     def choose_stamping_press_type(self):
-        type = str(self.ui.window_main_table.item(4, 5).currentText())
+        type = self.ui.window_main_table.cellWidget(4, 3).currentText()
         if type == "SN1-25":
             stamping_press_type = 0
         elif type == "SN1-35":
Index: SYEI_stamping_press_system/Assmebly_design.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import main_program as mprog\r\nimport excel_parameter_change as epc\r\nimport STP_input as S_i\r\ndef assembly(stamping_press_type, apv, path, alpha, beta, zeta):\r\n    #excel匯入\r\n    excel = epc.ExcelOp('組立尺寸', 'Assembly_value')\r\n    try:\r\n        assmebly_par = excel.get_assmebly_sheet_par(stamping_press_type)\r\n        print('Assembly_value Parameter change success')\r\n    except BaseException:\r\n        print('Assembly_value Parameter change error')\r\n\r\n    excel = epc.ExcelOp('組立尺寸', 'STP_Assembly_value')\r\n    try:\r\n        S_assmebly_par = excel.get_assmebly_sheet_par(stamping_press_type)\r\n        print('STP_Assembly_value Parameter change success')\r\n    except BaseException:\r\n        print('STP_Assembly_value Parameter change error')\r\n    #新增組立檔\r\n    mprog.assembly_create()\r\n    #將零件匯入組立檔\r\n    part = epc.ExcelOp('尺寸整理表', '沖床機架零件清單')\r\n    #讀取零件匯入數量\r\n    part_name, part_quantity = part.get_assmebly_quantity(stamping_press_type)\r\n    for name in range(len(part_name)):\r\n        for x in range(int(part_quantity[name])):\r\n            if part_name[name] == 'PANEL' or part_name[name] == 'CON_ROD' or part_name[name] == 'CON_ROD_BASE' or part_name[name] == 'CON_ROD_CAP' \\\r\n                    or part_name[name] == 'INVERTERBRACKET' or part_name[name] == 'POINTER' or part_name[name] == 'COVER' or part_name[name] == 'PLUG'\\\r\n                    or part_name[name] == 'feeding_shaft_cover' or part_name[name] == 'OIL_LEVEL_GAUGE' or part_name[name] == 'slide_gib'\\\r\n                    or part_name[name] == 'ELECTRIC_BOX_PLATE'or part_name[name] == 'MOUNT_FILTER'or part_name[name] == 'CONTROL_PANEL' or part_name[name] == 'PANEL_BOX'\\\r\n                    or part_name[name] == 'PANEL_BOX_BRACKET' or part_name[name] == 'ELECTRIC_BOX'or part_name[name] == 'GUARD_FLYWHEEL'or part_name[name] == 'NAME_PLATE'\\\r\n                    or part_name[name] == 'TRADEMARK_NAMEPLATE' or part_name[name] == 'OPERATION_BOX':\r\n                # 讀取其餘STP檔\r\n                S_i.Assmebly(part_name[name], path + '\\\\' + 'machining', stamping_press_type)\r\n                continue\r\n            else:\r\n                mprog.import_file_Part(path + '\\\\' + 'machining', part_name[name])\r\n    #定義基準零件\r\n    mprog.base_lock('FRAME1.1', 'FRAME1.1', 0)\r\n    mprog.add_offset_assembly('FRAME2.1', 'FRAME1.1', 0, 'XY plane', 0, 4)\r\n    mprog.add_offset_assembly('FRAME2.1', 'FRAME1.1', 0, 'YZ plane', 0, 5)\r\n    mprog.add_offset_assembly('FRAME2.1', 'FRAME1.1', -(apv['FRAME22']['D']+(apv['FRAME1']['CC']/2)+(apv['FRAME2']['CC']/2)), 'ZX plane', 0, 6)\r\n    mprog.add_offset_assembly('FRAME3.1', 'FRAME1.1', -(apv['FRAME1']['A'] - apv['FRAME3']['A'])-0.5*alpha-beta, 'XY plane', 0, 43)\r\n    mprog.add_offset_assembly('FRAME3.1', 'FRAME1.1', -(apv['FRAME1']['F'] - assmebly_par['Ass_F'])-zeta, 'YZ plane', 0, 44)\r\n    mprog.add_offset_assembly('FRAME3.1', 'FRAME1.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME3']['B']), 'ZX plane', 0,\r\n                              45)\r\n    mprog.add_offset_assembly('FRAME4.1', 'FRAME2.1', -(apv['FRAME2']['A'] - apv['FRAME4']['A'])-0.5*alpha-beta, 'XY plane', 0, 46)\r\n    mprog.add_offset_assembly('FRAME4.1', 'FRAME2.1', -(apv['FRAME2']['F'] - assmebly_par['Ass_G'])-zeta, 'YZ plane', 0, 47)\r\n    mprog.add_offset_assembly('FRAME4.1', 'FRAME2.1', apv['FRAME2']['CC'] / 2, 'ZX plane', 0, 48)\r\n    mprog.add_offset_assembly('FRAME5.1', 'FRAME2.1',\r\n                              -(apv['FRAME2']['A'] - assmebly_par['Ass_K'])-0.5*alpha-beta, 'XY plane', 0, 70)\r\n    mprog.add_offset_assembly('FRAME5.1', 'FRAME2.1', apv['FRAME5']['A'] + assmebly_par['Ass_L'] + apv['FRAME32']['C'],\r\n                              'YZ plane', 1, 71)\r\n    mprog.add_offset_assembly('FRAME5.1', 'FRAME2.1', apv['FRAME2']['CC'] / 2, 'ZX plane', 0, 72)\r\n    if stamping_press_type == 0 or stamping_press_type == 1 or stamping_press_type == 2 or stamping_press_type == 3:\r\n        mprog.add_offset_assembly('FRAME7.1', 'FRAME2.1',\r\n                              -((apv['FRAME2']['E'] - apv['FRAME2']['DD']) - apv['FRAME7']['A'] - apv['FRAME7']['Y']),\r\n                              'XY plane', 0, 25)\r\n    else:\r\n        mprog.add_offset_assembly('FRAME7.1', 'FRAME2.1', apv['FRAME7']['DD'], 'XY plane', 0, 25)\r\n    mprog.add_offset_assembly('FRAME7.1', 'FRAME2.1', -(apv['FRAME2']['B'] - assmebly_par['Ass_B'])-zeta, 'YZ plane', 0, 26)\r\n    if stamping_press_type == 0 or stamping_press_type == 1 or stamping_press_type == 2 or stamping_press_type == 3:\r\n        mprog.add_offset_assembly('FRAME7.1', 'FRAME2.1', assmebly_par['Ass_E'], 'ZX plane', 0, 27)\r\n    else:\r\n        mprog.add_offset_assembly('FRAME7.1', 'FRAME2.1',apv['FRAME2']['CC']/2 , 'ZX plane', 0, 27)\r\n    mprog.add_offset_assembly('FRAME8.1', 'FRAME1.1', -assmebly_par['Ass_D'], 'XY plane', 0, 37)\r\n    mprog.add_offset_assembly('FRAME8.1', 'FRAME1.1',\r\n                              -(apv['FRAME1']['B'] - assmebly_par['Ass_B'] - apv['FRAME8']['B'])-zeta, 'YZ plane', 0, 38)\r\n    mprog.add_offset_assembly('FRAME8.1', 'FRAME1.1', -assmebly_par['Ass_E'], 'ZX plane', 0, 39)\r\n    mprog.add_offset_assembly('FRAME9.1', 'FRAME2.1', 0, 'XY plane', 0, 34)\r\n    mprog.add_offset_assembly('FRAME9.1', 'FRAME2.1', -assmebly_par['Ass_Z'], 'YZ plane', 0, 35)\r\n    mprog.add_offset_assembly('FRAME9.1', 'FRAME2.1', apv['FRAME2']['CC'] / 2, 'ZX plane', 0, 36)\r\n    if stamping_press_type == 0 or stamping_press_type == 1 or stamping_press_type == 2:\r\n        mprog.add_offset_assembly('FRAME10.1', 'FRAME1.1', 0, 'XY plane', 1, 10)\r\n        mprog.add_offset_assembly('FRAME10.1', 'FRAME1.1', -(apv['FRAME10']['B']), 'YZ plane', 0, 11)\r\n        mprog.add_offset_assembly('FRAME10.1', 'FRAME1.1',\r\n                                  (apv['FRAME1']['CC'] / 2+ assmebly_par['Ass_AA']), 'ZX plane',\r\n                                  1, 12)\r\n        mprog.add_offset_assembly('FRAME10.2', 'FRAME2.1', apv['FRAME10']['K(2)'], 'XY plane', 0, 13)\r\n        mprog.add_offset_assembly('FRAME10.2', 'FRAME2.1', -(apv['FRAME10']['B']), 'YZ plane', 0, 14)\r\n        mprog.add_offset_assembly('FRAME10.2', 'FRAME2.1',\r\n                                  (apv['FRAME1']['CC'] / 2+ assmebly_par['Ass_AA']), 'ZX plane',\r\n                                  0, 15)\r\n    else:\r\n        mprog.add_offset_assembly('FRAME10.1', 'FRAME2.1', 0, 'XY plane', 1, 10)\r\n        mprog.add_offset_assembly('FRAME10.1', 'FRAME2.1', 0, 'YZ plane', 1, 11)\r\n        mprog.add_offset_assembly('FRAME10.1', 'FRAME2.1',\r\n                                  (apv['FRAME1']['CC'] / 2 + assmebly_par['Ass_AA']), 'ZX plane',\r\n                                  0, 12)\r\n        mprog.add_offset_assembly('FRAME10.2', 'FRAME1.1', apv['FRAME10']['K(2)'], 'XY plane', 0, 13)\r\n        mprog.add_offset_assembly('FRAME10.2', 'FRAME1.1', 0, 'YZ plane', 1, 14)\r\n        mprog.add_offset_assembly('FRAME10.2', 'FRAME1.1',\r\n                                  (apv['FRAME1']['CC'] / 2 + assmebly_par['Ass_AA']), 'ZX plane',\r\n                                  1, 15)\r\n    mprog.add_offset_assembly('FRAME12.1', 'FRAME3.1', 0, 'XY plane', 0, 136)\r\n    mprog.add_offset_assembly('FRAME12.1', 'FRAME3.1', -(apv['FRAME3']['O']), 'YZ plane', 1, 137)\r\n    mprog.add_offset_assembly('FRAME12.1', 'FRAME3.1', apv['FRAME19']['AH'], 'ZX plane', 0, 138)\r\n    mprog.add_offset_assembly('FRAME13.1', 'FRAME2.1', -(\r\n                apv['FRAME2']['A'] - apv['FRAME30']['A'] - (apv['FRAME17']['g3'] - apv['FRAME17']['g2']) -\r\n                apv['FRAME13']['k'] - apv['FRAME13']['j'] - assmebly_par['Ass_V'] - assmebly_par['Ass_S'])-beta, 'XY plane',\r\n                              0, 121)\r\n    mprog.add_offset_assembly('FRAME13.1', 'FRAME2.1', apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF']+zeta,\r\n                              'YZ plane', 1, 122)\r\n    mprog.add_offset_assembly('FRAME13.1', 'FRAME2.1', -apv['FRAME1']['CC'] / 2, 'ZX plane', 1, 123)\r\n    mprog.add_offset_assembly('FRAME13_1.1', 'FRAME1.1', -(\r\n                apv['FRAME2']['A'] - apv['FRAME30']['A'] - (apv['FRAME17']['g3'] - apv['FRAME17']['g2']) -\r\n                apv['FRAME13']['k'] - apv['FRAME13']['j'] - assmebly_par['Ass_V'] - assmebly_par['Ass_S'])-beta, 'XY plane',\r\n                              0, 124)\r\n    mprog.add_offset_assembly('FRAME13_1.1', 'FRAME1.1', apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF']+zeta,\r\n                              'YZ plane', 1, 125)\r\n    mprog.add_offset_assembly('FRAME13_1.1', 'FRAME1.1', apv['FRAME1']['CC'] / 2 + apv['FRAME13']['E'], 'ZX plane', 1,\r\n                              126)\r\n    mprog.add_offset_assembly('FRAME14.1', 'FRAME2.1', -(\r\n                apv['FRAME2']['A'] - apv['FRAME30']['A'] - assmebly_par['Ass_S'] - apv['FRAME14']['g3'])-beta, 'XY plane', 0,\r\n                              109)\r\n    mprog.add_offset_assembly('FRAME14.1', 'FRAME2.1',\r\n                              apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME14']['B'] - apv['FRAME2']['FF']+zeta,\r\n                              'YZ plane', 1, 110)\r\n    mprog.add_offset_assembly('FRAME14.1', 'FRAME2.1', apv['FRAME14']['A'] + apv['FRAME2']['CC'] / 2, 'ZX plane', 0,\r\n                              111)\r\n    mprog.add_offset_assembly('FRAME17.1', 'FRAME1.1', -(\r\n                apv['FRAME1']['A'] - apv['FRAME30']['A'] - assmebly_par['Ass_S'] - apv['FRAME17']['g3'])-beta, 'XY plane', 0,\r\n                              112)\r\n    mprog.add_offset_assembly('FRAME17.1', 'FRAME1.1',\r\n                              apv['FRAME1']['F'] - apv['FRAME1']['G'] - apv['FRAME17']['B'] - apv['FRAME1']['FF']+zeta,\r\n                              'YZ plane', 1, 113)\r\n    mprog.add_offset_assembly('FRAME17.1', 'FRAME1.1', -(apv['FRAME2']['CC'] / 2), 'ZX plane', 0, 114)\r\n    mprog.add_offset_assembly('FRAME18.1', 'FRAME1.1', -(\r\n                apv['FRAME1']['A'] - apv['FRAME1']['bbbbb'] - assmebly_par['Ass_M'] - apv['FRAME18']['F'])-0.5*alpha-beta, 'XY plane',\r\n                              0, 76)\r\n    mprog.add_offset_assembly('FRAME18.1', 'FRAME1.1', (assmebly_par['Ass_N']), 'YZ plane', 1,\r\n                              77)\r\n    mprog.add_offset_assembly('FRAME18.1', 'FRAME1.1', (apv['FRAME1']['CC'] / 2 + apv['FRAME18']['B']), 'ZX plane', 1, 78)\r\n    mprog.add_offset_assembly('FRAME19.1', 'FRAME1.1', -((apv['FRAME1']['E'] - apv['FRAME19']['D'])), 'XY plane', 0, 28)\r\n    mprog.add_offset_assembly('FRAME19.1', 'FRAME1.1', -(apv['FRAME1']['B'] - assmebly_par['Ass_C']+zeta), 'YZ plane', 0, 29)\r\n    mprog.add_offset_assembly('FRAME19.1', 'FRAME1.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME19']['AH']), 'ZX plane', 0,\r\n                              30)\r\n    mprog.add_offset_assembly('FRAME19.2', 'FRAME2.1', -((apv['FRAME1']['E'] - apv['FRAME19']['D'])), 'XY plane', 0, 31)\r\n    mprog.add_offset_assembly('FRAME19.2', 'FRAME2.1', -(apv['FRAME2']['B'] - assmebly_par['Ass_C']+zeta), 'YZ plane', 0, 32)\r\n    mprog.add_offset_assembly('FRAME19.2', 'FRAME2.1', apv['FRAME2']['CC'] / 2, 'ZX plane', 0, 33)\r\n    mprog.add_offset_assembly('FRAME20.1', 'FRAME2.1', -(\r\n                apv['FRAME1']['A'] - apv['FRAME1']['bbbbb'] - assmebly_par['Ass_R'] - apv['FRAME20']['H'])-0.5*alpha-beta, 'XY plane',\r\n                              0, 100)\r\n    mprog.add_offset_assembly('FRAME20.1', 'FRAME2.1', -(apv['FRAME20']['A'] + assmebly_par['Ass_N']), 'YZ plane', 0,\r\n                              101)\r\n    mprog.add_offset_assembly('FRAME20.1', 'FRAME2.1', apv['FRAME20']['B'] + apv['FRAME1']['CC'] / 2, 'ZX plane', 0,\r\n                              102)\r\n    if stamping_press_type == 0 or stamping_press_type == 1 or stamping_press_type == 2 or stamping_press_type == 3:\r\n        mprog.add_offset_assembly('FRAME22.1', 'FRAME35.1', -(\r\n                (apv['FRAME1']['E'] - apv['FRAME1']['DD']) - (apv['FRAME22']['A(1)'] - apv['FRAME22']['A(2)'])),\r\n                              'XY plane', 1, 16)\r\n    else:\r\n        mprog.add_offset_assembly('FRAME22.1', 'FRAME35.2', 0,'XY plane', 1, 16)\r\n    if stamping_press_type == 0 or stamping_press_type == 1 or stamping_press_type == 2:\r\n        mprog.add_offset_assembly('FRAME22.1', 'FRAME35.1', apv['FRAME22']['O'], 'YZ plane', 0, 17)\r\n    else:\r\n        mprog.add_offset_assembly('FRAME22.1', 'FRAME35.2', -(apv['FRAME35']['B'] - apv['FRAME22']['O']), 'YZ plane', 1, 17)\r\n    if stamping_press_type == 0 or stamping_press_type == 1 or stamping_press_type == 2 or stamping_press_type == 3:\r\n        mprog.add_offset_assembly('FRAME22.1', 'FRAME1.1', -(apv['FRAME22']['D'] + apv['FRAME1']['CC'] / 2), 'ZX plane', 0,\r\n                              18)\r\n    else:\r\n        mprog.add_offset_assembly('FRAME22.1', 'FRAME2.1', apv['FRAME1']['CC'] / 2, 'ZX plane', 0, 18)\r\n    mprog.add_offset_assembly('FRAME24.1', 'FRAME30.1', -(apv['FRAME30']['A'] - apv['FRAME24']['B']), 'XY plane', 0, 58)\r\n    mprog.add_offset_assembly('FRAME24.1', 'FRAME30.1', apv['FRAME24']['A'] + apv['FRAME30']['M'] / 2, 'YZ plane', 0,\r\n                              59)\r\n    mprog.add_offset_assembly('FRAME24.1', 'FRAME30.1',\r\n                              apv['FRAME30']['E'] - (apv['FRAME24']['I'] - apv['FRAME2']['CC']), 'ZX plane', 0, 60)\r\n    mprog.add_offset_assembly('FRAME24_1.1', 'FRAME30.1', -(apv['FRAME30']['A'] - apv['FRAME24']['B']), 'XY plane', 0,\r\n                              61)\r\n    mprog.add_offset_assembly('FRAME24_1.1', 'FRAME30.1', apv['FRAME24']['A'] + apv['FRAME30']['M'] / 2, 'YZ plane', 0,\r\n                              62)\r\n    mprog.add_offset_assembly('FRAME24_1.1', 'FRAME30.1', (apv['FRAME24']['I'] - apv['FRAME2']['CC'] + apv['FRAME24']['E']), 'ZX plane', 0,\r\n                              63)\r\n    mprog.add_offset_assembly('FRAME26.1', 'FRAME18.1', apv['FRAME26']['B'], 'XY plane', 0, 79)\r\n    mprog.add_offset_assembly('FRAME26.1', 'FRAME18.1', -assmebly_par['Ass_O'], 'YZ plane', 1, 80)\r\n    mprog.add_offset_assembly('FRAME26.1', 'FRAME18.1', 0, 'ZX plane', 1, 81)\r\n    mprog.add_offset_assembly('FRAME26.2', 'FRAME18.1', apv['FRAME26']['B'], 'XY plane', 0, 82)\r\n    mprog.add_offset_assembly('FRAME26.2', 'FRAME18.1',\r\n                              -(apv['FRAME18']['A'] - (assmebly_par['Ass_O'] + apv['FRAME26']['I'])), 'YZ plane', 1, 83)\r\n    mprog.add_offset_assembly('FRAME26.2', 'FRAME18.1', 0, 'ZX plane', 1, 84)\r\n    mprog.add_offset_assembly('FRAME26.3', 'FRAME20.1', apv['FRAME26']['B'], 'XY plane', 0, 103)\r\n    mprog.add_offset_assembly('FRAME26.3', 'FRAME20.1', assmebly_par['Ass_O'] + apv['FRAME26']['I'], 'YZ plane', 0, 104)\r\n    mprog.add_offset_assembly('FRAME26.3', 'FRAME20.1', -(apv['FRAME20']['B']), 'ZX plane', 0, 105)\r\n    mprog.add_offset_assembly('FRAME26.4', 'FRAME20.1', apv['FRAME26']['B'], 'XY plane', 0, 106)\r\n    mprog.add_offset_assembly('FRAME26.4', 'FRAME20.1', apv['FRAME20']['A'] - assmebly_par['Ass_O'], 'YZ plane', 0, 107)\r\n    mprog.add_offset_assembly('FRAME26.4', 'FRAME20.1', -(apv['FRAME20']['B']), 'ZX plane', 0, 108)\r\n    mprog.add_offset_assembly('FRAME28.1', 'FRAME30.1', 0, 'XY plane', 0, 158)\r\n    mprog.add_offset_assembly('FRAME28.1', 'FRAME30.1', apv['FRAME30']['M'] / 2 + apv['FRAME28']['A'], 'YZ plane', 0,\r\n                              159)\r\n    if stamping_press_type == 0 or stamping_press_type == 1 or stamping_press_type == 2 or stamping_press_type == 3:\r\n        mprog.add_offset_assembly('FRAME28.1', 'FRAME30.1', apv['FRAME27']['I'] + 1, 'ZX plane', 0, 160)\r\n    else:\r\n        mprog.add_offset_assembly('FRAME28.1', 'FRAME30.1', 0, 'ZX plane', 0, 160)\r\n    mprog.add_offset_assembly('FRAME30.1', 'FRAME2.1', -(apv['FRAME2']['A'] - apv['FRAME30']['A'])-beta, 'XY plane', 0, 40)\r\n    mprog.add_offset_assembly('FRAME30.1', 'FRAME2.1', -(apv['FRAME2']['F'] - (apv['FRAME30']['M'] / 2))-zeta, 'YZ plane', 0,\r\n                              41)\r\n    mprog.add_offset_assembly('FRAME30.1', 'FRAME2.1', apv['FRAME2']['CC'] / 2, 'ZX plane', 0, 42)\r\n    mprog.add_offset_assembly('FRAME32.1', 'FRAME2.1', -(\r\n                apv['FRAME2']['A'] - assmebly_par['Ass_K'] - apv['FRAME32']['A'])-0.5*alpha-beta, 'XY plane',\r\n                              0, 73)\r\n    mprog.add_offset_assembly('FRAME32.1', 'FRAME2.1', -(assmebly_par['Ass_L']), 'YZ plane', 0, 74)\r\n    mprog.add_offset_assembly('FRAME32.1', 'FRAME2.1', apv['FRAME2']['CC'] / 2, 'ZX plane', 0, 75)\r\n    if stamping_press_type == 0 or stamping_press_type == 1 or stamping_press_type == 2:\r\n        mprog.add_offset_assembly('FRAME35.1', 'FRAME1.1', 0, 'XY plane', 1, 1)\r\n        mprog.add_offset_assembly('FRAME35.1', 'FRAME1.1', -(apv['FRAME1']['B'])-zeta, 'YZ plane', 0, 2)\r\n        mprog.add_offset_assembly('FRAME35.1', 'FRAME1.1',\r\n                                  (apv['FRAME22']['D'] - assmebly_par['Ass_A']) / 2 + (apv['FRAME1']['CC'] / 2), 'ZX plane',\r\n                                  1, 3)\r\n        mprog.add_offset_assembly('FRAME35.2', 'FRAME2.1', apv['FRAME35']['K'] - apv['FRAME35']['L'], 'XY plane', 0, 7)\r\n        mprog.add_offset_assembly('FRAME35.2', 'FRAME2.1', -(apv['FRAME2']['B'])-zeta, 'YZ plane', 0, 8)\r\n        mprog.add_offset_assembly('FRAME35.2', 'FRAME2.1',\r\n                                  (apv['FRAME22']['D'] - assmebly_par['Ass_A']) / 2 + apv['FRAME2']['CC'] / 2, 'ZX plane',\r\n                                  0, 9)\r\n    else:\r\n        mprog.add_offset_assembly('FRAME35.1', 'FRAME1.1', apv['FRAME35']['K']-apv['FRAME35']['L'], 'XY plane', 0, 1)\r\n        mprog.add_offset_assembly('FRAME35.1', 'FRAME1.1', (apv['FRAME1']['B'] - apv['FRAME35']['B']) + zeta,\r\n                                  'YZ plane',\r\n                                  1, 2)\r\n        mprog.add_offset_assembly('FRAME35.1', 'FRAME1.1',\r\n                                  (apv['FRAME22']['D'] - assmebly_par['Ass_A']) / 2 + (apv['FRAME1']['CC'] / 2),\r\n                                  'ZX plane',\r\n                                  1, 3)\r\n        mprog.add_offset_assembly('FRAME35.2', 'FRAME2.1', 0, 'XY plane', 1, 7)\r\n        mprog.add_offset_assembly('FRAME35.2', 'FRAME2.1', (apv['FRAME2']['B'] - apv['FRAME35']['B']) + zeta, 'YZ plane', 1, 8)\r\n        mprog.add_offset_assembly('FRAME35.2', 'FRAME2.1',\r\n                                  (apv['FRAME22']['D'] - assmebly_par['Ass_A']) / 2 + apv['FRAME2']['CC'] / 2,\r\n                                  'ZX plane',\r\n                                  0, 9)\r\n    mprog.add_offset_assembly('FRAME38.1', 'FRAME19.2',\r\n                              -(apv['FRAME19']['A'] - assmebly_par['Ass_W'] - apv['FRAME38']['A'] - apv['FRAME3']['C']),\r\n                              'XY plane', 0, 133)\r\n    mprog.add_offset_assembly('FRAME38.1', 'FRAME19.2', assmebly_par['Ass_X'], 'YZ plane', 1, 134)\r\n    mprog.add_offset_assembly('FRAME38.1', 'FRAME19.2', -(apv['FRAME19']['AH'] + apv['FRAME38']['B']), 'ZX plane', 1,\r\n                              135)\r\n    mprog.add_offset_assembly('FRAME38.2', 'FRAME19.1',\r\n                              -(apv['FRAME19']['A'] - assmebly_par['Ass_W'] - apv['FRAME38']['A'] - apv['FRAME3']['C']),\r\n                              'XY plane', 0, 139)\r\n    mprog.add_offset_assembly('FRAME38.2', 'FRAME19.1', -(assmebly_par['Ass_X'] + apv['FRAME38']['C']), 'YZ plane', 0,\r\n                              140)\r\n    mprog.add_offset_assembly('FRAME38.2', 'FRAME19.1', -(apv['FRAME38']['B']), 'ZX plane', 0, 141)\r\n    mprog.add_offset_assembly('crankshaft.1', 'FRAME30.1', -(apv['FRAME30']['h']), 'XY plane', 0, 224)\r\n    mprog.add_offset_assembly('crankshaft.1', 'FRAME30.1', -60, 'YZ plane', 0, 225)\r\n    mprog.add_offset_assembly('crankshaft.1', 'FRAME30.1', (apv['FRAME30']['E']/2), 'ZX plane', 0, 226)\r\n    mprog.add_offset_assembly(S_i.CON_ROD_CAP_list[stamping_press_type]+'.1', 'crankshaft.1', apv['crankshaft']['Bx2'], 'XY plane', 0, 227)\r\n    mprog.add_offset_assembly(S_i.CON_ROD_CAP_list[stamping_press_type]+'.1', 'crankshaft.1', (apv['crankshaft']['Ah1']+apv['crankshaft']['Ah2']+apv['crankshaft']['Bh1']+apv['crankshaft']['Bh2']/2), 'YZ plane', 0, 228)\r\n    mprog.add_offset_assembly(S_i.CON_ROD_CAP_list[stamping_press_type]+'.1', 'crankshaft.1', 0, 'ZX plane', 0, 229)\r\n    mprog.add_offset_assembly(S_i.CON_ROD_BASE_list[stamping_press_type]+'.1', 'crankshaft.1', -(apv['crankshaft']['Bx2']), 'XY plane', 1, 230)\r\n    mprog.add_offset_assembly(S_i.CON_ROD_BASE_list[stamping_press_type]+'.1', 'crankshaft.1', (apv['crankshaft']['Ah1']+apv['crankshaft']['Ah2']+apv['crankshaft']['Bh1']+apv['crankshaft']['Bh2']/2), 'YZ plane', 0, 231)\r\n    mprog.add_offset_assembly(S_i.CON_ROD_BASE_list[stamping_press_type]+'.1', 'crankshaft.1', 0, 'ZX plane', 0, 232)\r\n    mprog.add_offset_assembly(S_i.CON_ROD_list[stamping_press_type]+'.1', S_i.CON_ROD_CAP_list[stamping_press_type]+'.1', (S_assmebly_par['C_R_XY']), 'XY plane', 0, 233)\r\n    mprog.add_offset_assembly(S_i.CON_ROD_list[stamping_press_type]+'.1', S_i.CON_ROD_CAP_list[stamping_press_type]+'.1', 0, 'YZ plane', 0, 234)\r\n    mprog.add_offset_assembly(S_i.CON_ROD_list[stamping_press_type]+'.1', S_i.CON_ROD_CAP_list[stamping_press_type]+'.1', 0, 'ZX plane', 0, 235)\r\n    mprog.add_offset_assembly(S_i.PANEL_list[stamping_press_type]+'.1', 'crankshaft.1', 0, 'XY plane', 1, 236)\r\n    mprog.add_offset_assembly(S_i.PANEL_list[stamping_press_type]+'.1', 'crankshaft.1', -10, 'YZ plane', 0, 237)\r\n    mprog.add_offset_assembly(S_i.PANEL_list[stamping_press_type]+'.1', 'crankshaft.1', 0, 'ZX plane', 0, 238)\r\n    mprog.add_offset_assembly(S_i.POINTER_list[stamping_press_type]+'.1', S_i.PANEL_list[stamping_press_type]+'.1', 0, 'XY plane', 1, 239)\r\n    mprog.add_offset_assembly(S_i.POINTER_list[stamping_press_type]+'.1', S_i.PANEL_list[stamping_press_type]+'.1', -10, 'YZ plane', 0, 240)\r\n    mprog.add_offset_assembly(S_i.POINTER_list[stamping_press_type]+'.1', S_i.PANEL_list[stamping_press_type]+'.1', 0, 'ZX plane', 0, 241)\r\n    mprog.add_offset_assembly(S_i.COVER_list[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['A']), 'XY plane', 0, 242)\r\n    mprog.add_offset_assembly(S_i.COVER_list[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['F']-(apv['FRAME1']['aaaaa1']+apv['FRAME1']['aaaaa2']+apv['FRAME1']['aaaaa3'])-12), 'YZ plane', 0, 243)\r\n    mprog.add_offset_assembly(S_i.COVER_list[stamping_press_type]+'.1', 'FRAME1.1', -15, 'ZX plane', 1, 244)\r\n    mprog.add_offset_assembly(S_i.PLUG_list+'.1', S_i.COVER_list[stamping_press_type]+'.1', -(S_assmebly_par['P_XY']), 'XY plane', 0, 245)\r\n    mprog.add_offset_assembly(S_i.PLUG_list+'.1', S_i.COVER_list[stamping_press_type]+'.1', (S_assmebly_par['P_YZ']), 'YZ plane', 0, 246)\r\n    mprog.add_offset_assembly(S_i.PLUG_list+'.1', S_i.COVER_list[stamping_press_type]+'.1', -(S_assmebly_par['P_ZX']), 'ZX plane', 1, 247)\r\n    mprog.add_offset_assembly(S_i.slide_gib_list_left[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['E']+apv['FRAME1']['D']), 'XY plane', 0, 248)\r\n    mprog.add_offset_assembly(S_i.slide_gib_list_left[stamping_press_type]+'.1', 'FRAME1.1', (apv['FRAME1']['F']-apv['FRAME1']['G']+S_assmebly_par['SGL_YZ']), 'YZ plane', 1, 249)\r\n    mprog.add_offset_assembly(S_i.slide_gib_list_left[stamping_press_type]+'.1', 'FRAME1.1', -(S_assmebly_par['SGL_ZX']-apv['FRAME1']['CC']/2), 'ZX plane', 0, 250)\r\n    mprog.add_offset_assembly(S_i.slide_gib_list_right[stamping_press_type]+'.1', S_i.slide_gib_list_left[stamping_press_type]+'.1', 0, 'XY plane', 0, 251)\r\n    mprog.add_offset_assembly(S_i.slide_gib_list_right[stamping_press_type]+'.1', S_i.slide_gib_list_left[stamping_press_type]+'.1', 0, 'YZ plane', 0, 252)\r\n    mprog.add_offset_assembly(S_i.slide_gib_list_right[stamping_press_type]+'.1', S_i.slide_gib_list_left[stamping_press_type]+'.1', -(S_assmebly_par['SGR_ZX']), 'ZX plane', 0, 253)\r\n    mprog.add_offset_assembly('OGASKL060_OIL_LEVEL_GAUGE.1', 'FRAME1.1', (apv['FRAME1']['A']-apv['FRAME1']['a1'])+S_assmebly_par['OLG_F_XY'], 'XY plane', 1, 254)\r\n    mprog.add_offset_assembly('OGASKL060_OIL_LEVEL_GAUGE.1', 'FRAME1.1', -((apv['FRAME1']['F']-apv['FRAME1']['G']-apv['FRAME1']['b'])-S_assmebly_par['OLG_F_YZ']), 'YZ plane', 0, 255)\r\n    mprog.add_offset_assembly('OGASKL060_OIL_LEVEL_GAUGE.1', 'FRAME1.1', -(apv['FRAME1']['CC']/2+S_assmebly_par['OLG_F_ZX']), 'ZX plane', 1, 256)\r\n    mprog.add_offset_assembly(S_i.OIL_LEVEL_GAUGE_list_CON_ROD[stamping_press_type]+'.1', S_i.CON_ROD_list[stamping_press_type]+'.1', -(S_assmebly_par['PLG_C_XY']), 'XY plane', 1, 257)\r\n    mprog.add_offset_assembly(S_i.OIL_LEVEL_GAUGE_list_CON_ROD[stamping_press_type]+'.1', S_i.CON_ROD_list[stamping_press_type]+'.1', -(S_assmebly_par['PLG_C_YZ']), 'YZ plane', 0, 258)\r\n    mprog.add_offset_assembly(S_i.OIL_LEVEL_GAUGE_list_CON_ROD[stamping_press_type]+'.1', S_i.CON_ROD_list[stamping_press_type]+'.1', (S_assmebly_par['PLG_C_ZX']), 'ZX plane', 0, 259)\r\n    mprog.add_offset_assembly('EWR60S01_ELECTRIC_BOX_PLATE.1', 'FRAME2.1', -(apv['FRAME2']['w4']-apv['FRAME2']['kk1']-S_assmebly_par['EBP_XY']), 'XY plane', 0, 260)\r\n    mprog.add_offset_assembly('EWR60S01_ELECTRIC_BOX_PLATE.1', 'FRAME2.1', -(apv['FRAME2']['F']-apv['FRAME2']['G']-apv['FRAME2']['jj']+apv['FRAME2']['ll1']-S_assmebly_par['EBP_YZ']), 'YZ plane', 0, 261)\r\n    mprog.add_offset_assembly('EWR60S01_ELECTRIC_BOX_PLATE.1', 'FRAME2.1', -(apv['FRAME2']['CC']/2), 'ZX plane', 0, 262)\r\n    mprog.add_offset_assembly('EWR60S01_ELECTRIC_BOX_PLATE.2', 'EWR60S01_ELECTRIC_BOX_PLATE.1', 0, 'XY plane', 0, 263)\r\n    mprog.add_offset_assembly('EWR60S01_ELECTRIC_BOX_PLATE.2', 'EWR60S01_ELECTRIC_BOX_PLATE.1', -(apv['FRAME2']['ll1']+apv['FRAME2']['ll2']), 'YZ plane', 0, 264)\r\n    mprog.add_offset_assembly('EWR60S01_ELECTRIC_BOX_PLATE.2', 'EWR60S01_ELECTRIC_BOX_PLATE.1', 0, 'ZX plane', 0, 265)\r\n    mprog.add_offset_assembly(S_i.ELECTRIC_BOX_list_normal[stamping_press_type]+'.1', 'EWR60S01_ELECTRIC_BOX_PLATE.1', -(S_assmebly_par['EBP_XY']+S_assmebly_par['EB_XY']), 'XY plane', 0, 266)\r\n    mprog.add_offset_assembly(S_i.ELECTRIC_BOX_list_normal[stamping_press_type]+'.1', 'EWR60S01_ELECTRIC_BOX_PLATE.1', -(S_assmebly_par['EBP_YZ']+S_assmebly_par['EB_YZ']), 'YZ plane', 0, 267)\r\n    mprog.add_offset_assembly(S_i.ELECTRIC_BOX_list_normal[stamping_press_type]+'.1', 'EWR60S01_ELECTRIC_BOX_PLATE.1', 0, 'ZX plane', 0, 268)\r\n    mprog.add_offset_assembly('EGPSSGD1000IS_MOUNT_FILTER.1', 'FRAME1.1', (apv['FRAME1']['e4']+apv['FRAME1']['e3']), 'XY plane', 1, 278)\r\n    mprog.add_offset_assembly('EGPSSGD1000IS_MOUNT_FILTER.1', 'FRAME1.1', -(apv['FRAME1']['g']-(apv['FRAME1']['d']-apv['FRAME1']['i'])), 'YZ plane', 0, 279)\r\n    mprog.add_offset_assembly('EGPSSGD1000IS_MOUNT_FILTER.1', 'FRAME1.1', -(apv['FRAME1']['CC']/2), 'ZX plane', 1, 280)\r\n    mprog.add_offset_assembly(S_i.TRADEMARK_NAMEPLATE_list_normal[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['A']-S_assmebly_par['TN_XY ']), 'XY plane', 0, 281)\r\n    mprog.add_offset_assembly(S_i.TRADEMARK_NAMEPLATE_list_normal[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['F']-S_assmebly_par['TN_YZ']), 'YZ plane', 1, 282)\r\n    mprog.add_offset_assembly(S_i.TRADEMARK_NAMEPLATE_list_normal[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['CC']/2), 'ZX plane', 0, 283)\r\n    mprog.add_offset_assembly(S_i.TRADEMARK_NAMEPLATE_list_normal[stamping_press_type]+'.2', 'FRAME2.1', -(apv['FRAME1']['A']-S_assmebly_par['TN_XY']), 'XY plane', 0, 284)\r\n    mprog.add_offset_assembly(S_i.TRADEMARK_NAMEPLATE_list_normal[stamping_press_type]+'.2', 'FRAME2.1', (apv['FRAME1']['F']-S_assmebly_par['TN_YZ']+S_assmebly_par['TN_2_YZ']), 'YZ plane', 1, 285)\r\n    mprog.add_offset_assembly(S_i.TRADEMARK_NAMEPLATE_list_normal[stamping_press_type]+'.2', 'FRAME2.1', -(apv['FRAME1']['CC']/2), 'ZX plane', 0, 286)\r\n    mprog.add_offset_assembly(S_i.NAME_PLATE_list_normal[stamping_press_type]+'.1', 'FRAME30.1', -(apv['FRAME30']['A']-S_assmebly_par['NP_XY']), 'XY plane', 0, 287)\r\n    mprog.add_offset_assembly(S_i.NAME_PLATE_list_normal[stamping_press_type]+'.1', 'FRAME30.1', -(apv['FRAME30']['M']+S_assmebly_par['NP_YZ']), 'YZ plane', 0, 288)\r\n    mprog.add_offset_assembly(S_i.NAME_PLATE_list_normal[stamping_press_type]+'.1', 'FRAME30.1', -(apv['FRAME30']['E']-S_assmebly_par['NP_ZX']), 'ZX plane', 1, 289)\r\n    mprog.add_offset_assembly(S_i.GUARD_FLYWHEEL_list_normal[stamping_press_type]+'.1', 'FRAME30.1', (S_assmebly_par['GF_XY']), 'XY plane', 1, 290)\r\n    mprog.add_offset_assembly(S_i.GUARD_FLYWHEEL_list_normal[stamping_press_type]+'.1', 'FRAME30.1', 0, 'YZ plane', 1, 291)\r\n    mprog.add_offset_assembly(S_i.GUARD_FLYWHEEL_list_normal[stamping_press_type]+'.1', 'FRAME30.1', (S_assmebly_par['GF_ZX']), 'ZX plane', 0, 292)\r\n\r\n\r\n\r\n\r\n\r\n    if stamping_press_type == 0:\r\n        mprog.add_offset_assembly('FRAME33.1', 'FRAME1.1', 0, 'XY plane', 0, 19)\r\n        mprog.add_offset_assembly('FRAME33.1', 'FRAME1.1', -(apv['FRAME1']['B']-apv['FRAME33']['B'])-zeta, 'YZ plane', 0, 20)\r\n        mprog.add_offset_assembly('FRAME33.1', 'FRAME1.1', -(apv['FRAME33']['K']+apv['FRAME1']['CC']/2), 'ZX plane', 0, 21)\r\n        mprog.add_offset_assembly('FRAME34.1', 'FRAME2.1', 0, 'XY plane', 0, 22)\r\n        mprog.add_offset_assembly('FRAME34.1', 'FRAME2.1', -(apv['FRAME2']['B']-apv['FRAME34']['B'])-zeta, 'YZ plane', 0, 23)\r\n        mprog.add_offset_assembly('FRAME34.1', 'FRAME2.1', apv['FRAME2']['CC']/2, 'ZX plane', 0, 24)\r\n        mprog.add_offset_assembly('FRAME31.1', 'FRAME4.1', -(apv['FRAME4']['A']-apv['FRAME4']['a']-apv['FRAME4']['b']/2), 'XY plane', 0, 49)\r\n        mprog.add_offset_assembly('FRAME31.1', 'FRAME4.1', -(apv['FRAME4']['C']-assmebly_par['Ass_H']), 'YZ plane', 0, 50)\r\n        mprog.add_offset_assembly('FRAME31.1', 'FRAME4.1', apv['FRAME4']['B']/2-apv['FRAME4']['b']/2, 'ZX plane', 0, 51)\r\n        mprog.add_offset_assembly('FRAME11.1', 'FRAME3.1', -(apv['FRAME3']['A']-apv['FRAME3']['E']-apv['FRAME11']['A']/2), 'XY plane', 0, 64)\r\n        mprog.add_offset_assembly('FRAME11.1', 'FRAME3.1', apv['FRAME3']['O']+assmebly_par['Ass_I'], 'YZ plane', 0, 65)\r\n        mprog.add_offset_assembly('FRAME11.1', 'FRAME3.1', apv['FRAME3']['B']/2+apv['FRAME11']['A']/2, 'ZX plane', 0, 66)\r\n        mprog.add_offset_assembly('FRAME36.1', 'FRAME4.1', -((assmebly_par['Ass_J']-apv['FRAME36']['A']/2)+(apv['FRAME4']['A']-apv['FRAME4']['a'])), 'XY plane', 0, 67)\r\n        mprog.add_offset_assembly('FRAME36.1', 'FRAME4.1', -(apv['FRAME4']['K']+(apv['FRAME25']['A']-apv['FRAME36']['C'])), 'YZ plane', 0, 68)\r\n        mprog.add_offset_assembly('FRAME36.1', 'FRAME4.1', apv['FRAME4']['B']-apv['FRAME36']['D'], 'ZX plane', 0, 69)\r\n        mprog.add_offset_assembly('FRAME25.1', 'FRAME4.1', -((assmebly_par['Ass_J']-apv['FRAME25']['B'])+(apv['FRAME4']['A']-apv['FRAME4']['a'])), 'XY plane', 0, 85)\r\n        mprog.add_offset_assembly('FRAME25.1', 'FRAME4.1', -(apv['FRAME4']['K']), 'YZ plane', 0, 86)\r\n        mprog.add_offset_assembly('FRAME25.1', 'FRAME4.1', assmebly_par['Ass_P']+apv['FRAME4']['B']/2, 'ZX plane', 0, 87)\r\n        mprog.add_offset_assembly('FRAME29.1', 'FRAME4.1', -(\r\n                        assmebly_par['Ass_Q'] + (apv['FRAME4']['A'] - apv['FRAME4']['a']) - apv['FRAME29']['A'] / 2),\r\n                                      'XY plane', 0, 94)\r\n        mprog.add_offset_assembly('FRAME29.1', 'FRAME4.1', apv['FRAME29']['B'] - (apv['FRAME29']['B'] - apv['FRAME29']['F']), 'YZ plane', 0, 95)\r\n        mprog.add_offset_assembly('FRAME29.1', 'FRAME4.1',\r\n                                      apv['FRAME4']['B'] / 2 - apv['FRAME6']['e'] + apv['FRAME29']['A'] / 2, 'ZX plane', 0, 96)\r\n        mprog.add_offset_assembly('FRAME29.2', 'FRAME4.1', -(\r\n                        assmebly_par['Ass_Q'] + (apv['FRAME4']['A'] - apv['FRAME4']['a']) - apv['FRAME29']['A'] / 2),\r\n                                      'XY plane', 0, 97)\r\n        mprog.add_offset_assembly('FRAME29.2', 'FRAME4.1', apv['FRAME29']['B'] - (apv['FRAME29']['B'] - apv['FRAME29']['F']), 'YZ plane', 0, 98)\r\n        mprog.add_offset_assembly('FRAME29.2', 'FRAME4.1',\r\n                                      apv['FRAME4']['B'] / 2 + apv['FRAME6']['e'] + apv['FRAME29']['A'] / 2, 'ZX plane', 0, 99)\r\n        mprog.add_offset_assembly('FRAME27.1', 'FRAME1.1', -(apv['FRAME1']['A'] - apv['FRAME27']['A']) - beta,\r\n                                  'XY plane', 0,\r\n                                  52)\r\n        mprog.add_offset_assembly('FRAME27.1', 'FRAME1.1', -(\r\n                apv['FRAME1']['F'] - apv['FRAME27']['B'] - apv['FRAME30']['M'] - apv['FRAME27']['J']) - zeta,\r\n                                  'YZ plane',\r\n                                  0, 53)\r\n        mprog.add_offset_assembly('FRAME27.1', 'FRAME1.1', -(apv['FRAME1']['CC'] / 2), 'ZX plane', 0, 54)\r\n        mprog.add_offset_assembly('FRAME27_1.1', 'FRAME2.1', -(apv['FRAME2']['A'] - apv['FRAME27_1']['A']) - beta,\r\n                                  'XY plane',\r\n                                  0, 55)\r\n        mprog.add_offset_assembly('FRAME27_1.1', 'FRAME2.1', -(\r\n                apv['FRAME2']['F'] - apv['FRAME27_1']['B'] - apv['FRAME30']['M'] - apv['FRAME27_1']['J']) - zeta,\r\n                                  'YZ plane', 0, 56)\r\n        mprog.add_offset_assembly('FRAME27_1.1', 'FRAME2.1', apv['FRAME27_1']['I'] + apv['FRAME2']['CC'] / 2,\r\n                                  'ZX plane', 0, 57)\r\n        mprog.add_offset_assembly('FRAME6.1', 'FRAME4.1', assmebly_par['Ass_Q']-(apv['FRAME4']['A']-apv['FRAME4']['a'])-apv['FRAME6']['E']/2, 'XY plane', 0, 88)\r\n        mprog.add_offset_assembly('FRAME6.1', 'FRAME4.1', 0, 'YZ plane', 1, 89)\r\n        mprog.add_offset_assembly('FRAME6.1', 'FRAME4.1', -(apv['FRAME4']['B']/2-apv['FRAME6']['f']), 'ZX plane', 1, 90)\r\n        mprog.add_offset_assembly('FRAME6.2', 'FRAME4.1', assmebly_par['Ass_Q']-(apv['FRAME4']['A']-apv['FRAME4']['a'])-apv['FRAME6']['E']/2, 'XY plane', 0, 91)\r\n        mprog.add_offset_assembly('FRAME6.2', 'FRAME4.1', apv['FRAME6']['i'], 'YZ plane', 0, 92)\r\n        mprog.add_offset_assembly('FRAME6.2', 'FRAME4.1', apv['FRAME4']['B']/2+apv['FRAME6']['f'], 'ZX plane', 0, 93)\r\n        mprog.add_offset_assembly('FRAME21.1', 'FRAME1.1',apv['FRAME2']['A']-apv['FRAME30']['A']-(apv['FRAME17']['g3']-apv['FRAME17']['g2'])-apv['FRAME13']['k']-apv['FRAME13']['j']-assmebly_par['Ass_V']-assmebly_par['Ass_S']+beta, 'XY plane', 1, 127)\r\n        mprog.add_offset_assembly('FRAME21.1', 'FRAME1.1',-(apv['FRAME2']['F']-apv['FRAME2']['G'] - apv['FRAME2']['FF'] -assmebly_par['Ass_T']-apv['FRAME21']['D'])-zeta, 'YZ plane', 0, 128)\r\n        mprog.add_offset_assembly('FRAME21.1', 'FRAME1.1',-(apv['FRAME3']['B']/2-assmebly_par['Ass_U']+apv['FRAME1']['CC']/2-apv['FRAME21']['C']), 'ZX plane', 0, 129)\r\n        mprog.add_offset_assembly('FRAME21.2', 'FRAME2.1',apv['FRAME2']['A']-apv['FRAME30']['A']-(apv['FRAME17']['g3']-apv['FRAME17']['g2'])-apv['FRAME13']['k']-apv['FRAME13']['j']-assmebly_par['Ass_V']-assmebly_par['Ass_S']+beta, 'XY plane', 1, 130)\r\n        mprog.add_offset_assembly('FRAME21.2', 'FRAME2.1',-(apv['FRAME2']['F']-apv['FRAME2']['G'] - apv['FRAME2']['FF'] - assmebly_par['Ass_T']-apv['FRAME21']['D'])-zeta, 'YZ plane', 0, 131)\r\n        mprog.add_offset_assembly('FRAME21.2', 'FRAME2.1',(apv['FRAME3']['B']/2-assmebly_par['Ass_U']+apv['FRAME1']['CC']/2), 'ZX plane', 0, 132)\r\n        mprog.add_offset_assembly('FRAME37.1', 'FRAME2.1', -(apv['FRAME2']['A']-apv['FRAME2']['ffff']-apv['FRAME37']['A']/2), 'XY plane', 0, 142)\r\n        mprog.add_offset_assembly('FRAME37.1', 'FRAME2.1', -(apv['FRAME2']['F']-apv['FRAME2']['eeee']-apv['FRAME37']['A']/2)-zeta, 'YZ plane', 0, 143)\r\n        mprog.add_offset_assembly('FRAME37.1', 'FRAME2.1', apv['FRAME2']['CC']/2, 'ZX plane', 0, 144)\r\n        mprog.add_offset_assembly('FRAME23.1', 'FRAME1.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 145)\r\n        mprog.add_offset_assembly('FRAME23.1', 'FRAME1.1', -(apv['FRAME1']['B'] - apv['FRAME23']['B']) - zeta,\r\n                                  'YZ plane', 0, 146)\r\n        mprog.add_offset_assembly('FRAME23.1', 'FRAME1.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  1, 147)\r\n        mprog.add_offset_assembly('FRAME23.2', 'FRAME1.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 148)\r\n        mprog.add_offset_assembly('FRAME23.2', 'FRAME1.1', -(apv[\"FRAME1\"][\"B\"]-apv[\"FRAME23\"][\"B\"] - assmebly_par['Ass_Y'])-zeta,\r\n                                  'YZ plane', 0, 149)\r\n        mprog.add_offset_assembly('FRAME23.2', 'FRAME1.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  1, 150)\r\n        mprog.add_offset_assembly('FRAME23.3', 'FRAME2.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 151)\r\n        mprog.add_offset_assembly('FRAME23.3', 'FRAME2.1', (apv['FRAME1']['B']) + zeta,\r\n                                  'YZ plane', 1, 152)\r\n        mprog.add_offset_assembly('FRAME23.3', 'FRAME2.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  0, 153)\r\n        mprog.add_offset_assembly('FRAME23.4', 'FRAME2.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 154)\r\n        mprog.add_offset_assembly('FRAME23.4', 'FRAME2.1', (apv[\"FRAME1\"][\"B\"] - assmebly_par['Ass_Y'])+zeta,\r\n                                  'YZ plane', 1, 155)\r\n        mprog.add_offset_assembly('FRAME23.4', 'FRAME2.1', -(apv['FRAME2']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  0, 156)\r\n        mprog.add_offset_assembly('FRAME15.1', 'FRAME1.1', -(\r\n                apv['FRAME1']['A'] - apv['FRAME30']['A'] - assmebly_par['Ass_S'] - apv['FRAME17']['g3']) - beta,\r\n                                  'XY plane', 0,\r\n                                  115)\r\n        mprog.add_offset_assembly('FRAME15.1', 'FRAME1.1',\r\n                                  apv['FRAME1']['F'] - apv['FRAME1']['G'] - apv['FRAME2']['FF'] - assmebly_par[\r\n                                      'Ass_T'] + zeta,\r\n                                  'YZ plane', 1, 116)\r\n        mprog.add_offset_assembly('FRAME15.1', 'FRAME1.1',\r\n                                  apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2 -\r\n                                  apv['FRAME15'][\r\n                                      'B'], 'ZX plane', 1, 117)\r\n        mprog.add_offset_assembly('FRAME15.2', 'FRAME2.1', -(\r\n                apv['FRAME2']['A'] - apv['FRAME30']['A'] - assmebly_par['Ass_S'] - apv['FRAME17']['g3']) - beta,\r\n                                  'XY plane', 0,\r\n                                  118)\r\n        mprog.add_offset_assembly('FRAME15.2', 'FRAME2.1',\r\n                                  apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF'] - assmebly_par[\r\n                                      'Ass_T'] + zeta,\r\n                                  'YZ plane', 1, 119)\r\n        mprog.add_offset_assembly('FRAME15.2', 'FRAME2.1',\r\n                                  -(apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2),\r\n                                  'ZX plane',\r\n                                  1, 120)\r\n    elif stamping_press_type == 1:\r\n        mprog.add_offset_assembly('FRAME33.1', 'FRAME1.1', 0, 'XY plane', 0, 19)\r\n        mprog.add_offset_assembly('FRAME33.1', 'FRAME1.1', -(apv['FRAME1']['B']-apv['FRAME33']['B'])-zeta, 'YZ plane', 0, 20)\r\n        mprog.add_offset_assembly('FRAME33.1', 'FRAME1.1', -(apv['FRAME33']['K']+apv['FRAME1']['CC']/2), 'ZX plane', 0, 21)\r\n        mprog.add_offset_assembly('FRAME34.1', 'FRAME2.1', 0, 'XY plane', 0, 22)\r\n        mprog.add_offset_assembly('FRAME34.1', 'FRAME2.1', -(apv['FRAME2']['B']-apv['FRAME34']['B'])-zeta, 'YZ plane', 0, 23)\r\n        mprog.add_offset_assembly('FRAME34.1', 'FRAME2.1', apv['FRAME2']['CC']/2, 'ZX plane', 0, 24)\r\n        mprog.add_offset_assembly('FRAME31.1', 'FRAME4.1', (apv['FRAME4']['A']-apv['FRAME4']['a']+apv['FRAME31']['F']/2), 'XY plane', 1, 49)\r\n        mprog.add_offset_assembly('FRAME31.1', 'FRAME4.1', -assmebly_par['Ass_H'], 'YZ plane', 1, 50)\r\n        mprog.add_offset_assembly('FRAME31.1', 'FRAME4.1', apv['FRAME4']['B']/2-apv['FRAME31']['F']/2, 'ZX plane', 0, 51)\r\n        mprog.add_offset_assembly('FRAME11.1', 'FRAME3.1', -(apv['FRAME3']['A']-apv['FRAME3']['E']-apv['FRAME11']['A']/2), 'XY plane', 0, 64)\r\n        mprog.add_offset_assembly('FRAME11.1', 'FRAME3.1', apv['FRAME3']['O']+assmebly_par['Ass_I'], 'YZ plane', 0, 65)\r\n        mprog.add_offset_assembly('FRAME11.1', 'FRAME3.1', apv['FRAME3']['B']/2+apv['FRAME11']['A']/2, 'ZX plane', 0, 66)\r\n        mprog.add_offset_assembly('FRAME36.1', 'FRAME4.1', -((assmebly_par['Ass_J']-apv['FRAME36']['F']/2)+(apv['FRAME4']['A']-apv['FRAME4']['a'])), 'XY plane', 0, 67)\r\n        mprog.add_offset_assembly('FRAME36.1', 'FRAME4.1', -(apv['FRAME4']['K']+7.5), 'YZ plane', 0, 68)\r\n        mprog.add_offset_assembly('FRAME36.1', 'FRAME4.1', apv['FRAME4']['B']-apv['FRAME36']['D'], 'ZX plane', 0, 69)\r\n        mprog.add_offset_assembly('FRAME25.1', 'FRAME4.1', -((assmebly_par['Ass_J']-apv['FRAME25']['B'])+(apv['FRAME4']['A']-apv['FRAME4']['a'])), 'XY plane', 0, 85)\r\n        mprog.add_offset_assembly('FRAME25.1', 'FRAME4.1', -(apv['FRAME4']['K']), 'YZ plane', 0, 86)\r\n        mprog.add_offset_assembly('FRAME25.1', 'FRAME4.1', assmebly_par['Ass_P']+apv['FRAME4']['B']/2, 'ZX plane', 0, 87)\r\n        mprog.add_offset_assembly('FRAME29.1', 'FRAME4.1', -(\r\n                assmebly_par['Ass_Q'] + (apv['FRAME4']['A'] - apv['FRAME4']['a']) - apv['FRAME29']['A'] / 2),\r\n                                  'XY plane', 0, 94)\r\n        mprog.add_offset_assembly('FRAME29.1', 'FRAME4.1',\r\n                                  apv['FRAME29']['B'] - (apv['FRAME29']['B'] - apv['FRAME29']['F']), 'YZ plane', 0, 95)\r\n        mprog.add_offset_assembly('FRAME29.1', 'FRAME4.1',\r\n                                  apv['FRAME4']['B'] / 2 - apv['FRAME6']['e'] + apv['FRAME29']['A'] / 2, 'ZX plane', 0,\r\n                                  96)\r\n        mprog.add_offset_assembly('FRAME29.2', 'FRAME4.1', -(\r\n                assmebly_par['Ass_Q'] + (apv['FRAME4']['A'] - apv['FRAME4']['a']) - apv['FRAME29']['A'] / 2),\r\n                                  'XY plane', 0, 97)\r\n        mprog.add_offset_assembly('FRAME29.2', 'FRAME4.1',\r\n                                  apv['FRAME29']['B'] - (apv['FRAME29']['B'] - apv['FRAME29']['F']), 'YZ plane', 0, 98)\r\n        mprog.add_offset_assembly('FRAME29.2', 'FRAME4.1',\r\n                                  apv['FRAME4']['B'] / 2 + apv['FRAME6']['e'] + apv['FRAME29']['A'] / 2, 'ZX plane', 0,\r\n                                  99)\r\n        mprog.add_offset_assembly('FRAME27.1', 'FRAME1.1', -(apv['FRAME1']['A'] - apv['FRAME27']['A']) - beta,\r\n                                  'XY plane', 0,\r\n                                  52)\r\n        mprog.add_offset_assembly('FRAME27.1', 'FRAME1.1', -(\r\n                apv['FRAME1']['F'] - apv['FRAME27']['B'] - apv['FRAME30']['M'] - apv['FRAME27']['J']) - zeta,\r\n                                  'YZ plane',\r\n                                  0, 53)\r\n        mprog.add_offset_assembly('FRAME27.1', 'FRAME1.1', -(apv['FRAME1']['CC'] / 2), 'ZX plane', 0, 54)\r\n        mprog.add_offset_assembly('FRAME27_1.1', 'FRAME2.1', -(apv['FRAME2']['A'] - apv['FRAME27_1']['A']) - beta,\r\n                                  'XY plane',\r\n                                  0, 55)\r\n        mprog.add_offset_assembly('FRAME27_1.1', 'FRAME2.1', -(\r\n                apv['FRAME2']['F'] - apv['FRAME27_1']['B'] - apv['FRAME30']['M'] - apv['FRAME27_1']['J']) - zeta,\r\n                                  'YZ plane', 0, 56)\r\n        mprog.add_offset_assembly('FRAME27_1.1', 'FRAME2.1', apv['FRAME27_1']['I'] + apv['FRAME2']['CC'] / 2,\r\n                                  'ZX plane', 0, 57)\r\n        mprog.add_offset_assembly('FRAME6.1', 'FRAME4.1', assmebly_par['Ass_Q']-(apv['FRAME4']['A']-apv['FRAME4']['a'])-apv['FRAME6']['E']/2, 'XY plane', 0, 88)\r\n        mprog.add_offset_assembly('FRAME6.1', 'FRAME4.1', 0, 'YZ plane', 1, 89)\r\n        mprog.add_offset_assembly('FRAME6.1', 'FRAME4.1', -(apv['FRAME4']['B']/2-apv['FRAME6']['f']), 'ZX plane', 1, 90)\r\n        mprog.add_offset_assembly('FRAME6.2', 'FRAME4.1', assmebly_par['Ass_Q']-(apv['FRAME4']['A']-apv['FRAME4']['a'])-apv['FRAME6']['E']/2, 'XY plane', 0, 91)\r\n        mprog.add_offset_assembly('FRAME6.2', 'FRAME4.1', apv['FRAME6']['i'], 'YZ plane', 0, 92)\r\n        mprog.add_offset_assembly('FRAME6.2', 'FRAME4.1', apv['FRAME4']['B']/2+apv['FRAME6']['f'], 'ZX plane', 0, 93)\r\n        mprog.add_offset_assembly('FRAME21.1', 'FRAME1.1',apv['FRAME2']['A']-apv['FRAME30']['A']-(apv['FRAME17']['g3']-apv['FRAME17']['g2'])-apv['FRAME13']['k']-apv['FRAME13']['j']-assmebly_par['Ass_V']-assmebly_par['Ass_S']+beta, 'XY plane', 1, 127)\r\n        mprog.add_offset_assembly('FRAME21.1', 'FRAME1.1',-(apv['FRAME2']['F']-apv['FRAME2']['G']-assmebly_par['Ass_T']-apv['FRAME21']['D'])-zeta, 'YZ plane', 0, 128)\r\n        mprog.add_offset_assembly('FRAME21.1', 'FRAME1.1',-(apv['FRAME3']['B']/2-assmebly_par['Ass_U']+apv['FRAME1']['CC']/2-apv['FRAME21']['C']), 'ZX plane', 0, 129)\r\n        mprog.add_offset_assembly('FRAME21.2', 'FRAME2.1',apv['FRAME2']['A']-apv['FRAME30']['A']-(apv['FRAME17']['g3']-apv['FRAME17']['g2'])-apv['FRAME13']['k']-apv['FRAME13']['j']-assmebly_par['Ass_V']-assmebly_par['Ass_S']+beta, 'XY plane', 1, 130)\r\n        mprog.add_offset_assembly('FRAME21.2', 'FRAME2.1',-(apv['FRAME2']['F']-apv['FRAME2']['G']-assmebly_par['Ass_T']-apv['FRAME21']['D'])-zeta, 'YZ plane', 0, 131)\r\n        mprog.add_offset_assembly('FRAME21.2', 'FRAME2.1',(apv['FRAME3']['B']/2-assmebly_par['Ass_U']+apv['FRAME1']['CC']/2), 'ZX plane', 0, 132)\r\n        mprog.add_offset_assembly('FRAME37.1', 'FRAME2.1', -(apv['FRAME2']['A']-apv['FRAME2']['ffff']-apv['FRAME37']['A']/2), 'XY plane', 0, 142)\r\n        mprog.add_offset_assembly('FRAME37.1', 'FRAME2.1', -(apv['FRAME2']['F']-apv['FRAME2']['eeee']-apv['FRAME37']['A']/2)-zeta, 'YZ plane', 0, 143)\r\n        mprog.add_offset_assembly('FRAME37.1', 'FRAME2.1', apv['FRAME2']['CC']/2, 'ZX plane', 0, 144)\r\n        mprog.add_offset_assembly('FRAME23.1', 'FRAME1.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 145)\r\n        mprog.add_offset_assembly('FRAME23.1', 'FRAME1.1', -(apv['FRAME1']['B'] - apv['FRAME23']['B']) - zeta,\r\n                                  'YZ plane', 0, 146)\r\n        mprog.add_offset_assembly('FRAME23.1', 'FRAME1.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  1, 147)\r\n        mprog.add_offset_assembly('FRAME23.2', 'FRAME1.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 148)\r\n        mprog.add_offset_assembly('FRAME23.2', 'FRAME1.1', -(apv[\"FRAME1\"][\"B\"]-apv[\"FRAME23\"][\"B\"] - assmebly_par['Ass_Y'])-zeta,\r\n                                  'YZ plane', 0, 149)\r\n        mprog.add_offset_assembly('FRAME23.2', 'FRAME1.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  1, 150)\r\n        mprog.add_offset_assembly('FRAME23.3', 'FRAME2.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 151)\r\n        mprog.add_offset_assembly('FRAME23.3', 'FRAME2.1', (apv['FRAME1']['B']) + zeta,\r\n                                  'YZ plane', 1, 152)\r\n        mprog.add_offset_assembly('FRAME23.3', 'FRAME2.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  0, 153)\r\n        mprog.add_offset_assembly('FRAME23.4', 'FRAME2.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 154)\r\n        mprog.add_offset_assembly('FRAME23.4', 'FRAME2.1', (apv[\"FRAME1\"][\"B\"] - assmebly_par['Ass_Y'])+zeta,\r\n                                  'YZ plane', 1, 155)\r\n        mprog.add_offset_assembly('FRAME23.4', 'FRAME2.1', -(apv['FRAME2']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  0, 156)\r\n        mprog.add_offset_assembly('FRAME41.2', 'FRAME2.1', (\r\n                apv['FRAME2']['A']-apv['FRAME30']['A']-(apv['FRAME17']['g3']-apv['FRAME17']['g2'])-apv['FRAME13']['k']-apv['FRAME13']['j']-assmebly_par['Ass_V']-assmebly_par['Ass_S']+beta+apv['FRAME41']['I']),\r\n                                  'XY plane', 1,\r\n                                  161)\r\n        mprog.add_offset_assembly('FRAME41.2', 'FRAME3.1', 0, 'YZ plane', 0, 162)\r\n        mprog.add_offset_assembly('FRAME41.2', 'FRAME3.1', 0, 'ZX plane', 0, 163)\r\n        mprog.add_offset_assembly('FRAME41.1', 'FRAME1.1', -(\r\n                apv['FRAME2']['A']-apv['FRAME30']['A']-(apv['FRAME17']['g3']-apv['FRAME17']['g2'])-apv['FRAME13']['k']-apv['FRAME13']['j']-assmebly_par['Ass_V']-assmebly_par['Ass_S']+beta),\r\n                                  'XY plane', 0,\r\n                                  164)\r\n        mprog.add_offset_assembly(\"FRAME41.1\", \"FRAME3.1\", 0, 'YZ plane', 0, 165)\r\n        mprog.add_offset_assembly('FRAME41.1', 'FRAME1.1', (apv['FRAME1']['CC']/2),'ZX plane', 1, 166)\r\n        mprog.add_offset_assembly('FRAME15.1', 'FRAME1.1', -(\r\n                apv['FRAME1']['A'] - apv['FRAME30']['A'] - assmebly_par['Ass_S'] - apv['FRAME17']['g3']) - beta,\r\n                                  'XY plane', 0,\r\n                                  115)\r\n        mprog.add_offset_assembly('FRAME15.1', 'FRAME1.1',\r\n                                  apv['FRAME1']['F'] - apv['FRAME1']['G'] - apv['FRAME2']['FF'] - assmebly_par[\r\n                                      'Ass_T'] + zeta,\r\n                                  'YZ plane', 1, 116)\r\n        mprog.add_offset_assembly('FRAME15.1', 'FRAME1.1',\r\n                                  apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2 -\r\n                                  apv['FRAME15'][\r\n                                      'B'], 'ZX plane', 1, 117)\r\n        mprog.add_offset_assembly('FRAME15.2', 'FRAME2.1', -(\r\n                apv['FRAME2']['A'] - apv['FRAME30']['A'] - assmebly_par['Ass_S'] - apv['FRAME17']['g3']) - beta,\r\n                                  'XY plane', 0,\r\n                                  118)\r\n        mprog.add_offset_assembly('FRAME15.2', 'FRAME2.1',\r\n                                  apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF'] - assmebly_par[\r\n                                      'Ass_T'] + zeta,\r\n                                  'YZ plane', 1, 119)\r\n        mprog.add_offset_assembly('FRAME15.2', 'FRAME2.1',\r\n                                  -(apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2),\r\n                                  'ZX plane',\r\n                                  1, 120)\r\n    elif stamping_press_type == 2:\r\n        mprog.add_offset_assembly('FRAME6.1', 'FRAME4.1',\r\n                                  assmebly_par['Ass_Q'] - (apv['FRAME4']['A'] - apv['FRAME4']['a']) - apv['FRAME6'][\r\n                                      'E'] / 2, 'XY plane', 0, 88)\r\n        mprog.add_offset_assembly('FRAME6.1', 'FRAME4.1', 0, 'YZ plane', 1, 89)\r\n        mprog.add_offset_assembly('FRAME6.1', 'FRAME4.1', -(apv['FRAME4']['B'] / 2 - apv['FRAME6']['f']), 'ZX plane', 1,\r\n                                  90)\r\n        mprog.add_offset_assembly('FRAME6.2', 'FRAME4.1',\r\n                                  assmebly_par['Ass_Q'] - (apv['FRAME4']['A'] - apv['FRAME4']['a']) - apv['FRAME6'][\r\n                                      'E'] / 2, 'XY plane', 0, 91)\r\n        mprog.add_offset_assembly('FRAME6.2', 'FRAME4.1', apv['FRAME6']['i'], 'YZ plane', 0, 92)\r\n        mprog.add_offset_assembly('FRAME6.2', 'FRAME4.1', apv['FRAME4']['B'] / 2 + apv['FRAME6']['f'], 'ZX plane', 0,\r\n                                  93)\r\n        mprog.add_offset_assembly('FRAME11.1', 'FRAME3.1',\r\n                                  -(apv['FRAME3']['A'] - apv['FRAME3']['E'] - apv['FRAME11']['A'] / 2), 'XY plane', 0,\r\n                                  64)\r\n        mprog.add_offset_assembly('FRAME11.1', 'FRAME3.1', apv['FRAME3']['O'] + assmebly_par['Ass_I'], 'YZ plane', 0,\r\n                                  65)\r\n        mprog.add_offset_assembly('FRAME11.1', 'FRAME3.1', apv['FRAME3']['B'] / 2 + apv['FRAME11']['A'] / 2, 'ZX plane',\r\n                                  0, 66)\r\n        mprog.add_offset_assembly('FRAME15.1', 'FRAME1.1', -(\r\n                apv['FRAME1']['A'] - apv['FRAME30']['A'] - assmebly_par['Ass_S'] - apv['FRAME17']['g3']) - beta,\r\n                                  'XY plane', 0,\r\n                                  115)\r\n        mprog.add_offset_assembly('FRAME15.1', 'FRAME1.1',\r\n                                  apv['FRAME1']['F'] - apv['FRAME1']['G'] - apv['FRAME2']['FF'] - assmebly_par[\r\n                                      'Ass_T'] + zeta,\r\n                                  'YZ plane', 1, 116)\r\n        mprog.add_offset_assembly('FRAME15.1', 'FRAME1.1',\r\n                                  apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2 -\r\n                                  apv['FRAME15'][\r\n                                      'B'], 'ZX plane', 1, 117)\r\n        mprog.add_offset_assembly('FRAME15.2', 'FRAME2.1', -(\r\n                apv['FRAME2']['A'] - apv['FRAME30']['A'] - assmebly_par['Ass_S'] - apv['FRAME17']['g3']) - beta,\r\n                                  'XY plane', 0,\r\n                                  118)\r\n        mprog.add_offset_assembly('FRAME15.2', 'FRAME2.1',\r\n                                  apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF'] - assmebly_par[\r\n                                      'Ass_T'] + zeta,\r\n                                  'YZ plane', 1, 119)\r\n        mprog.add_offset_assembly('FRAME15.2', 'FRAME2.1',\r\n                                  -(apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2),\r\n                                  'ZX plane',\r\n                                  1, 120)\r\n        mprog.add_offset_assembly('FRAME15.3', 'FRAME1.1', apv['FRAME2']['A'] - apv['FRAME30']['A'] - (\r\n                    apv['FRAME17']['g3'] - apv['FRAME17']['g2']) - apv['FRAME13']['k'] - apv['FRAME13']['j'] -\r\n                                  assmebly_par['Ass_V'] - assmebly_par['Ass_S'] + apv['FRAME15']['A'] + beta, 'XY plane', 1, 127)\r\n        mprog.add_offset_assembly('FRAME15.3', 'FRAME1.1', -(\r\n                    apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF'] - assmebly_par['Ass_T'] -\r\n                    apv['FRAME15']['C']) - zeta, 'YZ plane', 0, 128)\r\n        mprog.add_offset_assembly('FRAME15.3', 'FRAME1.1', (\r\n                    apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2 - apv['FRAME15']['B']),\r\n                                  'ZX plane', 1, 129)\r\n        mprog.add_offset_assembly('FRAME15.4', 'FRAME2.1', apv['FRAME2']['A'] - apv['FRAME30']['A'] - (\r\n                    apv['FRAME17']['g3'] - apv['FRAME17']['g2']) - apv['FRAME13']['k'] - apv['FRAME13']['j'] -\r\n                                  assmebly_par['Ass_V'] - assmebly_par['Ass_S'] + apv['FRAME15']['A'] + beta, 'XY plane', 1, 130)\r\n        mprog.add_offset_assembly('FRAME15.4', 'FRAME2.1', -(\r\n                    apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF'] - assmebly_par['Ass_T'] -\r\n                    apv['FRAME15']['C']) - zeta, 'YZ plane', 0, 131)\r\n        mprog.add_offset_assembly('FRAME15.4', 'FRAME2.1',\r\n                                  -(apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2),\r\n                                  'ZX plane', 1, 132)\r\n        mprog.add_offset_assembly('FRAME25.1', 'FRAME4.1', -(\r\n                    (assmebly_par['Ass_J'] - apv['FRAME25']['B']) + (apv['FRAME4']['A'] - apv['FRAME4']['a'])),\r\n                                  'XY plane', 0, 85)\r\n        mprog.add_offset_assembly('FRAME25.1', 'FRAME4.1', -(apv['FRAME4']['K']), 'YZ plane', 0, 86)\r\n        mprog.add_offset_assembly('FRAME25.1', 'FRAME4.1', assmebly_par['Ass_P'] + apv['FRAME4']['B'] / 2, 'ZX plane',\r\n                                  0, 87)\r\n        mprog.add_offset_assembly('FRAME27.1', 'FRAME1.1', -(apv['FRAME1']['A'] - apv['FRAME27']['A']) - beta,\r\n                                  'XY plane', 0,\r\n                                  52)\r\n        mprog.add_offset_assembly('FRAME27.1', 'FRAME1.1', -(\r\n                apv['FRAME1']['F'] - apv['FRAME27']['B'] - apv['FRAME30']['M'] - apv['FRAME27']['J']) - zeta,\r\n                                  'YZ plane',\r\n                                  0, 53)\r\n        mprog.add_offset_assembly('FRAME27.1', 'FRAME1.1', -(apv['FRAME1']['CC'] / 2), 'ZX plane', 0, 54)\r\n        mprog.add_offset_assembly('FRAME27_1.1', 'FRAME2.1', -(apv['FRAME2']['A'] - apv['FRAME27_1']['A']) - beta,\r\n                                  'XY plane',\r\n                                  0, 55)\r\n        mprog.add_offset_assembly('FRAME27_1.1', 'FRAME2.1', -(\r\n                apv['FRAME2']['F'] - apv['FRAME27_1']['B'] - apv['FRAME30']['M'] - apv['FRAME27_1']['J']) - zeta,\r\n                                  'YZ plane', 0, 56)\r\n        mprog.add_offset_assembly('FRAME27_1.1', 'FRAME2.1', apv['FRAME27_1']['I'] + apv['FRAME2']['CC'] / 2,\r\n                                  'ZX plane', 0, 57)\r\n        mprog.add_offset_assembly('FRAME29.1', 'FRAME4.1', -(\r\n                assmebly_par['Ass_Q'] + (apv['FRAME4']['A'] - apv['FRAME4']['a']) - apv['FRAME29']['A'] / 2),\r\n                                  'XY plane', 0, 94)\r\n        mprog.add_offset_assembly('FRAME29.1', 'FRAME4.1',\r\n                                  apv['FRAME29']['B'] - (apv['FRAME29']['B'] - apv['FRAME29']['F']), 'YZ plane', 0, 95)\r\n        mprog.add_offset_assembly('FRAME29.1', 'FRAME4.1',\r\n                                  apv['FRAME4']['B'] / 2 - apv['FRAME6']['e'] + apv['FRAME29']['A'] / 2, 'ZX plane', 0,\r\n                                  96)\r\n        mprog.add_offset_assembly('FRAME29.2', 'FRAME4.1', -(\r\n                assmebly_par['Ass_Q'] + (apv['FRAME4']['A'] - apv['FRAME4']['a']) - apv['FRAME29']['A'] / 2),\r\n                                  'XY plane', 0, 97)\r\n        mprog.add_offset_assembly('FRAME29.2', 'FRAME4.1',\r\n                                  apv['FRAME29']['B'] - (apv['FRAME29']['B'] - apv['FRAME29']['F']), 'YZ plane', 0, 98)\r\n        mprog.add_offset_assembly('FRAME29.2', 'FRAME4.1',\r\n                                  apv['FRAME4']['B'] / 2 + apv['FRAME6']['e'] + apv['FRAME29']['A'] / 2, 'ZX plane', 0,\r\n                                  99)\r\n        mprog.add_offset_assembly('FRAME31.1', 'FRAME4.1',\r\n                                  (apv['FRAME4']['A']-apv['FRAME4']['a']+apv['FRAME31']['F']/2), 'XY plane', 1, 49)\r\n        mprog.add_offset_assembly('FRAME31.1', 'FRAME4.1', -(apv['FRAME4']['K']+apv['FRAME31']['C']-assmebly_par['Ass_H']), 'YZ plane', 0, 50)\r\n        mprog.add_offset_assembly('FRAME31.1', 'FRAME4.1', -(apv['FRAME4']['B']/2+apv['FRAME31']['F']/2), 'ZX plane', 1, 51)\r\n        mprog.add_offset_assembly('FRAME33.1', 'FRAME1.1', 0, 'XY plane', 0, 19)\r\n        mprog.add_offset_assembly('FRAME33.1', 'FRAME1.1', -(apv['FRAME1']['B'] - apv['FRAME33']['B']) - zeta,\r\n                                  'YZ plane', 0, 20)\r\n        mprog.add_offset_assembly('FRAME33.1', 'FRAME1.1', -(apv['FRAME33']['K'] + apv['FRAME1']['CC'] / 2), 'ZX plane',\r\n                                  0, 21)\r\n        mprog.add_offset_assembly('FRAME34.1', 'FRAME2.1', 0, 'XY plane', 0, 22)\r\n        mprog.add_offset_assembly('FRAME34.1', 'FRAME2.1', -(apv['FRAME2']['B'] - apv['FRAME34']['B']) - zeta,\r\n                                  'YZ plane', 0, 23)\r\n        mprog.add_offset_assembly('FRAME34.1', 'FRAME2.1', apv['FRAME2']['CC'] / 2, 'ZX plane', 0, 24)\r\n        mprog.add_offset_assembly('FRAME36.1', 'FRAME4.1', -(\r\n                    (assmebly_par['Ass_J'] - apv['FRAME36']['A'] / 2) + (apv['FRAME4']['A'] - apv['FRAME4']['a'])),\r\n                                  'XY plane', 0, 67)\r\n        mprog.add_offset_assembly('FRAME36.1', 'FRAME4.1',\r\n                                  -(apv['FRAME4']['K']+7.5), 'YZ plane', 0,\r\n                                  68)\r\n        mprog.add_offset_assembly('FRAME36.1', 'FRAME4.1', apv['FRAME4']['B'] - apv['FRAME36']['D'], 'ZX plane', 0, 69)\r\n        mprog.add_offset_assembly('FRAME37.1', 'FRAME2.1',\r\n                                  -(apv['FRAME2']['A'] - apv['FRAME2']['ffff'] - apv['FRAME37']['A'] / 2), 'XY plane',\r\n                                  0, 142)\r\n        mprog.add_offset_assembly('FRAME37.1', 'FRAME2.1',\r\n                                  -(apv['FRAME2']['F'] - apv['FRAME2']['eeee'] - apv['FRAME37']['A'] / 2) - zeta,\r\n                                  'YZ plane', 0, 143)\r\n        mprog.add_offset_assembly('FRAME37.1', 'FRAME2.1', apv['FRAME2']['CC'] / 2, 'ZX plane', 0, 144)\r\n        mprog.add_offset_assembly('FRAME23.1', 'FRAME1.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 145)\r\n        mprog.add_offset_assembly('FRAME23.1', 'FRAME1.1', -(apv['FRAME1']['B'] - apv['FRAME23']['B']) - zeta,\r\n                                  'YZ plane', 0, 146)\r\n        mprog.add_offset_assembly('FRAME23.1', 'FRAME1.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  1, 147)\r\n        mprog.add_offset_assembly('FRAME23.2', 'FRAME1.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 148)\r\n        mprog.add_offset_assembly('FRAME23.2', 'FRAME1.1',\r\n                                  -(apv[\"FRAME1\"][\"B\"] - apv[\"FRAME23\"][\"B\"] - assmebly_par['Ass_Y']) - zeta,\r\n                                  'YZ plane', 0, 149)\r\n        mprog.add_offset_assembly('FRAME23.2', 'FRAME1.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  1, 150)\r\n        mprog.add_offset_assembly('FRAME23.3', 'FRAME2.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 151)\r\n        mprog.add_offset_assembly('FRAME23.3', 'FRAME2.1', (apv['FRAME1']['B']) + zeta,\r\n                                  'YZ plane', 1, 152)\r\n        mprog.add_offset_assembly('FRAME23.3', 'FRAME2.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  0, 153)\r\n        mprog.add_offset_assembly('FRAME23.4', 'FRAME2.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 154)\r\n        mprog.add_offset_assembly('FRAME23.4', 'FRAME2.1', (apv[\"FRAME1\"][\"B\"] - assmebly_par['Ass_Y']) + zeta,\r\n                                  'YZ plane', 1, 155)\r\n        mprog.add_offset_assembly('FRAME23.4', 'FRAME2.1', -(apv['FRAME2']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  0, 156)\r\n        mprog.add_offset_assembly('FRAME42.1', 'FRAME1.1', (apv['FRAME2']['A'] - apv['FRAME30']['A'] - (\r\n                apv['FRAME17']['g3'] - apv['FRAME17']['g2']) - apv['FRAME13']['k'] - apv['FRAME13']['j'] -\r\n                                  assmebly_par['Ass_V'] - assmebly_par['Ass_S'] + apv['FRAME15']['A'] / 2 -\r\n                                  apv['FRAME42']['A'] / 2 + beta), 'XY plane', 1, 167)\r\n        mprog.add_offset_assembly('FRAME42.1', 'FRAME1.1', -(\r\n                apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF'] - assmebly_par['Ass_T'] -\r\n                apv['FRAME15']['C'] - apv['FRAME42']['C']) - zeta, 'YZ plane', 0, 168)\r\n        mprog.add_offset_assembly('FRAME42.1', 'FRAME1.1', -(\r\n                apv['FRAME1']['CC'] / 2 + apv['FRAME19']['AH']),\r\n                                  'ZX plane', 0, 169)\r\n        mprog.add_offset_assembly('FRAME42.2', 'FRAME2.1', apv['FRAME2']['A'] - apv['FRAME30']['A'] - (\r\n                apv['FRAME17']['g3'] - apv['FRAME17']['g2']) - apv['FRAME13']['k'] - apv['FRAME13']['j'] -\r\n                                  assmebly_par['Ass_V'] - assmebly_par['Ass_S'] + apv['FRAME15']['A'] / 2 -\r\n                                  apv['FRAME42']['A'] / 2 + beta, 'XY plane', 1, 170)\r\n        mprog.add_offset_assembly('FRAME42.2', 'FRAME2.1', -(\r\n                apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF'] - assmebly_par['Ass_T'] -\r\n                apv['FRAME15']['C'] - apv['FRAME42']['C']) - zeta, 'YZ plane', 0, 171)\r\n        mprog.add_offset_assembly('FRAME42.2', 'FRAME2.1', (\r\n                apv['FRAME1']['CC'] / 2 + apv['FRAME19']['AH'] + apv['FRAME42']['B']),\r\n                                  'ZX plane', 0, 172)\r\n\r\n#60頓待修\r\n    elif stamping_press_type == 3:\r\n        mprog.add_offset_assembly('FRAME6.1', 'FRAME4.1',\r\n                                  assmebly_par['Ass_Q'] - (apv['FRAME4']['A'] - apv['FRAME4']['a']) + apv['FRAME6'][\r\n                                      'E'] / 2, 'XY plane', 0, 88)\r\n        mprog.add_offset_assembly('FRAME6.1', 'FRAME4.1', 28, 'YZ plane', 1, 89)\r\n        mprog.add_offset_assembly('FRAME6.1', 'FRAME4.1', -(apv['FRAME4']['B'] / 2 - apv['FRAME6']['B']), 'ZX plane', 1,\r\n                                  90)\r\n        mprog.add_offset_assembly('FRAME6.2', 'FRAME4.1',\r\n                                  assmebly_par['Ass_Q'] - (apv['FRAME4']['A'] - apv['FRAME4']['a']) - apv['FRAME6'][\r\n                                      'E'] / 2, 'XY plane', 1, 91)\r\n        mprog.add_offset_assembly('FRAME6.2', 'FRAME4.1', 28, 'YZ plane', 1, 92)\r\n        mprog.add_offset_assembly('FRAME6.2', 'FRAME4.1', apv['FRAME4']['B'] - apv['FRAME6']['B'], 'ZX plane', 0,\r\n                                  93)\r\n        mprog.add_offset_assembly('FRAME11.1', 'FRAME3.1',\r\n                                  -(apv['FRAME3']['A'] - apv['FRAME3']['E'] - apv['FRAME11']['A'] / 2), 'XY plane', 0,\r\n                                  64)\r\n        mprog.add_offset_assembly('FRAME11.1', 'FRAME3.1', apv['FRAME3']['O'] + assmebly_par['Ass_I'], 'YZ plane', 0,\r\n                                  65)\r\n        mprog.add_offset_assembly('FRAME11.1', 'FRAME3.1', apv['FRAME3']['B'] / 2 + apv['FRAME11']['A'] / 2, 'ZX plane',\r\n                                  0, 66)\r\n        mprog.add_offset_assembly('FRAME15.1', 'FRAME1.1', -(\r\n                apv['FRAME1']['A'] - apv['FRAME30']['A'] - assmebly_par['Ass_S'] - apv['FRAME17']['g3']) - beta,\r\n                                  'XY plane', 0,\r\n                                  115)\r\n        mprog.add_offset_assembly('FRAME15.1', 'FRAME1.1',\r\n                                  apv['FRAME1']['F'] - apv['FRAME1']['G'] - apv['FRAME2']['FF'] - assmebly_par[\r\n                                      'Ass_T'] + zeta,\r\n                                  'YZ plane', 1, 116)\r\n        mprog.add_offset_assembly('FRAME15.1', 'FRAME1.1',\r\n                                  apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2 -\r\n                                  apv['FRAME15'][\r\n                                      'B'], 'ZX plane', 1, 117)\r\n        mprog.add_offset_assembly('FRAME15.2', 'FRAME2.1', -(\r\n                apv['FRAME2']['A'] - apv['FRAME30']['A'] - assmebly_par['Ass_S'] - apv['FRAME17']['g3']) - beta,\r\n                                  'XY plane', 0,\r\n                                  118)\r\n        mprog.add_offset_assembly('FRAME15.2', 'FRAME2.1',\r\n                                  apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF'] - assmebly_par[\r\n                                      'Ass_T'] + zeta,\r\n                                  'YZ plane', 1, 119)\r\n        mprog.add_offset_assembly('FRAME15.2', 'FRAME2.1',\r\n                                  -(apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2),\r\n                                  'ZX plane',\r\n                                  1, 120)\r\n        mprog.add_offset_assembly('FRAME15.3', 'FRAME1.1', apv['FRAME2']['A'] - apv['FRAME30']['A'] - (\r\n                    apv['FRAME17']['g3'] - apv['FRAME17']['g2']) - apv['FRAME13']['k'] - apv['FRAME13']['j'] -\r\n                                  assmebly_par['Ass_V'] - assmebly_par['Ass_S'] + apv['FRAME15']['A'] + beta, 'XY plane', 1, 127)\r\n        mprog.add_offset_assembly('FRAME15.3', 'FRAME1.1', -(\r\n                    apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF'] - assmebly_par['Ass_T'] -\r\n                    apv['FRAME15']['C']) - zeta, 'YZ plane', 0, 128)\r\n        mprog.add_offset_assembly('FRAME15.3', 'FRAME1.1', (\r\n                    apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2 - apv['FRAME15']['B']),\r\n                                  'ZX plane', 1, 129)\r\n        mprog.add_offset_assembly('FRAME15.4', 'FRAME2.1', apv['FRAME2']['A'] - apv['FRAME30']['A'] - (\r\n                    apv['FRAME17']['g3'] - apv['FRAME17']['g2']) - apv['FRAME13']['k'] - apv['FRAME13']['j'] -\r\n                                  assmebly_par['Ass_V'] - assmebly_par['Ass_S'] + apv['FRAME15']['A'] + beta, 'XY plane', 1, 130)\r\n        mprog.add_offset_assembly('FRAME15.4', 'FRAME2.1', -(\r\n                    apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF'] - assmebly_par['Ass_T'] -\r\n                    apv['FRAME15']['C']) - zeta, 'YZ plane', 0, 131)\r\n        mprog.add_offset_assembly('FRAME15.4', 'FRAME2.1',\r\n                                  -(apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2),\r\n                                  'ZX plane', 1, 132)\r\n        mprog.add_offset_assembly('FRAME25.1', 'FRAME4.1', -(\r\n                    (assmebly_par['Ass_J'] - apv['FRAME25']['B']) + (apv['FRAME4']['A'] - apv['FRAME4']['a'])),\r\n                                  'XY plane', 0, 85)\r\n        mprog.add_offset_assembly('FRAME25.1', 'FRAME4.1', -(apv['FRAME4']['K']), 'YZ plane', 0, 86)\r\n        mprog.add_offset_assembly('FRAME25.1', 'FRAME4.1', assmebly_par['Ass_P'] + apv['FRAME4']['B'] / 2, 'ZX plane',\r\n                                  0, 87)\r\n        mprog.add_offset_assembly('FRAME27.1', 'FRAME1.1', -(apv['FRAME1']['A'] - apv['FRAME27']['A']) - beta,\r\n                                  'XY plane', 0,\r\n                                  52)\r\n        mprog.add_offset_assembly('FRAME27.1', 'FRAME1.1', -(\r\n                apv['FRAME1']['F'] - apv['FRAME27']['B'] - apv['FRAME30']['M'] - apv['FRAME27']['J']) - zeta,\r\n                                  'YZ plane',\r\n                                  0, 53)\r\n        mprog.add_offset_assembly('FRAME27.1', 'FRAME1.1', -(apv['FRAME1']['CC'] / 2), 'ZX plane', 0, 54)\r\n        mprog.add_offset_assembly('FRAME27_1.1', 'FRAME2.1', -(apv['FRAME2']['A'] - apv['FRAME27_1']['A']) - beta,\r\n                                  'XY plane',\r\n                                  0, 55)\r\n        mprog.add_offset_assembly('FRAME27_1.1', 'FRAME2.1', -(\r\n                apv['FRAME2']['F'] - apv['FRAME27_1']['B'] - apv['FRAME30']['M'] - apv['FRAME27_1']['J']) - zeta,\r\n                                  'YZ plane', 0, 56)\r\n        mprog.add_offset_assembly('FRAME27_1.1', 'FRAME2.1', apv['FRAME27_1']['I'] + apv['FRAME2']['CC'] / 2,\r\n                                  'ZX plane', 0, 57)\r\n        mprog.add_offset_assembly('FRAME29.1', 'FRAME4.1', -(\r\n                assmebly_par['Ass_Q'] + (apv['FRAME4']['A'] - apv['FRAME4']['a']) - apv['FRAME29']['A'] / 2),\r\n                                  'XY plane', 0, 94)\r\n        mprog.add_offset_assembly('FRAME29.1', 'FRAME4.1',\r\n                                  apv['FRAME29']['B'] - (apv['FRAME29']['B'] - apv['FRAME29']['F']), 'YZ plane', 0, 95)\r\n        mprog.add_offset_assembly('FRAME29.1', 'FRAME4.1',\r\n                                  apv['FRAME4']['B'] / 2 - apv['FRAME6']['e'] + apv['FRAME29']['A'] / 2, 'ZX plane', 0,\r\n                                  96)\r\n        mprog.add_offset_assembly('FRAME29.2', 'FRAME4.1', -(\r\n                assmebly_par['Ass_Q'] + (apv['FRAME4']['A'] - apv['FRAME4']['a']) - apv['FRAME29']['A'] / 2),\r\n                                  'XY plane', 0, 97)\r\n        mprog.add_offset_assembly('FRAME29.2', 'FRAME4.1',\r\n                                  apv['FRAME29']['B'] - (apv['FRAME29']['B'] - apv['FRAME29']['F']), 'YZ plane', 0, 98)\r\n        mprog.add_offset_assembly('FRAME29.2', 'FRAME4.1',\r\n                                  apv['FRAME4']['B'] / 2 + apv['FRAME6']['e'] + apv['FRAME29']['A'] / 2, 'ZX plane', 0,\r\n                                  99)\r\n        mprog.add_offset_assembly('FRAME33.1', 'FRAME1.1', 0, 'XY plane', 0, 19)\r\n        mprog.add_offset_assembly('FRAME33.1', 'FRAME1.1', -(apv['FRAME1']['B'] - apv['FRAME33']['B'] - apv['FRAME33']['M'] - apv['FRAME33']['O']) - zeta,\r\n                                  'YZ plane', 0, 20)\r\n        mprog.add_offset_assembly('FRAME33.1', 'FRAME1.1', -(apv['FRAME33']['K'] + apv['FRAME1']['CC'] / 2), 'ZX plane',\r\n                                  0, 21)\r\n        mprog.add_offset_assembly('FRAME34.1', 'FRAME2.1', 0, 'XY plane', 0, 22)\r\n        mprog.add_offset_assembly('FRAME34.1', 'FRAME2.1', -(apv['FRAME2']['B'] - apv['FRAME34']['B'] - apv['FRAME34']['Q'] - apv['FRAME34']['S']) - zeta,\r\n                                  'YZ plane', 0, 23)\r\n        mprog.add_offset_assembly('FRAME34.1', 'FRAME2.1', apv['FRAME2']['CC'] / 2, 'ZX plane', 0, 24)\r\n        mprog.add_offset_assembly('FRAME36.1', 'FRAME4.1', -(\r\n                (assmebly_par['Ass_J'] - apv['FRAME36']['A'] / 2) + (apv['FRAME4']['A'] - apv['FRAME4']['a'])),\r\n                                  'XY plane', 0, 67)\r\n        mprog.add_offset_assembly('FRAME36.1', 'FRAME4.1',\r\n                                  -(apv['FRAME4']['K'] + 7.5), 'YZ plane', 0,\r\n                                  68)\r\n        mprog.add_offset_assembly('FRAME36.1', 'FRAME4.1', apv['FRAME4']['B'] - apv['FRAME36']['D'], 'ZX plane', 0, 69)\r\n        mprog.add_offset_assembly('FRAME37.1', 'FRAME2.1',\r\n                                  -(apv['FRAME2']['A'] - apv['FRAME2']['ffff'] - apv['FRAME37']['A'] / 2), 'XY plane',\r\n                                  0, 142)\r\n        mprog.add_offset_assembly('FRAME37.1', 'FRAME2.1',\r\n                                  -(apv['FRAME2']['F'] - apv['FRAME2']['eeee'] - apv['FRAME37']['A'] / 2) - zeta,\r\n                                  'YZ plane', 0, 143)\r\n        mprog.add_offset_assembly('FRAME37.1', 'FRAME2.1', apv['FRAME2']['CC'] / 2, 'ZX plane', 0, 144)\r\n        mprog.add_offset_assembly('FRAME23.1', 'FRAME1.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 145)\r\n        mprog.add_offset_assembly('FRAME23.1', 'FRAME1.1', -(apv['FRAME1']['B'] - apv['FRAME23']['B']) - zeta,\r\n                                  'YZ plane', 0, 146)\r\n        mprog.add_offset_assembly('FRAME23.1', 'FRAME1.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  1, 147)\r\n        mprog.add_offset_assembly('FRAME23.2', 'FRAME1.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 148)\r\n        mprog.add_offset_assembly('FRAME23.2', 'FRAME1.1',\r\n                                  -(apv[\"FRAME1\"][\"B\"] - apv[\"FRAME23\"][\"B\"] - assmebly_par['Ass_Y']) - zeta,\r\n                                  'YZ plane', 0, 149)\r\n        mprog.add_offset_assembly('FRAME23.2', 'FRAME1.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  1, 150)\r\n        mprog.add_offset_assembly('FRAME23.3', 'FRAME2.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 151)\r\n        mprog.add_offset_assembly('FRAME23.3', 'FRAME2.1', (apv['FRAME1']['B']) + zeta,\r\n                                  'YZ plane', 1, 152)\r\n        mprog.add_offset_assembly('FRAME23.3', 'FRAME2.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  0, 153)\r\n        mprog.add_offset_assembly('FRAME23.4', 'FRAME2.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 154)\r\n        mprog.add_offset_assembly('FRAME23.4', 'FRAME2.1', (apv[\"FRAME1\"][\"B\"] - assmebly_par['Ass_Y']) + zeta,\r\n                                  'YZ plane', 1, 155)\r\n        mprog.add_offset_assembly('FRAME23.4', 'FRAME2.1', -(apv['FRAME2']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  0, 156)\r\n        mprog.add_offset_assembly('FRAME42.1', 'FRAME1.1', (apv['FRAME2']['A'] - apv['FRAME30']['A'] - (\r\n                apv['FRAME17']['g3'] - apv['FRAME17']['g2']) - apv['FRAME13']['k'] - apv['FRAME13']['j'] -\r\n                                                            assmebly_par['Ass_V'] - assmebly_par['Ass_S'] +\r\n                                                            apv['FRAME15']['A'] / 2 -\r\n                                                            apv['FRAME42']['A'] / 2 + beta), 'XY plane', 1, 167)\r\n        mprog.add_offset_assembly('FRAME42.1', 'FRAME1.1', -(\r\n                apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF'] - assmebly_par['Ass_T'] -\r\n                apv['FRAME15']['C'] - apv['FRAME42']['C']) - zeta, 'YZ plane', 0, 168)\r\n        mprog.add_offset_assembly('FRAME42.1', 'FRAME1.1', -(\r\n                apv['FRAME1']['CC'] / 2 + apv['FRAME19']['AH']),\r\n                                  'ZX plane', 0, 169)\r\n        mprog.add_offset_assembly('FRAME42.2', 'FRAME2.1', apv['FRAME2']['A'] - apv['FRAME30']['A'] - (\r\n                apv['FRAME17']['g3'] - apv['FRAME17']['g2']) - apv['FRAME13']['k'] - apv['FRAME13']['j'] -\r\n                                  assmebly_par['Ass_V'] - assmebly_par['Ass_S'] + apv['FRAME15']['A'] / 2 -\r\n                                  apv['FRAME42']['A'] / 2 + beta, 'XY plane', 1, 170)\r\n        mprog.add_offset_assembly('FRAME42.2', 'FRAME2.1', -(\r\n                apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF'] - assmebly_par['Ass_T'] -\r\n                apv['FRAME15']['C'] - apv['FRAME42']['C']) - zeta, 'YZ plane', 0, 171)\r\n        mprog.add_offset_assembly('FRAME42.2', 'FRAME2.1', (\r\n                apv['FRAME1']['CC'] / 2 + apv['FRAME19']['AH'] + apv['FRAME42']['B']),\r\n                                  'ZX plane', 0, 172)\r\n    elif stamping_press_type == 5:\r\n        mprog.add_offset_assembly('FRAME6.1', 'FRAME4.1',\r\n                                  assmebly_par['Ass_Q'] - (apv['FRAME4']['A'] - apv['FRAME4']['a'] + apv['FRAME6']['E']/2) + apv['FRAME6']['E'], 'XY plane', 0, 88)\r\n        mprog.add_offset_assembly('FRAME6.1', 'FRAME4.1', apv['FRAME19']['L'], 'YZ plane', 1, 89)\r\n        mprog.add_offset_assembly('FRAME6.1', 'FRAME4.1', -(apv['FRAME6']['B']), 'ZX plane', 1,\r\n                                  90)\r\n        mprog.add_offset_assembly('FRAME6.2', 'FRAME4.1',\r\n                                  -(assmebly_par['Ass_Q'] - (apv['FRAME4']['A'] - apv['FRAME4']['a']) - apv['FRAME6'][\r\n                                      'E'] / 2), 'XY plane', 1, 91)\r\n        mprog.add_offset_assembly('FRAME6.2', 'FRAME4.1', apv['FRAME19']['L'], 'YZ plane', 1, 92)\r\n        mprog.add_offset_assembly('FRAME6.2', 'FRAME4.1', apv['FRAME4']['B'] - apv['FRAME6']['B'], 'ZX plane', 0,\r\n                                  93)\r\n        mprog.add_offset_assembly('FRAME11.1', 'FRAME3.1',\r\n                                  -(apv['FRAME3']['A'] - apv['FRAME3']['E'] - apv['FRAME11']['A'] / 2), 'XY plane', 0,\r\n                                  64)\r\n        mprog.add_offset_assembly('FRAME11.1', 'FRAME3.1', apv['FRAME3']['O'] + assmebly_par['Ass_I'], 'YZ plane', 0,\r\n                                  65)\r\n        mprog.add_offset_assembly('FRAME11.1', 'FRAME3.1', apv['FRAME3']['B'] / 2 + apv['FRAME11']['A'] / 2, 'ZX plane',\r\n                                  0, 66)\r\n        mprog.add_offset_assembly('FRAME15.1', 'FRAME1.1', -(\r\n                apv['FRAME1']['A'] - apv['FRAME30']['A'] - assmebly_par['Ass_S'] - apv['FRAME17']['g3']) - beta,\r\n                                  'XY plane', 0,\r\n                                  115)\r\n        mprog.add_offset_assembly('FRAME15.1', 'FRAME1.1',\r\n                                  -(apv['FRAME1']['F'] - apv['FRAME1']['G'] - apv['FRAME2']['FF'] - assmebly_par[\r\n                                      'Ass_T'] - apv['FRAME15']['F'] + zeta),\r\n                                  'YZ plane', 0, 116)\r\n        mprog.add_offset_assembly('FRAME15.1', 'FRAME1.1',\r\n                                  -(apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2), 'ZX plane', 0, 117)\r\n        mprog.add_offset_assembly('FRAME15.2', 'FRAME2.1', -(\r\n                apv['FRAME2']['A'] - apv['FRAME30']['A'] - assmebly_par['Ass_S'] - apv['FRAME17']['g3']) - beta,\r\n                                  'XY plane', 0,\r\n                                  118)\r\n        mprog.add_offset_assembly('FRAME15.2', 'FRAME2.1',\r\n                                  -(apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF'] - assmebly_par[\r\n                                      'Ass_T'] - apv['FRAME15']['F'] + zeta),\r\n                                  'YZ plane', 0, 119)\r\n        mprog.add_offset_assembly('FRAME15.2', 'FRAME2.1',\r\n                                  (apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2 - apv['FRAME15']['B']),\r\n                                  'ZX plane',\r\n                                  0, 120)\r\n        mprog.add_offset_assembly('FRAME15.3', 'FRAME1.1', apv['FRAME2']['A'] - apv['FRAME30']['A'] - (\r\n                    apv['FRAME17']['g3'] - apv['FRAME17']['g2']) - apv['FRAME13']['k'] - apv['FRAME13']['j'] -\r\n                                  assmebly_par['Ass_V'] - assmebly_par['Ass_S'] + apv['FRAME15']['A'] + beta, 'XY plane', 1, 127)\r\n        mprog.add_offset_assembly('FRAME15.3', 'FRAME1.1', -(\r\n                    apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF'] - assmebly_par['Ass_T'] -\r\n                    apv['FRAME15']['F']) - zeta, 'YZ plane', 0, 128)\r\n        mprog.add_offset_assembly('FRAME15.3', 'FRAME1.1', (\r\n                    apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2 - apv['FRAME15']['B']),\r\n                                  'ZX plane', 1, 129)\r\n        mprog.add_offset_assembly('FRAME15.4', 'FRAME2.1', apv['FRAME2']['A'] - apv['FRAME30']['A'] - (\r\n                    apv['FRAME17']['g3'] - apv['FRAME17']['g2']) - apv['FRAME13']['k'] - apv['FRAME13']['j'] -\r\n                                  assmebly_par['Ass_V'] - assmebly_par['Ass_S'] + apv['FRAME15']['A'] + beta, 'XY plane', 1, 130)\r\n        mprog.add_offset_assembly('FRAME15.4', 'FRAME2.1', -(\r\n                    apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF'] - assmebly_par['Ass_T'] -\r\n                    apv['FRAME15']['F']) - zeta, 'YZ plane', 0, 131)\r\n        mprog.add_offset_assembly('FRAME15.4', 'FRAME2.1',\r\n                                  -(apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2),\r\n                                  'ZX plane', 1, 132)\r\n        mprog.add_offset_assembly('FRAME29.1', 'FRAME4.1', -(\r\n                assmebly_par['Ass_Q'] + (apv['FRAME4']['A'] - apv['FRAME4']['a']) - apv['FRAME29']['A'] / 2),\r\n                                  'XY plane', 0, 94)\r\n        mprog.add_offset_assembly('FRAME29.1', 'FRAME4.1',(apv['FRAME29']['B'] - apv['FRAME29']['F']), 'YZ plane', 1, 95)\r\n        mprog.add_offset_assembly('FRAME29.1', 'FRAME4.1',\r\n                                  -(apv['FRAME4']['B'] / 2 - apv['FRAME6']['e'] - apv['FRAME29']['A'] / 2), 'ZX plane', 1,\r\n                                  96)\r\n        mprog.add_offset_assembly('FRAME29.2', 'FRAME4.1', -(\r\n                assmebly_par['Ass_Q'] + (apv['FRAME4']['A'] - apv['FRAME4']['a']) - apv['FRAME29']['A'] / 2),\r\n                                  'XY plane', 0, 97)\r\n        mprog.add_offset_assembly('FRAME29.2', 'FRAME4.1',(apv['FRAME29']['B'] - apv['FRAME29']['F']), 'YZ plane', 1, 98)\r\n        mprog.add_offset_assembly('FRAME29.2', 'FRAME4.1',\r\n                                  -(apv['FRAME4']['B'] / 2 + apv['FRAME6']['e'] - apv['FRAME29']['A'] / 2), 'ZX plane', 1,\r\n                                  99)\r\n        mprog.add_offset_assembly('FRAME23.1', 'FRAME1.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 145)\r\n        mprog.add_offset_assembly('FRAME23.1', 'FRAME1.1', -(apv['FRAME1']['B'] - apv['FRAME23']['B']) - zeta,\r\n                                  'YZ plane', 0, 146)\r\n        mprog.add_offset_assembly('FRAME23.1', 'FRAME1.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  1, 147)\r\n        mprog.add_offset_assembly('FRAME23.2', 'FRAME1.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 148)\r\n        mprog.add_offset_assembly('FRAME23.2', 'FRAME1.1',\r\n                                  -(apv[\"FRAME1\"][\"B\"] - apv[\"FRAME23\"][\"B\"] - assmebly_par['Ass_Y']) - zeta,\r\n                                  'YZ plane', 0, 149)\r\n        mprog.add_offset_assembly('FRAME23.2', 'FRAME1.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  1, 150)\r\n        mprog.add_offset_assembly('FRAME23.3', 'FRAME2.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 151)\r\n        mprog.add_offset_assembly('FRAME23.3', 'FRAME2.1', (apv['FRAME1']['B']) + zeta,\r\n                                  'YZ plane', 1, 152)\r\n        mprog.add_offset_assembly('FRAME23.3', 'FRAME2.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  0, 153)\r\n        mprog.add_offset_assembly('FRAME23.4', 'FRAME2.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 154)\r\n        mprog.add_offset_assembly('FRAME23.4', 'FRAME2.1', (apv[\"FRAME1\"][\"B\"] - assmebly_par['Ass_Y']) + zeta,\r\n                                  'YZ plane', 1, 155)\r\n        mprog.add_offset_assembly('FRAME23.4', 'FRAME2.1', -(apv['FRAME2']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  0, 156)\r\n        mprog.add_offset_assembly('FRAME50.1', 'FRAME4.1',\r\n                                  -(apv[\"FRAME4\"][\"k\"] + assmebly_par['Ass_AC'] - apv[\"FRAME50\"][\"B\"]/2), 'XY plane', 0, 173)\r\n        mprog.add_offset_assembly('FRAME50.1', 'FRAME4.1', -(apv[\"FRAME50\"][\"c\"]),\r\n                                  'YZ plane', 1, 174)\r\n        mprog.add_offset_assembly('FRAME50.1', 'FRAME4.1', -(apv['FRAME4']['B'] / 2 - assmebly_par['Ass_AB'] + apv['FRAME50']['B']/2), 'ZX plane',\r\n                                  1, 175)\r\n        mprog.add_offset_assembly('FRAME49.1', 'FRAME4.1',-(apv[\"FRAME4\"][\"k\"] + assmebly_par['Ass_AE']), 'XY plane', 0, 176)\r\n        mprog.add_offset_assembly('FRAME49.1', 'FRAME4.1', 0,\r\n                                  'YZ plane', 1, 177)\r\n        mprog.add_offset_assembly('FRAME49.1', 'FRAME4.1',\r\n                                  -(apv['FRAME4']['B'] / 2 - assmebly_par['Ass_AD']),'ZX plane',1, 178)\r\n        mprog.add_offset_assembly('FRAME48.1', 'FRAME8.1', (apv[\"FRAME48\"][\"B\"]), 'XY plane', 0, 179)\r\n        mprog.add_offset_assembly('FRAME48.1', 'FRAME8.1', apv[\"FRAME48\"][\"C\"],'YZ plane', 1, 180)\r\n        mprog.add_offset_assembly('FRAME48.1', 'FRAME8.1',0, 'ZX plane', 1, 181)\r\n        mprog.add_offset_assembly('FRAME48.2', 'FRAME8.1', (apv[\"FRAME48\"][\"B\"]), 'XY plane', 0, 182)\r\n        mprog.add_offset_assembly('FRAME48.2', 'FRAME8.1', (assmebly_par['Ass_AF'] + apv[\"FRAME48\"][\"C\"]), 'YZ plane', 1, 183)\r\n        mprog.add_offset_assembly('FRAME48.2', 'FRAME8.1', 0, 'ZX plane', 1, 184)\r\n        mprog.add_offset_assembly('FRAME23_1.1', 'FRAME22.1', -(apv[\"FRAME22\"][\"A(1)\"] - apv[\"FRAME22\"][\"A(2)\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 185)\r\n        mprog.add_offset_assembly('FRAME23_1.1', 'FRAME22.1', -(apv[\"FRAME22\"][\"O\"] + apv[\"FRAME23\"][\"A\"]), 'YZ plane',\r\n                                  0, 186)\r\n        mprog.add_offset_assembly('FRAME23_1.1', 'FRAME22.1', (apv[\"FRAME22\"][\"D\"]/2 + apv[\"FRAME23\"][\"B\"]/2), 'ZX plane', 0, 187)\r\n        mprog.add_offset_assembly('FRAME47.1', 'FRAME22.1', -(apv[\"FRAME22\"][\"A(1)\"] - apv[\"FRAME22\"][\"A(2)\"] - apv[\"FRAME47\"][\"E\"]), 'XY plane',\r\n                                  0, 188)\r\n        mprog.add_offset_assembly('FRAME47.1', 'FRAME7.1', -apv[\"FRAME47\"][\"B\"], 'YZ plane',\r\n                                  1, 189)\r\n        mprog.add_offset_assembly('FRAME47.1', 'FRAME22.1', -(apv[\"FRAME22\"][\"D\"] / 2 - apv[\"FRAME47\"][\"B\"] / 2),\r\n                                  'ZX plane', 1, 190)\r\n        mprog.add_offset_assembly('FRAME45.1', 'FRAME13.1', 0, 'XY plane', 0, 191)\r\n        mprog.add_offset_assembly('FRAME45.1', 'FRAME13.1', apv[\"FRAME45\"][\"A\"] + apv[\"FRAME13\"][\"H\"], 'YZ plane',\r\n                                  1, 192)\r\n        mprog.add_offset_assembly('FRAME45.1', 'FRAME13.1', -apv[\"FRAME45\"][\"C\"],\r\n                                  'ZX plane', 0, 193)\r\n        mprog.add_offset_assembly('FRAME45.2', 'FRAME13_1.1', apv[\"FRAME45\"][\"H\"], 'XY plane',\r\n                                  1, 194)\r\n        mprog.add_offset_assembly('FRAME45.2', 'FRAME13_1.1', apv[\"FRAME45\"][\"A\"] + apv[\"FRAME13\"][\"H\"], 'YZ plane',\r\n                                  1, 195)\r\n        mprog.add_offset_assembly('FRAME45.2', 'FRAME13_1.1', -(apv[\"FRAME45\"][\"C\"] - apv[\"FRAME13\"][\"I\"]),\r\n                                  'ZX plane', 1, 196)\r\n        mprog.add_offset_assembly('FRAME43.1', 'FRAME13.1', apv[\"FRAME13\"][\"j\"] + apv[\"FRAME13\"][\"k\"] + assmebly_par['Ass_AI'] + apv[\"FRAME43\"][\"C\"]/2, 'XY plane',\r\n                                  1, 197)\r\n        mprog.add_offset_assembly('FRAME43.1', 'FRAME13.1', apv[\"FRAME43\"][\"B\"], 'YZ plane',1, 198)\r\n        mprog.add_offset_assembly('FRAME43.1', 'FRAME13.1', 0, 'ZX plane', 0, 199)\r\n        mprog.add_offset_assembly('FRAME43.2', 'FRAME13_1.1',\r\n                                  -(apv[\"FRAME13\"][\"j\"] + apv[\"FRAME13\"][\"k\"] + assmebly_par['Ass_AI'] - apv[\"FRAME43\"][\r\n                                      \"C\"]) , 'XY plane',\r\n                                  0, 200)\r\n        mprog.add_offset_assembly('FRAME43.2', 'FRAME13_1.1', apv[\"FRAME43\"][\"B\"], 'YZ plane', 1, 201)\r\n        mprog.add_offset_assembly('FRAME43.2', 'FRAME13_1.1', apv[\"FRAME13\"][\"I\"] + (apv[\"FRAME13\"][\"E\"] - apv[\"FRAME13\"][\"I\"]), 'ZX plane', 1, 202)\r\n        mprog.add_offset_assembly('FRAME52.1', 'FRAME22.1',\r\n                                  -(apv[\"FRAME22\"][\"A(1)\"] - apv[\"FRAME22\"][\"A(2)\"] - apv[\"FRAME52\"][\"C\"]), 'XY plane',\r\n                                  0, 212)\r\n        mprog.add_offset_assembly('FRAME52.1', 'FRAME22.1', 0, 'YZ plane', 0, 213)\r\n        mprog.add_offset_assembly('FRAME52.1', 'FRAME22.1', apv[\"FRAME22\"][\"D\"] - apv[\"FRAME19\"][\"AH\"], 'ZX plane', 0, 214)\r\n        mprog.add_offset_assembly('FRAME52.2', 'FRAME22.1',\r\n                                  -(apv[\"FRAME22\"][\"A(1)\"] - apv[\"FRAME22\"][\"A(2)\"] - apv[\"FRAME52\"][\"C\"]), 'XY plane',\r\n                                  0, 215)\r\n        mprog.add_offset_assembly('FRAME52.2', 'FRAME22.1', -(apv[\"FRAME52\"][\"B\"]), 'YZ plane', 1, 216)\r\n        mprog.add_offset_assembly('FRAME52.2', 'FRAME22.1', -(apv[\"FRAME19\"][\"AH\"]), 'ZX plane', 1,\r\n                                  217)\r\n        #STP組立部分\r\n        mprog.add_offset_assembly(S_i.PANEL_BOX_BRACKET_list_normal[stamping_press_type] + '.1', S_i.ELECTRIC_BOX_list_normal[stamping_press_type] + '.1',\r\n                                  (S_assmebly_par['PBB_XY']), 'XY plane', 0, 269)\r\n        mprog.add_offset_assembly(S_i.PANEL_BOX_BRACKET_list_normal[stamping_press_type] + '.1', S_i.ELECTRIC_BOX_list_normal[stamping_press_type] + '.1',\r\n                                  (S_assmebly_par['PBB_YZ']), 'YZ plane', 0, 270)\r\n        mprog.add_offset_assembly(S_i.PANEL_BOX_BRACKET_list_normal[stamping_press_type] + '.1', S_i.ELECTRIC_BOX_list_normal[stamping_press_type] + '.1', (S_assmebly_par['PBB_ZX']),\r\n                                  'ZX plane', 1, 271)\r\n        mprog.add_offset_assembly(S_i.PANEL_BOX_list_normal[stamping_press_type] + '.1',S_i.PANEL_BOX_BRACKET_list_normal[stamping_press_type] + '.1',\r\n                                  (S_assmebly_par['PB_XY']), 'XY plane', 0, 272)\r\n        mprog.add_offset_assembly(S_i.PANEL_BOX_list_normal[stamping_press_type] + '.1',S_i.PANEL_BOX_BRACKET_list_normal[stamping_press_type] + '.1',\r\n                                  (S_assmebly_par['PB_YZ']), 'YZ plane', 1, 273)\r\n        mprog.add_offset_assembly(S_i.PANEL_BOX_list_normal[stamping_press_type] + '.1',S_i.PANEL_BOX_BRACKET_list_normal[stamping_press_type] + '.1', -(S_assmebly_par['PB_ZX']),\r\n                                  'ZX plane', 1, 274)\r\n        mprog.add_offset_assembly(S_i.CONTROL_PANEL_list_normal[stamping_press_type] + '.1',S_i.PANEL_BOX_list_normal[stamping_press_type] + '.1',\r\n                                  (S_assmebly_par['CP_XY']), 'XY plane', 1, 275)\r\n        mprog.add_offset_assembly(S_i.CONTROL_PANEL_list_normal[stamping_press_type] + '.1',S_i.PANEL_BOX_list_normal[stamping_press_type] + '.1',\r\n                                  -(S_assmebly_par['CP_YZ']), 'YZ plane', 1, 276)\r\n        mprog.add_offset_assembly(S_i.CONTROL_PANEL_list_normal[stamping_press_type] + '.1',S_i.PANEL_BOX_list_normal[stamping_press_type] + '.1', -(S_assmebly_par['CP_ZX']),\r\n                                  'ZX plane', 1, 277)\r\n\r\n    elif stamping_press_type == 8:\r\n        mprog.add_offset_assembly('FRAME15.1', 'FRAME1.1', -(\r\n                apv['FRAME1']['A'] - apv['FRAME30']['A'] - assmebly_par['Ass_S'] - apv['FRAME17']['g3']) - beta,\r\n                                  'XY plane', 0,\r\n                                  115)\r\n        mprog.add_offset_assembly('FRAME15.1', 'FRAME1.1',\r\n                                  -(apv['FRAME1']['F'] - apv['FRAME1']['G'] - apv['FRAME2']['FF'] - assmebly_par[\r\n                                      'Ass_T'] - apv['FRAME15']['F'] + zeta),\r\n                                  'YZ plane', 0, 116)\r\n        mprog.add_offset_assembly('FRAME15.1', 'FRAME1.1',\r\n                                  -(apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2), 'ZX plane', 0, 117)\r\n        mprog.add_offset_assembly('FRAME15.2', 'FRAME2.1', -(\r\n                apv['FRAME2']['A'] - apv['FRAME30']['A'] - assmebly_par['Ass_S'] - apv['FRAME17']['g3']) - beta,\r\n                                  'XY plane', 0,\r\n                                  118)\r\n        mprog.add_offset_assembly('FRAME15.2', 'FRAME2.1',\r\n                                  -(apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF'] - assmebly_par[\r\n                                      'Ass_T'] - apv['FRAME15']['F'] + zeta),\r\n                                  'YZ plane', 0, 119)\r\n        mprog.add_offset_assembly('FRAME15.2', 'FRAME2.1',\r\n                                  (apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2 - apv['FRAME15']['B']),\r\n                                  'ZX plane',\r\n                                  0, 120)\r\n        mprog.add_offset_assembly('FRAME51.1', 'FRAME1.1', -(apv['FRAME2']['A'] - apv['FRAME30']['A'] - (\r\n                    apv['FRAME17']['g3'] - apv['FRAME17']['g2']) - apv['FRAME13']['k'] - apv['FRAME13']['j'] -\r\n                                  assmebly_par['Ass_V'] - assmebly_par['Ass_S'] + apv['FRAME15']['A'] - apv['FRAME51']['A']  + beta), 'XY plane', 0, 127)\r\n        mprog.add_offset_assembly('FRAME51.1', 'FRAME1.1', -(\r\n            apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF'] - assmebly_par[\r\n                'Ass_T'] - apv['FRAME15']['F'] + zeta), 'YZ plane', 0, 128)\r\n        mprog.add_offset_assembly('FRAME51.1', 'FRAME1.1', -(\r\n                    apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2 - apv['FRAME15']['B']+apv['FRAME51']['E']),\r\n                                  'ZX plane', 0, 129)\r\n        mprog.add_offset_assembly('FRAME51_1.1', 'FRAME2.1', -(apv['FRAME2']['A'] - apv['FRAME30']['A'] - (\r\n                    apv['FRAME17']['g3'] - apv['FRAME17']['g2']) - apv['FRAME13']['k'] - apv['FRAME13']['j'] -\r\n                                  assmebly_par['Ass_V'] - assmebly_par['Ass_S'] + apv['FRAME15']['A'] - apv['FRAME51']['A'] + beta), 'XY plane', 0, 130)\r\n        mprog.add_offset_assembly('FRAME51_1.1', 'FRAME2.1', -(\r\n            apv['FRAME2']['F'] - apv['FRAME2']['G'] - apv['FRAME2']['FF'] - assmebly_par[\r\n                'Ass_T'] - apv['FRAME15']['F'] + zeta), 'YZ plane', 0, 131)\r\n        mprog.add_offset_assembly('FRAME51_1.1', 'FRAME2.1',\r\n                                  (apv['FRAME3']['B'] / 2 - assmebly_par['Ass_U'] + apv['FRAME1']['CC'] / 2 - apv['FRAME51']['E']),\r\n                                  'ZX plane', 0, 132)\r\n        mprog.add_offset_assembly('FRAME29.1', 'FRAME4.1', -(\r\n                assmebly_par['Ass_Q'] + (apv['FRAME4']['A'] - apv['FRAME4']['a']) - apv['FRAME29']['A'] / 2),\r\n                                  'XY plane', 0, 94)\r\n        mprog.add_offset_assembly('FRAME29.1', 'FRAME4.1',(apv['FRAME29']['B'] - apv['FRAME29']['F']), 'YZ plane', 1, 95)\r\n        mprog.add_offset_assembly('FRAME29.1', 'FRAME4.1',\r\n                                  -(apv['FRAME4']['B'] / 2 - apv['FRAME29']['A'] / 2 + assmebly_par['Ass_Q']), 'ZX plane', 1,\r\n                                  96)\r\n        mprog.add_offset_assembly('FRAME29.2', 'FRAME4.1', -(\r\n                assmebly_par['Ass_Q'] + (apv['FRAME4']['A'] - apv['FRAME4']['a']) - apv['FRAME29']['A'] / 2),\r\n                                  'XY plane', 0, 97)\r\n        mprog.add_offset_assembly('FRAME29.2', 'FRAME4.1',(apv['FRAME29']['B'] - apv['FRAME29']['F']), 'YZ plane', 1, 98)\r\n        mprog.add_offset_assembly('FRAME29.2', 'FRAME4.1',\r\n                                  -(apv['FRAME4']['B'] / 2 - apv['FRAME29']['A'] / 2 - assmebly_par['Ass_Q']), 'ZX plane', 1,\r\n                                  99)\r\n        mprog.add_offset_assembly('FRAME23.1', 'FRAME1.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 145)\r\n        mprog.add_offset_assembly('FRAME23.1', 'FRAME1.1', -(apv['FRAME1']['B'] - apv['FRAME23']['B']) - zeta,\r\n                                  'YZ plane', 0, 146)\r\n        mprog.add_offset_assembly('FRAME23.1', 'FRAME1.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  1, 147)\r\n        mprog.add_offset_assembly('FRAME23.2', 'FRAME1.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 148)\r\n        mprog.add_offset_assembly('FRAME23.2', 'FRAME1.1',\r\n                                  -(apv[\"FRAME1\"][\"B\"] - apv[\"FRAME23\"][\"B\"] - assmebly_par['Ass_Y']) - zeta,\r\n                                  'YZ plane', 0, 149)\r\n        mprog.add_offset_assembly('FRAME23.2', 'FRAME1.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  1, 150)\r\n        mprog.add_offset_assembly('FRAME23.3', 'FRAME2.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 151)\r\n        mprog.add_offset_assembly('FRAME23.3', 'FRAME2.1', (apv['FRAME1']['B']) + zeta,\r\n                                  'YZ plane', 1, 152)\r\n        mprog.add_offset_assembly('FRAME23.3', 'FRAME2.1', -(apv['FRAME1']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  0, 153)\r\n        mprog.add_offset_assembly('FRAME23.4', 'FRAME2.1',\r\n                                  -(apv[\"FRAME1\"][\"E\"] - apv[\"FRAME1\"][\"DD\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 154)\r\n        mprog.add_offset_assembly('FRAME23.4', 'FRAME2.1', (apv[\"FRAME1\"][\"B\"] - assmebly_par['Ass_Y']) + zeta,\r\n                                  'YZ plane', 1, 155)\r\n        mprog.add_offset_assembly('FRAME23.4', 'FRAME2.1', -(apv['FRAME2']['CC'] / 2 + apv['FRAME23']['A']), 'ZX plane',\r\n                                  0, 156)\r\n        mprog.add_offset_assembly('FRAME50.1', 'FRAME4.1',\r\n                                  -(apv[\"FRAME4\"][\"k\"] + assmebly_par['Ass_AC'] - apv[\"FRAME50\"][\"B\"]/2), 'XY plane', 0, 173)\r\n        mprog.add_offset_assembly('FRAME50.1', 'FRAME4.1', -(apv[\"FRAME50\"][\"c\"]),\r\n                                  'YZ plane', 1, 174)\r\n        mprog.add_offset_assembly('FRAME50.1', 'FRAME4.1', -(apv['FRAME4']['B'] / 2 - assmebly_par['Ass_AB'] + apv['FRAME50']['B']/2), 'ZX plane',\r\n                                  1, 175)\r\n        mprog.add_offset_assembly('FRAME49.1', 'FRAME4.1',\r\n                                  -(apv[\"FRAME4\"][\"k\"] + assmebly_par[\r\n                                      'Ass_AE']), 'XY plane', 0, 176)\r\n        mprog.add_offset_assembly('FRAME49.1', 'FRAME4.1', 0,\r\n                                  'YZ plane', 1, 177)\r\n        mprog.add_offset_assembly('FRAME49.1', 'FRAME4.1',\r\n                                  -(apv['FRAME4']['B'] / 2 - assmebly_par['Ass_AD']),'ZX plane',1, 178)\r\n        mprog.add_offset_assembly('FRAME48.1', 'FRAME8.1', (apv[\"FRAME48\"][\"B\"]), 'XY plane', 0, 179)\r\n        mprog.add_offset_assembly('FRAME48.1', 'FRAME8.1', apv[\"FRAME48\"][\"C\"],'YZ plane', 1, 180)\r\n        mprog.add_offset_assembly('FRAME48.1', 'FRAME8.1',0, 'ZX plane', 1, 181)\r\n        mprog.add_offset_assembly('FRAME48.2', 'FRAME8.1', (apv[\"FRAME48\"][\"B\"]), 'XY plane', 0, 182)\r\n        mprog.add_offset_assembly('FRAME48.2', 'FRAME8.1', (assmebly_par['Ass_AF'] + apv[\"FRAME48\"][\"C\"]), 'YZ plane', 1, 183)\r\n        mprog.add_offset_assembly('FRAME48.2', 'FRAME8.1', 0, 'ZX plane', 1, 184)\r\n        mprog.add_offset_assembly('FRAME23_1.1', 'FRAME22.1', -(apv[\"FRAME22\"][\"A(1)\"] - apv[\"FRAME22\"][\"A(2)\"] - apv[\"FRAME23\"][\"I\"]), 'XY plane', 0, 185)\r\n        mprog.add_offset_assembly('FRAME23_1.1', 'FRAME22.1', -(apv[\"FRAME22\"][\"O\"] + apv[\"FRAME23\"][\"A\"]), 'YZ plane',\r\n                                  0, 186)\r\n        mprog.add_offset_assembly('FRAME23_1.1', 'FRAME22.1', (apv[\"FRAME22\"][\"D\"]/2 + apv[\"FRAME23\"][\"B\"]/2), 'ZX plane', 0, 187)\r\n        mprog.add_offset_assembly('FRAME47.1', 'FRAME22.1', -(apv[\"FRAME22\"][\"A(1)\"] - apv[\"FRAME22\"][\"A(2)\"] - apv[\"FRAME47\"][\"E\"]), 'XY plane',\r\n                                  0, 188)\r\n        mprog.add_offset_assembly('FRAME47.1', 'FRAME7.1', -apv[\"FRAME47\"][\"B\"], 'YZ plane',\r\n                                  1, 189)\r\n        mprog.add_offset_assembly('FRAME47.1', 'FRAME22.1', -(apv[\"FRAME22\"][\"D\"] / 2 - apv[\"FRAME47\"][\"B\"] / 2),\r\n                                  'ZX plane', 1, 190)\r\n        mprog.add_offset_assembly('FRAME45.1', 'FRAME13.1', 0, 'XY plane', 0, 191)\r\n        mprog.add_offset_assembly('FRAME45.1', 'FRAME13.1', apv[\"FRAME45\"][\"A\"] + apv[\"FRAME13\"][\"H\"], 'YZ plane',\r\n                                  1, 192)\r\n        mprog.add_offset_assembly('FRAME45.1', 'FRAME13.1', -apv[\"FRAME45\"][\"C\"],\r\n                                  'ZX plane', 0, 193)\r\n        mprog.add_offset_assembly('FRAME45.2', 'FRAME13_1.1', apv[\"FRAME45\"][\"H\"], 'XY plane',\r\n                                  1, 194)\r\n        mprog.add_offset_assembly('FRAME45.2', 'FRAME13_1.1', apv[\"FRAME45\"][\"A\"] + apv[\"FRAME13\"][\"H\"], 'YZ plane',\r\n                                  1, 195)\r\n        mprog.add_offset_assembly('FRAME45.2', 'FRAME13_1.1', -(apv[\"FRAME45\"][\"C\"] - apv[\"FRAME13\"][\"I\"]),\r\n                                  'ZX plane', 1, 196)\r\n        mprog.add_offset_assembly('FRAME43.1', 'FRAME13.1', apv[\"FRAME13\"][\"j\"] + apv[\"FRAME13\"][\"k\"] + assmebly_par['Ass_AI'] + apv[\"FRAME43\"][\"C\"]/2, 'XY plane',\r\n                                  1, 197)\r\n        mprog.add_offset_assembly('FRAME43.1', 'FRAME13.1', apv[\"FRAME43\"][\"B\"], 'YZ plane',1, 198)\r\n        mprog.add_offset_assembly('FRAME43.1', 'FRAME13.1', 0, 'ZX plane', 0, 199)\r\n        mprog.add_offset_assembly('FRAME43.2', 'FRAME13_1.1',\r\n                                  -(apv[\"FRAME13\"][\"j\"] + apv[\"FRAME13\"][\"k\"] + assmebly_par['Ass_AI'] - apv[\"FRAME43\"][\r\n                                      \"C\"]) , 'XY plane', 0, 200)\r\n        mprog.add_offset_assembly('FRAME43.2', 'FRAME13_1.1', apv[\"FRAME43\"][\"B\"], 'YZ plane', 1, 201)\r\n        mprog.add_offset_assembly('FRAME43.2', 'FRAME13_1.1', apv[\"FRAME13\"][\"E\"], 'ZX plane', 1, 202)\r\n        mprog.add_offset_assembly('FRAME29.3', 'FRAME4.1', (\r\n                assmebly_par['Ass_Q'] - (apv['FRAME4']['A'] - apv['FRAME4']['a']) + apv['FRAME29']['A'] / 2),\r\n                                  'XY plane', 0, 203)\r\n        mprog.add_offset_assembly('FRAME29.3', 'FRAME4.1', (apv['FRAME29']['B'] - apv['FRAME29']['F']), 'YZ plane', 1,\r\n                                  204)\r\n        mprog.add_offset_assembly('FRAME29.3', 'FRAME4.1',\r\n                                  -(apv['FRAME4']['B'] / 2 - apv['FRAME29']['A'] / 2 + assmebly_par['Ass_Q']), 'ZX plane',\r\n                                  1,\r\n                                  205)\r\n        mprog.add_offset_assembly('FRAME29.4', 'FRAME4.1', (\r\n                assmebly_par['Ass_Q'] - (apv['FRAME4']['A'] - apv['FRAME4']['a']) + apv['FRAME29']['A'] / 2),\r\n                                  'XY plane', 0, 206)\r\n        mprog.add_offset_assembly('FRAME29.4', 'FRAME4.1', (apv['FRAME29']['B'] - apv['FRAME29']['F']), 'YZ plane', 1,\r\n                                  207)\r\n        mprog.add_offset_assembly('FRAME29.4', 'FRAME4.1',\r\n                                  -(apv['FRAME4']['B'] / 2 - apv['FRAME29']['A'] / 2 - assmebly_par['Ass_Q']), 'ZX plane',\r\n                                  1,\r\n                                  208)\r\n        mprog.add_offset_assembly('FRAME11.1', 'FRAME3.1', -(apv['FRAME3']['A']-apv['FRAME3']['E']-apv['FRAME11']['A']/2), 'XY plane', 0, 64)\r\n        mprog.add_offset_assembly('FRAME11.1', 'FRAME3.1', apv['FRAME3']['O']+assmebly_par['Ass_I'], 'YZ plane', 0, 65)\r\n        mprog.add_offset_assembly('FRAME11.1', 'FRAME3.1', apv['FRAME3']['B']/2+apv['FRAME11']['A']/2, 'ZX plane', 0, 66)\r\n        mprog.add_offset_assembly('FRAME54.1', 'FRAME30.1',\r\n                                  -(apv['FRAME30']['h']-apv['FRAME54']['D']), 'XY plane', 0,\r\n                                  209)\r\n        mprog.add_offset_assembly('FRAME54.1', 'FRAME30.1', apv['FRAME30']['M']/2 + apv['FRAME54']['F'], 'YZ plane', 0,\r\n                                  210)\r\n        mprog.add_offset_assembly('FRAME54.1', 'FRAME30.1', apv['FRAME30']['E'] / 2 - apv['FRAME30']['i(2)'], 'ZX plane',\r\n                                  0, 211)\r\n        mprog.add_offset_assembly('FRAME52.1', 'FRAME22.1',\r\n                                  -(apv[\"FRAME22\"][\"A(1)\"] - apv[\"FRAME22\"][\"A(2)\"] - apv[\"FRAME52\"][\"C\"]), 'XY plane',\r\n                                  0, 212)\r\n        mprog.add_offset_assembly('FRAME52.1', 'FRAME22.1', 0, 'YZ plane', 0, 213)\r\n        mprog.add_offset_assembly('FRAME52.1', 'FRAME22.1', apv[\"FRAME22\"][\"D\"] - apv[\"FRAME19\"][\"AH\"], 'ZX plane', 0,\r\n                                  214)\r\n        mprog.add_offset_assembly('FRAME52.2', 'FRAME22.1',\r\n                                  -(apv[\"FRAME22\"][\"A(1)\"] - apv[\"FRAME22\"][\"A(2)\"] - apv[\"FRAME52\"][\"C\"]), 'XY plane',\r\n                                  0, 215)\r\n        mprog.add_offset_assembly('FRAME52.2', 'FRAME22.1', -(apv[\"FRAME52\"][\"B\"]), 'YZ plane', 1, 216)\r\n        mprog.add_offset_assembly('FRAME52.2', 'FRAME22.1', -(apv[\"FRAME19\"][\"AH\"]), 'ZX plane', 1,\r\n                                  217)\r\n        mprog.add_offset_assembly('FRAME53.1', 'FRAME11.1',\r\n                                  -(apv[\"FRAME11\"][\"A\"]/2 + 138.5), 'XY plane',\r\n                                  0, 218)\r\n        mprog.add_offset_assembly('FRAME53.1', 'FRAME11.1', -(apv[\"FRAME11\"][\"B\"] - apv[\"FRAME53\"][\"B\"] -(assmebly_par['Ass_AJ'] - apv[\"FRAME53\"][\"B\"])), 'YZ plane', 0, 219)\r\n        mprog.add_offset_assembly('FRAME53.1', 'FRAME11.1', (apv[\"FRAME11\"][\"A\"]/2 + 100), 'ZX plane', 1, 220)\r\n        mprog.add_offset_assembly('FRAME53_1.1', 'FRAME11.1',\r\n                                  (apv[\"FRAME11\"][\"A\"] / 2 + 156), 'XY plane',\r\n                                  1, 221)\r\n        mprog.add_offset_assembly('FRAME53_1.1', 'FRAME11.1', -(\r\n                    apv[\"FRAME11\"][\"B\"] - apv[\"FRAME53\"][\"B\"] - (assmebly_par['Ass_AJ'] - apv[\"FRAME53\"][\"B\"])),\r\n                                  'YZ plane', 0, 222)\r\n        mprog.add_offset_assembly('FRAME53_1.1', 'FRAME11.1', (apv[\"FRAME11\"][\"A\"] / 2 - 70), 'ZX plane', 1, 223)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    #更新\r\n    mprog.update()\r\n    mprog.Close_All()\r\n    # 儲存Product檔\r\n    mprog.saveas(path, 'Product1', '.CATProduct')
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SYEI_stamping_press_system/Assmebly_design.py b/SYEI_stamping_press_system/Assmebly_design.py
--- a/SYEI_stamping_press_system/Assmebly_design.py	
+++ b/SYEI_stamping_press_system/Assmebly_design.py	
@@ -57,7 +57,7 @@
                               -((apv['FRAME2']['E'] - apv['FRAME2']['DD']) - apv['FRAME7']['A'] - apv['FRAME7']['Y']),
                               'XY plane', 0, 25)
     else:
-        mprog.add_offset_assembly('FRAME7.1', 'FRAME2.1', apv['FRAME7']['DD'], 'XY plane', 0, 25)
+        mprog.add_offset_assembly('FRAME7.1', 'FRAME2.1', 0, 'XY plane', 0, 25)
     mprog.add_offset_assembly('FRAME7.1', 'FRAME2.1', -(apv['FRAME2']['B'] - assmebly_par['Ass_B'])-zeta, 'YZ plane', 0, 26)
     if stamping_press_type == 0 or stamping_press_type == 1 or stamping_press_type == 2 or stamping_press_type == 3:
         mprog.add_offset_assembly('FRAME7.1', 'FRAME2.1', assmebly_par['Ass_E'], 'ZX plane', 0, 27)
@@ -244,24 +244,15 @@
     mprog.add_offset_assembly(S_i.CON_ROD_CAP_list[stamping_press_type]+'.1', 'crankshaft.1', apv['crankshaft']['Bx2'], 'XY plane', 0, 227)
     mprog.add_offset_assembly(S_i.CON_ROD_CAP_list[stamping_press_type]+'.1', 'crankshaft.1', (apv['crankshaft']['Ah1']+apv['crankshaft']['Ah2']+apv['crankshaft']['Bh1']+apv['crankshaft']['Bh2']/2), 'YZ plane', 0, 228)
     mprog.add_offset_assembly(S_i.CON_ROD_CAP_list[stamping_press_type]+'.1', 'crankshaft.1', 0, 'ZX plane', 0, 229)
-    mprog.add_offset_assembly(S_i.CON_ROD_BASE_list[stamping_press_type]+'.1', 'crankshaft.1', -(apv['crankshaft']['Bx2']), 'XY plane', 1, 230)
-    mprog.add_offset_assembly(S_i.CON_ROD_BASE_list[stamping_press_type]+'.1', 'crankshaft.1', (apv['crankshaft']['Ah1']+apv['crankshaft']['Ah2']+apv['crankshaft']['Bh1']+apv['crankshaft']['Bh2']/2), 'YZ plane', 0, 231)
-    mprog.add_offset_assembly(S_i.CON_ROD_BASE_list[stamping_press_type]+'.1', 'crankshaft.1', 0, 'ZX plane', 0, 232)
-    mprog.add_offset_assembly(S_i.CON_ROD_list[stamping_press_type]+'.1', S_i.CON_ROD_CAP_list[stamping_press_type]+'.1', (S_assmebly_par['C_R_XY']), 'XY plane', 0, 233)
-    mprog.add_offset_assembly(S_i.CON_ROD_list[stamping_press_type]+'.1', S_i.CON_ROD_CAP_list[stamping_press_type]+'.1', 0, 'YZ plane', 0, 234)
-    mprog.add_offset_assembly(S_i.CON_ROD_list[stamping_press_type]+'.1', S_i.CON_ROD_CAP_list[stamping_press_type]+'.1', 0, 'ZX plane', 0, 235)
     mprog.add_offset_assembly(S_i.PANEL_list[stamping_press_type]+'.1', 'crankshaft.1', 0, 'XY plane', 1, 236)
     mprog.add_offset_assembly(S_i.PANEL_list[stamping_press_type]+'.1', 'crankshaft.1', -10, 'YZ plane', 0, 237)
     mprog.add_offset_assembly(S_i.PANEL_list[stamping_press_type]+'.1', 'crankshaft.1', 0, 'ZX plane', 0, 238)
     mprog.add_offset_assembly(S_i.POINTER_list[stamping_press_type]+'.1', S_i.PANEL_list[stamping_press_type]+'.1', 0, 'XY plane', 1, 239)
     mprog.add_offset_assembly(S_i.POINTER_list[stamping_press_type]+'.1', S_i.PANEL_list[stamping_press_type]+'.1', -10, 'YZ plane', 0, 240)
     mprog.add_offset_assembly(S_i.POINTER_list[stamping_press_type]+'.1', S_i.PANEL_list[stamping_press_type]+'.1', 0, 'ZX plane', 0, 241)
-    mprog.add_offset_assembly(S_i.COVER_list[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['A']), 'XY plane', 0, 242)
-    mprog.add_offset_assembly(S_i.COVER_list[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['F']-(apv['FRAME1']['aaaaa1']+apv['FRAME1']['aaaaa2']+apv['FRAME1']['aaaaa3'])-12), 'YZ plane', 0, 243)
-    mprog.add_offset_assembly(S_i.COVER_list[stamping_press_type]+'.1', 'FRAME1.1', -15, 'ZX plane', 1, 244)
-    mprog.add_offset_assembly(S_i.PLUG_list+'.1', S_i.COVER_list[stamping_press_type]+'.1', -(S_assmebly_par['P_XY']), 'XY plane', 0, 245)
-    mprog.add_offset_assembly(S_i.PLUG_list+'.1', S_i.COVER_list[stamping_press_type]+'.1', (S_assmebly_par['P_YZ']), 'YZ plane', 0, 246)
-    mprog.add_offset_assembly(S_i.PLUG_list+'.1', S_i.COVER_list[stamping_press_type]+'.1', -(S_assmebly_par['P_ZX']), 'ZX plane', 1, 247)
+    # mprog.add_offset_assembly(S_i.COVER_list[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['A']), 'XY plane', 0, 242)
+    # mprog.add_offset_assembly(S_i.COVER_list[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['F']-(apv['FRAME1']['aaaaa1']+apv['FRAME1']['aaaaa2']+apv['FRAME1']['aaaaa3'])-S_assmebly_par['C_YZ']), 'YZ plane', 0, 243)
+    # mprog.add_offset_assembly(S_i.COVER_list[stamping_press_type]+'.1', 'FRAME1.1', -15, 'ZX plane', 1, 244)
     mprog.add_offset_assembly(S_i.slide_gib_list_left[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['E']+apv['FRAME1']['D']), 'XY plane', 0, 248)
     mprog.add_offset_assembly(S_i.slide_gib_list_left[stamping_press_type]+'.1', 'FRAME1.1', (apv['FRAME1']['F']-apv['FRAME1']['G']+S_assmebly_par['SGL_YZ']), 'YZ plane', 1, 249)
     mprog.add_offset_assembly(S_i.slide_gib_list_left[stamping_press_type]+'.1', 'FRAME1.1', -(S_assmebly_par['SGL_ZX']-apv['FRAME1']['CC']/2), 'ZX plane', 0, 250)
@@ -271,33 +262,31 @@
     mprog.add_offset_assembly('OGASKL060_OIL_LEVEL_GAUGE.1', 'FRAME1.1', (apv['FRAME1']['A']-apv['FRAME1']['a1'])+S_assmebly_par['OLG_F_XY'], 'XY plane', 1, 254)
     mprog.add_offset_assembly('OGASKL060_OIL_LEVEL_GAUGE.1', 'FRAME1.1', -((apv['FRAME1']['F']-apv['FRAME1']['G']-apv['FRAME1']['b'])-S_assmebly_par['OLG_F_YZ']), 'YZ plane', 0, 255)
     mprog.add_offset_assembly('OGASKL060_OIL_LEVEL_GAUGE.1', 'FRAME1.1', -(apv['FRAME1']['CC']/2+S_assmebly_par['OLG_F_ZX']), 'ZX plane', 1, 256)
-    mprog.add_offset_assembly(S_i.OIL_LEVEL_GAUGE_list_CON_ROD[stamping_press_type]+'.1', S_i.CON_ROD_list[stamping_press_type]+'.1', -(S_assmebly_par['PLG_C_XY']), 'XY plane', 1, 257)
-    mprog.add_offset_assembly(S_i.OIL_LEVEL_GAUGE_list_CON_ROD[stamping_press_type]+'.1', S_i.CON_ROD_list[stamping_press_type]+'.1', -(S_assmebly_par['PLG_C_YZ']), 'YZ plane', 0, 258)
-    mprog.add_offset_assembly(S_i.OIL_LEVEL_GAUGE_list_CON_ROD[stamping_press_type]+'.1', S_i.CON_ROD_list[stamping_press_type]+'.1', (S_assmebly_par['PLG_C_ZX']), 'ZX plane', 0, 259)
     mprog.add_offset_assembly('EWR60S01_ELECTRIC_BOX_PLATE.1', 'FRAME2.1', -(apv['FRAME2']['w4']-apv['FRAME2']['kk1']-S_assmebly_par['EBP_XY']), 'XY plane', 0, 260)
     mprog.add_offset_assembly('EWR60S01_ELECTRIC_BOX_PLATE.1', 'FRAME2.1', -(apv['FRAME2']['F']-apv['FRAME2']['G']-apv['FRAME2']['jj']+apv['FRAME2']['ll1']-S_assmebly_par['EBP_YZ']), 'YZ plane', 0, 261)
     mprog.add_offset_assembly('EWR60S01_ELECTRIC_BOX_PLATE.1', 'FRAME2.1', -(apv['FRAME2']['CC']/2), 'ZX plane', 0, 262)
     mprog.add_offset_assembly('EWR60S01_ELECTRIC_BOX_PLATE.2', 'EWR60S01_ELECTRIC_BOX_PLATE.1', 0, 'XY plane', 0, 263)
-    mprog.add_offset_assembly('EWR60S01_ELECTRIC_BOX_PLATE.2', 'EWR60S01_ELECTRIC_BOX_PLATE.1', -(apv['FRAME2']['ll1']+apv['FRAME2']['ll2']), 'YZ plane', 0, 264)
+    mprog.add_offset_assembly('EWR60S01_ELECTRIC_BOX_PLATE.2', 'EWR60S01_ELECTRIC_BOX_PLATE.1', (apv['FRAME2']['ll1']+apv['FRAME2']['ll2']), 'YZ plane', 0, 264)
     mprog.add_offset_assembly('EWR60S01_ELECTRIC_BOX_PLATE.2', 'EWR60S01_ELECTRIC_BOX_PLATE.1', 0, 'ZX plane', 0, 265)
-    mprog.add_offset_assembly(S_i.ELECTRIC_BOX_list_normal[stamping_press_type]+'.1', 'EWR60S01_ELECTRIC_BOX_PLATE.1', -(S_assmebly_par['EBP_XY']+S_assmebly_par['EB_XY']), 'XY plane', 0, 266)
+    mprog.add_offset_assembly(S_i.ELECTRIC_BOX_list_normal[stamping_press_type]+'.1', 'EWR60S01_ELECTRIC_BOX_PLATE.1', -(S_assmebly_par['EB_XY']), 'XY plane', 0, 266)
     mprog.add_offset_assembly(S_i.ELECTRIC_BOX_list_normal[stamping_press_type]+'.1', 'EWR60S01_ELECTRIC_BOX_PLATE.1', -(S_assmebly_par['EBP_YZ']+S_assmebly_par['EB_YZ']), 'YZ plane', 0, 267)
     mprog.add_offset_assembly(S_i.ELECTRIC_BOX_list_normal[stamping_press_type]+'.1', 'EWR60S01_ELECTRIC_BOX_PLATE.1', 0, 'ZX plane', 0, 268)
     mprog.add_offset_assembly('EGPSSGD1000IS_MOUNT_FILTER.1', 'FRAME1.1', (apv['FRAME1']['e4']+apv['FRAME1']['e3']), 'XY plane', 1, 278)
     mprog.add_offset_assembly('EGPSSGD1000IS_MOUNT_FILTER.1', 'FRAME1.1', -(apv['FRAME1']['g']-(apv['FRAME1']['d']-apv['FRAME1']['i'])), 'YZ plane', 0, 279)
     mprog.add_offset_assembly('EGPSSGD1000IS_MOUNT_FILTER.1', 'FRAME1.1', -(apv['FRAME1']['CC']/2), 'ZX plane', 1, 280)
-    mprog.add_offset_assembly(S_i.TRADEMARK_NAMEPLATE_list_normal[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['A']-S_assmebly_par['TN_XY ']), 'XY plane', 0, 281)
-    mprog.add_offset_assembly(S_i.TRADEMARK_NAMEPLATE_list_normal[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['F']-S_assmebly_par['TN_YZ']), 'YZ plane', 1, 282)
-    mprog.add_offset_assembly(S_i.TRADEMARK_NAMEPLATE_list_normal[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['CC']/2), 'ZX plane', 0, 283)
+    mprog.add_offset_assembly(S_i.TRADEMARK_NAMEPLATE_list_normal[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['A']-S_assmebly_par['TN_XY']), 'XY plane', 0, 281)
+    mprog.add_offset_assembly(S_i.TRADEMARK_NAMEPLATE_list_normal[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['F']-S_assmebly_par['TN_YZ']), 'YZ plane', 0, 282)
+    mprog.add_offset_assembly(S_i.TRADEMARK_NAMEPLATE_list_normal[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['CC']/2), 'ZX plane', 1, 283)
     mprog.add_offset_assembly(S_i.TRADEMARK_NAMEPLATE_list_normal[stamping_press_type]+'.2', 'FRAME2.1', -(apv['FRAME1']['A']-S_assmebly_par['TN_XY']), 'XY plane', 0, 284)
     mprog.add_offset_assembly(S_i.TRADEMARK_NAMEPLATE_list_normal[stamping_press_type]+'.2', 'FRAME2.1', (apv['FRAME1']['F']-S_assmebly_par['TN_YZ']+S_assmebly_par['TN_2_YZ']), 'YZ plane', 1, 285)
     mprog.add_offset_assembly(S_i.TRADEMARK_NAMEPLATE_list_normal[stamping_press_type]+'.2', 'FRAME2.1', -(apv['FRAME1']['CC']/2), 'ZX plane', 0, 286)
     mprog.add_offset_assembly(S_i.NAME_PLATE_list_normal[stamping_press_type]+'.1', 'FRAME30.1', -(apv['FRAME30']['A']-S_assmebly_par['NP_XY']), 'XY plane', 0, 287)
     mprog.add_offset_assembly(S_i.NAME_PLATE_list_normal[stamping_press_type]+'.1', 'FRAME30.1', -(apv['FRAME30']['M']+S_assmebly_par['NP_YZ']), 'YZ plane', 0, 288)
     mprog.add_offset_assembly(S_i.NAME_PLATE_list_normal[stamping_press_type]+'.1', 'FRAME30.1', -(apv['FRAME30']['E']-S_assmebly_par['NP_ZX']), 'ZX plane', 1, 289)
-    mprog.add_offset_assembly(S_i.GUARD_FLYWHEEL_list_normal[stamping_press_type]+'.1', 'FRAME30.1', (S_assmebly_par['GF_XY']), 'XY plane', 1, 290)
-    mprog.add_offset_assembly(S_i.GUARD_FLYWHEEL_list_normal[stamping_press_type]+'.1', 'FRAME30.1', 0, 'YZ plane', 1, 291)
-    mprog.add_offset_assembly(S_i.GUARD_FLYWHEEL_list_normal[stamping_press_type]+'.1', 'FRAME30.1', (S_assmebly_par['GF_ZX']), 'ZX plane', 0, 292)
+    mprog.add_offset_assembly(S_i.GUARD_FLYWHEEL_list_normal[stamping_press_type]+'.1', 'FRAME1.1', (S_assmebly_par['GF_XY']), 'XY plane', 1, 290)
+    mprog.add_offset_assembly(S_i.GUARD_FLYWHEEL_list_normal[stamping_press_type]+'.1', 'FRAME1.1', 0, 'YZ plane', 1, 291)
+    mprog.add_offset_assembly(S_i.GUARD_FLYWHEEL_list_normal[stamping_press_type]+'.1', 'FRAME1.1', (S_assmebly_par['GF_ZX']), 'ZX plane', 0, 292)
+
 
 
 
@@ -1043,7 +1032,7 @@
         mprog.add_offset_assembly(S_i.PANEL_BOX_BRACKET_list_normal[stamping_press_type] + '.1', S_i.ELECTRIC_BOX_list_normal[stamping_press_type] + '.1',
                                   (S_assmebly_par['PBB_XY']), 'XY plane', 0, 269)
         mprog.add_offset_assembly(S_i.PANEL_BOX_BRACKET_list_normal[stamping_press_type] + '.1', S_i.ELECTRIC_BOX_list_normal[stamping_press_type] + '.1',
-                                  (S_assmebly_par['PBB_YZ']), 'YZ plane', 0, 270)
+                                  -(S_assmebly_par['PBB_YZ']), 'YZ plane', 0, 270)
         mprog.add_offset_assembly(S_i.PANEL_BOX_BRACKET_list_normal[stamping_press_type] + '.1', S_i.ELECTRIC_BOX_list_normal[stamping_press_type] + '.1', (S_assmebly_par['PBB_ZX']),
                                   'ZX plane', 1, 271)
         mprog.add_offset_assembly(S_i.PANEL_BOX_list_normal[stamping_press_type] + '.1',S_i.PANEL_BOX_BRACKET_list_normal[stamping_press_type] + '.1',
@@ -1058,6 +1047,24 @@
                                   -(S_assmebly_par['CP_YZ']), 'YZ plane', 1, 276)
         mprog.add_offset_assembly(S_i.CONTROL_PANEL_list_normal[stamping_press_type] + '.1',S_i.PANEL_BOX_list_normal[stamping_press_type] + '.1', -(S_assmebly_par['CP_ZX']),
                                   'ZX plane', 1, 277)
+        mprog.add_offset_assembly(S_i.CON_ROD_BASE_list[stamping_press_type]+'.1', 'crankshaft.1', -(apv['crankshaft']['Bx2']), 'XY plane', 1, 230)
+        mprog.add_offset_assembly(S_i.CON_ROD_BASE_list[stamping_press_type]+'.1', 'crankshaft.1', (apv['crankshaft']['Ah1']+apv['crankshaft']['Ah2']+apv['crankshaft']['Bh1']+apv['crankshaft']['Bh2']/2), 'YZ plane', 0, 231)
+        mprog.add_offset_assembly(S_i.CON_ROD_BASE_list[stamping_press_type]+'.1', 'crankshaft.1', 0, 'ZX plane', 0, 232)
+        mprog.add_offset_assembly(S_i.CON_ROD_list[stamping_press_type]+'.1', S_i.CON_ROD_CAP_list[stamping_press_type]+'.1', (S_assmebly_par['C_R_XY']), 'XY plane', 0, 233)
+        mprog.add_offset_assembly(S_i.CON_ROD_list[stamping_press_type]+'.1', S_i.CON_ROD_CAP_list[stamping_press_type]+'.1', 0, 'YZ plane', 0, 234)
+        mprog.add_offset_assembly(S_i.CON_ROD_list[stamping_press_type]+'.1', S_i.CON_ROD_CAP_list[stamping_press_type]+'.1', 0, 'ZX plane', 0, 235)
+        mprog.add_offset_assembly(S_i.COVER_list[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['A']), 'XY plane', 0, 242)
+        mprog.add_offset_assembly(S_i.COVER_list[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['F']-(apv['FRAME1']['aaaaa1']+apv['FRAME1']['aaaaa2']+apv['FRAME1']['aaaaa3'])-S_assmebly_par['C_YZ']), 'YZ plane', 0, 243)
+        mprog.add_offset_assembly(S_i.COVER_list[stamping_press_type]+'.1', 'FRAME1.1', -15, 'ZX plane', 1, 244)
+        mprog.add_offset_assembly(S_i.PLUG_list+'.1', S_i.COVER_list[stamping_press_type]+'.1', -(S_assmebly_par['P_XY']), 'XY plane', 0, 245)
+        mprog.add_offset_assembly(S_i.PLUG_list+'.1', S_i.COVER_list[stamping_press_type]+'.1', (S_assmebly_par['P_YZ']), 'YZ plane', 0, 246)
+        mprog.add_offset_assembly(S_i.PLUG_list+'.1', S_i.COVER_list[stamping_press_type]+'.1', -(S_assmebly_par['P_ZX']), 'ZX plane', 1, 247)
+        mprog.add_offset_assembly(S_i.OIL_LEVEL_GAUGE_list_CON_ROD[stamping_press_type]+'.1', S_i.CON_ROD_list[stamping_press_type]+'.1', -(S_assmebly_par['PLG_C_XY']), 'XY plane', 1, 257)
+        mprog.add_offset_assembly(S_i.OIL_LEVEL_GAUGE_list_CON_ROD[stamping_press_type]+'.1', S_i.CON_ROD_list[stamping_press_type]+'.1', -(S_assmebly_par['PLG_C_YZ']), 'YZ plane', 0, 258)
+        mprog.add_offset_assembly(S_i.OIL_LEVEL_GAUGE_list_CON_ROD[stamping_press_type]+'.1', S_i.CON_ROD_list[stamping_press_type]+'.1', (S_assmebly_par['PLG_C_ZX']), 'ZX plane', 0, 259)
+        mprog.add_offset_assembly('BALL_SCREW.1', S_i.CON_ROD_list[stamping_press_type]+'.1', (assmebly_par['Ass_AK']), 'XY plane', 0, 293)
+        mprog.add_offset_assembly('BALL_SCREW.1', S_i.CON_ROD_list[stamping_press_type]+'.1', 0, 'YZ plane', 0, 294)
+        mprog.add_offset_assembly('BALL_SCREW.1', S_i.CON_ROD_list[stamping_press_type]+'.1', -apv['BALL_SCREW']['Z']/2, 'ZX plane', 0, 295)
 
     elif stamping_press_type == 8:
         mprog.add_offset_assembly('FRAME15.1', 'FRAME1.1', -(
@@ -1240,6 +1247,56 @@
                     apv["FRAME11"]["B"] - apv["FRAME53"]["B"] - (assmebly_par['Ass_AJ'] - apv["FRAME53"]["B"])),
                                   'YZ plane', 0, 222)
         mprog.add_offset_assembly('FRAME53_1.1', 'FRAME11.1', (apv["FRAME11"]["A"] / 2 - 70), 'ZX plane', 1, 223)
+        # STP組立部分
+        mprog.add_offset_assembly(S_i.PANEL_BOX_BRACKET_list_normal[stamping_press_type] + '.1',
+                                  S_i.ELECTRIC_BOX_list_normal[stamping_press_type] + '.1',
+                                  (S_assmebly_par['PBB_XY']), 'XY plane', 0, 269)
+        mprog.add_offset_assembly(S_i.PANEL_BOX_BRACKET_list_normal[stamping_press_type] + '.1',
+                                  S_i.ELECTRIC_BOX_list_normal[stamping_press_type] + '.1',
+                                  -(S_assmebly_par['PBB_YZ']), 'YZ plane', 0, 270)
+        mprog.add_offset_assembly(S_i.PANEL_BOX_BRACKET_list_normal[stamping_press_type] + '.1',
+                                  S_i.ELECTRIC_BOX_list_normal[stamping_press_type] + '.1', (S_assmebly_par['PBB_ZX']),
+                                  'ZX plane', 1, 271)
+        mprog.add_offset_assembly(S_i.PANEL_BOX_list_normal[stamping_press_type] + '.1',
+                                  S_i.PANEL_BOX_BRACKET_list_normal[stamping_press_type] + '.1',
+                                  (S_assmebly_par['PB_XY']), 'XY plane', 0, 272)
+        mprog.add_offset_assembly(S_i.PANEL_BOX_list_normal[stamping_press_type] + '.1',
+                                  S_i.PANEL_BOX_BRACKET_list_normal[stamping_press_type] + '.1',
+                                  (S_assmebly_par['PB_YZ']), 'YZ plane', 1, 273)
+        mprog.add_offset_assembly(S_i.PANEL_BOX_list_normal[stamping_press_type] + '.1',
+                                  S_i.PANEL_BOX_BRACKET_list_normal[stamping_press_type] + '.1',
+                                  -(S_assmebly_par['PB_ZX']),
+                                  'ZX plane', 1, 274)
+        mprog.add_offset_assembly(S_i.CONTROL_PANEL_list_normal[stamping_press_type] + '.1',
+                                  S_i.PANEL_BOX_list_normal[stamping_press_type] + '.1',
+                                  (S_assmebly_par['CP_XY']), 'XY plane', 1, 275)
+        mprog.add_offset_assembly(S_i.CONTROL_PANEL_list_normal[stamping_press_type] + '.1',
+                                  S_i.PANEL_BOX_list_normal[stamping_press_type] + '.1',
+                                  -(S_assmebly_par['CP_YZ']), 'YZ plane', 0, 276)
+        mprog.add_offset_assembly(S_i.CONTROL_PANEL_list_normal[stamping_press_type] + '.1',
+                                  S_i.PANEL_BOX_list_normal[stamping_press_type] + '.1', -(S_assmebly_par['CP_ZX']),
+                                  'ZX plane', 1, 277)
+        mprog.add_offset_assembly(S_i.CON_ROD_BASE_list[stamping_press_type]+'.1', 'crankshaft.1', (apv['crankshaft']['Bx2']), 'XY plane', 0, 230)
+        mprog.add_offset_assembly(S_i.CON_ROD_BASE_list[stamping_press_type]+'.1', 'crankshaft.1', (apv['crankshaft']['Ah1']+apv['crankshaft']['Ah2']+apv['crankshaft']['Bh1']+apv['crankshaft']['Bh2']/2), 'YZ plane', 0, 231)
+        mprog.add_offset_assembly(S_i.CON_ROD_BASE_list[stamping_press_type]+'.1', 'crankshaft.1', 0, 'ZX plane', 0, 232)
+        mprog.add_offset_assembly(S_i.CON_ROD_list[stamping_press_type]+'.1', S_i.CON_ROD_CAP_list[stamping_press_type]+'.1', (S_assmebly_par['C_R_XY']), 'XY plane', 0, 233)
+        mprog.add_offset_assembly(S_i.CON_ROD_list[stamping_press_type]+'.1', S_i.CON_ROD_CAP_list[stamping_press_type]+'.1', 0, 'YZ plane', 0, 234)
+        mprog.add_offset_assembly(S_i.CON_ROD_list[stamping_press_type]+'.1', S_i.CON_ROD_CAP_list[stamping_press_type]+'.1', 0, 'ZX plane', 1, 235)
+        mprog.add_offset_assembly(S_i.COVER_list[stamping_press_type]+'.1', 'FRAME1.1', (apv['FRAME1']['A']), 'XY plane', 1, 242)
+        mprog.add_offset_assembly(S_i.COVER_list[stamping_press_type]+'.1', 'FRAME1.1', -(apv['FRAME1']['F']-(apv['FRAME1']['aaaaa1']+apv['FRAME1']['aaaaa2']+apv['FRAME1']['aaaaa3'])-S_assmebly_par['C_YZ']), 'YZ plane', 0, 243)
+        mprog.add_offset_assembly(S_i.COVER_list[stamping_press_type]+'.1', 'FRAME1.1', S_assmebly_par['C_ZX'], 'ZX plane', 0, 244)
+        mprog.add_offset_assembly(S_i.PLUG_list + '.1', S_i.COVER_list[stamping_press_type] + '.1',
+                                  -(S_assmebly_par['P_XY']), 'XY plane', 1, 245)
+        mprog.add_offset_assembly(S_i.PLUG_list + '.1', S_i.COVER_list[stamping_press_type] + '.1',
+                                  (S_assmebly_par['P_YZ']), 'YZ plane', 0, 246)
+        mprog.add_offset_assembly(S_i.PLUG_list + '.1', S_i.COVER_list[stamping_press_type] + '.1',
+                                  -(S_assmebly_par['P_ZX']), 'ZX plane', 0, 247)
+        mprog.add_offset_assembly(S_i.OIL_LEVEL_GAUGE_list_CON_ROD[stamping_press_type]+'.1', S_i.CON_ROD_list[stamping_press_type]+'.1', -(S_assmebly_par['PLG_C_XY']), 'XY plane', 1, 257)
+        mprog.add_offset_assembly(S_i.OIL_LEVEL_GAUGE_list_CON_ROD[stamping_press_type]+'.1', S_i.CON_ROD_list[stamping_press_type]+'.1', -(S_assmebly_par['PLG_C_YZ']), 'YZ plane', 0, 258)
+        mprog.add_offset_assembly(S_i.OIL_LEVEL_GAUGE_list_CON_ROD[stamping_press_type]+'.1', S_i.CON_ROD_list[stamping_press_type]+'.1', (S_assmebly_par['PLG_C_ZX']), 'ZX plane', 1, 259)
+        mprog.add_offset_assembly('BALL_SCREW.1', S_i.CON_ROD_list[stamping_press_type]+'.1', (assmebly_par['Ass_AK']), 'XY plane', 0, 293)
+        mprog.add_offset_assembly('BALL_SCREW.1', S_i.CON_ROD_list[stamping_press_type]+'.1', 0, 'YZ plane', 0, 294)
+        mprog.add_offset_assembly('BALL_SCREW.1', S_i.CON_ROD_list[stamping_press_type]+'.1', -apv['BALL_SCREW']['Z']/2, 'ZX plane', 1, 295)
 
 
 
